<?xml version="1.0"?>
<?xml-stylesheet href="chrome://browser/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://browser/skin/devtools/common.css" type="text/css"?>
<?xml-stylesheet href="chrome://browser/skin/devtools/splitview.css" type="text/css"?>
<?xml-stylesheet href="chrome://browser/content/splitview.css" type="text/css"?>
<?xml-stylesheet href="chrome://browser/content/profiler.css" type="text/css"?>
<?xml-stylesheet href="chrome://Firecrow/skin/Firecrow.css" type="text/css"?>

<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" title="Slicing Information Window">

    <vbox id="sourceCodeContainer" style="width: 100%; height: 500px" flex="1"></vbox>
    <hbox horizontalAlign="right" align="right" style="width: 100%; margin-top: 5px; margin-bottom: 5px">
        <toolbarbutton class="devtools-toolbarbutton" tooltiptext="Save file" disabled="false" id="saveFileButton" value="Save file"/>
    </hbox>
    <vbox id="informationContainer" style="width: 800px; height: 100px; overflow: auto; border-top-style: solid; border-color: #2e373d; margin-top:5px"></vbox>

    <script><![CDATA[
        var Cu = Components.utils;
        var Ci = Components.interfaces;

        Cu.import("resource:///modules/devtools/sourceeditor/source-editor.jsm");
        Cu.import("chrome://Firecrow/content/helpers/FileHelper.js")


        var informationContainer = document.getElementById("informationContainer");
        var sourceCodeContainer = document.getElementById("sourceCodeContainer");
        var editor = null;
        var defaultText = "---- PERFORMING SLICING - WAITING FOR RESULT ---- Firefox might become unresponsive!";
        var generatedSource = null;


        window.onload = function()
        {
            editor = new SourceEditor();

            editor.init
            (
                sourceCodeContainer,
                {
                    mode: SourceEditor.MODES.HTML,
                    readOnly: true,
                    showLineNumbers: true,
                    showAnnotationRuler: true,
                    showOverviewRuler: true,
                    initialText: defaultText
                },
                function()
                {
                    editor.setText(defaultText);
                }
            );

            var saveFileButton = document.getElementById("saveFileButton");

            saveFileButton.onclick = function()
            {
                if(generatedSource == null) { alert("There is no code to save!"); return; }

                var pickedFile = FileHelper.userPickFile(window, "Save to file");

                if(pickedFile)
                {
                    FileHelper.writeToFile(pickedFile, generatedSource);
                    logMessage("Sliced code written to: " + pickedFile);
                }
            };
        }

        function logMessage(message)
        {
            var label = document.createElement("div");
            label.textContent = "----" + getCurrentTime() + ": " + message ;
            informationContainer.appendChild(label);
            informationContainer.scrollTop = informationContainer.scrollHeight;
        }

        function setSourceCode(sourceCode)
        {
            if(editor == null) { logMessage("Error, editor is not ready"); return; }

            generatedSource = sourceCode;

            try
            {
                editor.setText(sourceCode);
            }
            catch(e)
            {
                logMessage("Error while trying to display source code: " + e);
                defaultText = sourceCode;
            }
        }

        function getCurrentTime()
        {
            var date = new Date();
            return date.getDate() + "/" + (date.getMonth()+1)  + "/" + date.getFullYear() + " "
                  + (date.getHours() < 10 ? "0" + date.getHours() : date.getHours())
                  + ":" + (date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes());
        }

        logMessage("Getting page model");
    ]]></script>
</window>