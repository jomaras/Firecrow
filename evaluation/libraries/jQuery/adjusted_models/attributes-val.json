{"type":"html","attributes":[{"name":"xmlns","value":"http://www.w3.org/1999/xhtml"},{"name":"xml:lang","value":"en"},{"name":"lang","value":"en"},{"name":"dir","value":"ltr"},{"name":"id","value":"html"}],"childNodes":[{"type":"head","childNodes":[{"type":"textNode","textContent":"\n    "},{"type":"meta","attributes":[{"name":"http-equiv","value":"Content-Type"},{"name":"content","value":"text/html; charset=utf-8"}]},{"type":"textNode","textContent":"\n    "},{"type":"meta","attributes":[{"name":"http-equiv","value":"X-UA-Compatible"},{"name":"content","value":"IE=Edge"}]},{"type":"textNode","textContent":"\n    "},{"type":"title","childNodes":[{"type":"textNode","textContent":"jQuery Test Suite"}]},{"type":"textNode","textContent":"\n    "},{"type":"script","attributes":[{"name":"src","value":"../jQuery-src.js"}],"textContent":"/*!\r\n * jQuery JavaScript Library v1.10.2\r\n * http://jquery.com/\r\n *\r\n * Includes Sizzle.js\r\n * http://sizzlejs.com/\r\n *\r\n * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors\r\n * Released under the MIT license\r\n * http://jquery.org/license\r\n *\r\n * Date: 2013-07-03T13:48Z\r\n */\r\n(function( window, undefined ) {\r\n\r\n// Can't do this because several apps including ASP.NET trace\r\n// the stack via arguments.caller.callee and Firefox dies if\r\n// you try to trace through \"use strict\" call chains. (#13335)\r\n// Support: Firefox 18+\r\n//\"use strict\";\r\n    var\r\n    // The deferred used on DOM ready\r\n        readyList,\r\n\r\n    // A central reference to the root jQuery(document)\r\n        rootjQuery,\r\n\r\n    // Support: IE<10\r\n    // For `typeof xmlNode.method` instead of `xmlNode.method !== undefined`\r\n        core_strundefined = typeof undefined,\r\n\r\n    // Use the correct document accordingly with window argument (sandbox)\r\n        location = window.location,\r\n        document = window.document,\r\n        docElem = document.documentElement,\r\n\r\n    // Map over jQuery in case of overwrite\r\n        _jQuery = window.jQuery,\r\n\r\n    // Map over the $ in case of overwrite\r\n        _$ = window.$,\r\n\r\n    // [[Class]] -> type pairs\r\n        class2type = {},\r\n\r\n    // List of deleted data cache ids, so we can reuse them\r\n        core_deletedIds = [],\r\n\r\n        core_version = \"1.10.2\",\r\n\r\n    // Save a reference to some core methods\r\n        core_concat = core_deletedIds.concat,\r\n        core_push = core_deletedIds.push,\r\n        core_slice = core_deletedIds.slice,\r\n        core_indexOf = core_deletedIds.indexOf,\r\n        core_toString = class2type.toString,\r\n        core_hasOwn = class2type.hasOwnProperty,\r\n        core_trim = core_version.trim,\r\n\r\n    // Define a local copy of jQuery\r\n        jQuery = function( selector, context ) {\r\n            // The jQuery object is actually just the init constructor 'enhanced'\r\n            return new jQuery.fn.init( selector, context, rootjQuery );\r\n        },\r\n\r\n    // Used for matching numbers\r\n        core_pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,\r\n\r\n    // Used for splitting on whitespace\r\n        core_rnotwhite = /\\S+/g,\r\n\r\n    // Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)\r\n        rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\r\n\r\n    // A simple way to check for HTML strings\r\n    // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\r\n    // Strict HTML recognition (#11290: must start with <)\r\n        rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\r\n\r\n    // Match a standalone tag\r\n        rsingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n\r\n    // JSON RegExp\r\n        rvalidchars = /^[\\],:{}\\s]*$/,\r\n        rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g,\r\n        rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,\r\n        rvalidtokens = /\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d+\\.|)\\d+(?:[eE][+-]?\\d+|)/g,\r\n\r\n    // Matches dashed string for camelizing\r\n        rmsPrefix = /^-ms-/,\r\n        rdashAlpha = /-([\\da-z])/gi,\r\n\r\n    // Used by jQuery.camelCase as callback to replace()\r\n        fcamelCase = function( all, letter ) {\r\n            return letter.toUpperCase();\r\n        },\r\n\r\n    // The ready event handler\r\n        completed = function( event ) {\r\n\r\n            // readyState === \"complete\" is good enough for us to call the dom ready in oldIE\r\n            if ( document.addEventListener || event.type === \"load\" || document.readyState === \"complete\" ) {\r\n                detach();\r\n                jQuery.ready();\r\n            }\r\n        },\r\n    // Clean-up method for dom ready events\r\n        detach = function() {\r\n            if ( document.addEventListener ) {\r\n                document.removeEventListener( \"DOMContentLoaded\", completed, false );\r\n                window.removeEventListener( \"load\", completed, false );\r\n\r\n            } else {\r\n                document.detachEvent( \"onreadystatechange\", completed );\r\n                window.detachEvent( \"onload\", completed );\r\n            }\r\n        };\r\n\r\n    jQuery.fn = jQuery.prototype = {\r\n        // The current version of jQuery being used\r\n        jquery: core_version,\r\n\r\n        constructor: jQuery,\r\n        init: function( selector, context, rootjQuery ) {\r\n            var match, elem;\r\n\r\n            // HANDLE: $(\"\"), $(null), $(undefined), $(false)\r\n            if ( !selector ) {\r\n                return this;\r\n            }\r\n\r\n            // Handle HTML strings\r\n            if ( typeof selector === \"string\" ) {\r\n                if ( selector.charAt(0) === \"<\" && selector.charAt( selector.length - 1 ) === \">\" && selector.length >= 3 ) {\r\n                    // Assume that strings that start and end with <> are HTML and skip the regex check\r\n                    match = [ null, selector, null ];\r\n\r\n                } else {\r\n                    match = rquickExpr.exec( selector );\r\n                }\r\n\r\n                // Match html or make sure no context is specified for #id\r\n                if ( match && (match[1] || !context) ) {\r\n\r\n                    // HANDLE: $(html) -> $(array)\r\n                    if ( match[1] ) {\r\n                        context = context instanceof jQuery ? context[0] : context;\r\n\r\n                        // scripts is true for back-compat\r\n                        jQuery.merge( this, jQuery.parseHTML(\r\n                            match[1],\r\n                            context && context.nodeType ? context.ownerDocument || context : document,\r\n                            true\r\n                        ) );\r\n\r\n                        // HANDLE: $(html, props)\r\n                        if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\r\n                            for ( match in context ) {\r\n                                // Properties of context are called as methods if possible\r\n                                if ( jQuery.isFunction( this[ match ] ) ) {\r\n                                    this[ match ]( context[ match ] );\r\n\r\n                                    // ...and otherwise set as attributes\r\n                                } else {\r\n                                    this.attr( match, context[ match ] );\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        return this;\r\n\r\n                        // HANDLE: $(#id)\r\n                    } else {\r\n                        elem = document.getElementById( match[2] );\r\n\r\n                        // Check parentNode to catch when Blackberry 4.6 returns\r\n                        // nodes that are no longer in the document #6963\r\n                        if ( elem && elem.parentNode ) {\r\n                            // Handle the case where IE and Opera return items\r\n                            // by name instead of ID\r\n                            if ( elem.id !== match[2] ) {\r\n                                return rootjQuery.find( selector );\r\n                            }\r\n\r\n                            // Otherwise, we inject the element directly into the jQuery object\r\n                            this.length = 1;\r\n                            this[0] = elem;\r\n                        }\r\n\r\n                        this.context = document;\r\n                        this.selector = selector;\r\n                        return this;\r\n                    }\r\n\r\n                    // HANDLE: $(expr, $(...))\r\n                } else if ( !context || context.jquery ) {\r\n                    return ( context || rootjQuery ).find( selector );\r\n\r\n                    // HANDLE: $(expr, context)\r\n                    // (which is just equivalent to: $(context).find(expr)\r\n                } else {\r\n                    return this.constructor( context ).find( selector );\r\n                }\r\n\r\n                // HANDLE: $(DOMElement)\r\n            } else if ( selector.nodeType ) {\r\n                this.context = this[0] = selector;\r\n                this.length = 1;\r\n                return this;\r\n\r\n                // HANDLE: $(function)\r\n                // Shortcut for document ready\r\n            } else if ( jQuery.isFunction( selector ) ) {\r\n                return rootjQuery.ready( selector );\r\n            }\r\n\r\n            if ( selector.selector !== undefined ) {\r\n                this.selector = selector.selector;\r\n                this.context = selector.context;\r\n            }\r\n\r\n            return jQuery.makeArray( selector, this );\r\n        },\r\n\r\n        // Start with an empty selector\r\n        selector: \"\",\r\n\r\n        // The default length of a jQuery object is 0\r\n        length: 0,\r\n\r\n        toArray: function() {\r\n            return core_slice.call( this );\r\n        },\r\n\r\n        // Get the Nth element in the matched element set OR\r\n        // Get the whole matched element set as a clean array\r\n        get: function( num ) {\r\n            return num == null ?\r\n\r\n                // Return a 'clean' array\r\n                this.toArray() :\r\n\r\n                // Return just the object\r\n                ( num < 0 ? this[ this.length + num ] : this[ num ] );\r\n        },\r\n\r\n        // Take an array of elements and push it onto the stack\r\n        // (returning the new matched element set)\r\n        pushStack: function( elems ) {\r\n\r\n            // Build a new jQuery matched element set\r\n            var ret = jQuery.merge( this.constructor(), elems );\r\n\r\n            // Add the old object onto the stack (as a reference)\r\n            ret.prevObject = this;\r\n            ret.context = this.context;\r\n\r\n            // Return the newly-formed element set\r\n            return ret;\r\n        },\r\n\r\n        // Execute a callback for every element in the matched set.\r\n        // (You can seed the arguments with an array of args, but this is\r\n        // only used internally.)\r\n        each: function( callback, args ) {\r\n            return jQuery.each( this, callback, args );\r\n        },\r\n\r\n        ready: function( fn ) {\r\n            // Add the callback\r\n            jQuery.ready.promise().done( fn );\r\n\r\n            return this;\r\n        },\r\n\r\n        slice: function() {\r\n            return this.pushStack( core_slice.apply( this, arguments ) );\r\n        },\r\n\r\n        first: function() {\r\n            return this.eq( 0 );\r\n        },\r\n\r\n        last: function() {\r\n            return this.eq( -1 );\r\n        },\r\n\r\n        eq: function( i ) {\r\n            var len = this.length,\r\n                j = +i + ( i < 0 ? len : 0 );\r\n            return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );\r\n        },\r\n\r\n        map: function( callback ) {\r\n            return this.pushStack( jQuery.map(this, function( elem, i ) {\r\n                return callback.call( elem, i, elem );\r\n            }));\r\n        },\r\n\r\n        end: function() {\r\n            return this.prevObject || this.constructor(null);\r\n        },\r\n\r\n        // For internal use only.\r\n        // Behaves like an Array's method, not like a jQuery method.\r\n        push: core_push,\r\n        sort: [].sort,\r\n        splice: [].splice\r\n    };\r\n\r\n// Give the init function the jQuery prototype for later instantiation\r\n    jQuery.fn.init.prototype = jQuery.fn;\r\n\r\n    jQuery.extend = jQuery.fn.extend = function() {\r\n        var src, copyIsArray, copy, name, options, clone,\r\n            target = arguments[0] || {},\r\n            i = 1,\r\n            length = arguments.length,\r\n            deep = false;\r\n\r\n        // Handle a deep copy situation\r\n        if ( typeof target === \"boolean\" ) {\r\n            deep = target;\r\n            target = arguments[1] || {};\r\n            // skip the boolean and the target\r\n            i = 2;\r\n        }\r\n\r\n        // Handle case when target is a string or something (possible in deep copy)\r\n        if ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\r\n            target = {};\r\n        }\r\n\r\n        // extend jQuery itself if only one argument is passed\r\n        if ( length === i ) {\r\n            target = this;\r\n            --i;\r\n        }\r\n\r\n        for ( ; i < length; i++ ) {\r\n            // Only deal with non-null/undefined values\r\n            if ( (options = arguments[ i ]) != null ) {\r\n                // Extend the base object\r\n                for ( name in options ) {\r\n                    src = target[ name ];\r\n                    copy = options[ name ];\r\n\r\n                    // Prevent never-ending loop\r\n                    if ( target === copy ) {\r\n                        continue;\r\n                    }\r\n\r\n                    // Recurse if we're merging plain objects or arrays\r\n                    if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\r\n                        if ( copyIsArray ) {\r\n                            copyIsArray = false;\r\n                            clone = src && jQuery.isArray(src) ? src : [];\r\n\r\n                        } else {\r\n                            clone = src && jQuery.isPlainObject(src) ? src : {};\r\n                        }\r\n\r\n                        // Never move original objects, clone them\r\n                        target[ name ] = jQuery.extend( deep, clone, copy );\r\n\r\n                        // Don't bring in undefined values\r\n                    } else if ( copy !== undefined ) {\r\n                        target[ name ] = copy;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Return the modified object\r\n        return target;\r\n    };\r\n\r\n    jQuery.extend({\r\n        // Unique for each copy of jQuery on the page\r\n        // Non-digits removed to match rinlinejQuery\r\n        expando: \"jQuery\" + ( core_version + Math.random() ).replace( /\\D/g, \"\" ),\r\n\r\n        noConflict: function( deep ) {\r\n            if ( window.$ === jQuery ) {\r\n                window.$ = _$;\r\n            }\r\n\r\n            if ( deep && window.jQuery === jQuery ) {\r\n                window.jQuery = _jQuery;\r\n            }\r\n\r\n            return jQuery;\r\n        },\r\n\r\n        // Is the DOM ready to be used? Set to true once it occurs.\r\n        isReady: false,\r\n\r\n        // A counter to track how many items to wait for before\r\n        // the ready event fires. See #6781\r\n        readyWait: 1,\r\n\r\n        // Hold (or release) the ready event\r\n        holdReady: function( hold ) {\r\n            if ( hold ) {\r\n                jQuery.readyWait++;\r\n            } else {\r\n                jQuery.ready( true );\r\n            }\r\n        },\r\n\r\n        // Handle when the DOM is ready\r\n        ready: function( wait ) {\r\n\r\n            // Abort if there are pending holds or we're already ready\r\n            if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\r\n                return;\r\n            }\r\n\r\n            // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).\r\n            if ( !document.body ) {\r\n                return setTimeout( jQuery.ready );\r\n            }\r\n\r\n            // Remember that the DOM is ready\r\n            jQuery.isReady = true;\r\n\r\n            // If a normal DOM Ready event fired, decrement, and wait if need be\r\n            if ( wait !== true && --jQuery.readyWait > 0 ) {\r\n                return;\r\n            }\r\n\r\n            // If there are functions bound, to execute\r\n            readyList.resolveWith( document, [ jQuery ] );\r\n\r\n            // Trigger any bound ready events\r\n            if ( jQuery.fn.trigger ) {\r\n                jQuery( document ).trigger(\"ready\").off(\"ready\");\r\n            }\r\n        },\r\n\r\n        // See test/unit/core.js for details concerning isFunction.\r\n        // Since version 1.3, DOM methods and functions like alert\r\n        // aren't supported. They return false on IE (#2968).\r\n        isFunction: function( obj ) {\r\n            return jQuery.type(obj) === \"function\";\r\n        },\r\n\r\n        isArray: Array.isArray || function( obj ) {\r\n            return jQuery.type(obj) === \"array\";\r\n        },\r\n\r\n        isWindow: function( obj ) {\r\n            /* jshint eqeqeq: false */\r\n            return obj != null && obj == obj.window;\r\n        },\r\n\r\n        isNumeric: function( obj ) {\r\n            return !isNaN( parseFloat(obj) ) && isFinite( obj );\r\n        },\r\n\r\n        type: function( obj ) {\r\n            if ( obj == null ) {\r\n                return String( obj );\r\n            }\r\n            return typeof obj === \"object\" || typeof obj === \"function\" ?\r\n                class2type[ core_toString.call(obj) ] || \"object\" :\r\n                typeof obj;\r\n        },\r\n\r\n        isPlainObject: function( obj ) {\r\n            var key;\r\n\r\n            // Must be an Object.\r\n            // Because of IE, we also have to check the presence of the constructor property.\r\n            // Make sure that DOM nodes and window objects don't pass through, as well\r\n            if ( !obj || jQuery.type(obj) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\r\n                return false;\r\n            }\r\n\r\n            try {\r\n                // Not own constructor property must be Object\r\n                if ( obj.constructor &&\r\n                    !core_hasOwn.call(obj, \"constructor\") &&\r\n                    !core_hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\") ) {\r\n                    return false;\r\n                }\r\n            } catch ( e ) {\r\n                // IE8,9 Will throw exceptions on certain host objects #9897\r\n                return false;\r\n            }\r\n\r\n            // Support: IE<9\r\n            // Handle iteration over inherited properties before own properties.\r\n            if ( jQuery.support.ownLast ) {\r\n                for ( key in obj ) {\r\n                    return core_hasOwn.call( obj, key );\r\n                }\r\n            }\r\n\r\n            // Own properties are enumerated firstly, so to speed up,\r\n            // if last one is own, then all properties are own.\r\n            for ( key in obj ) {}\r\n\r\n            return key === undefined || core_hasOwn.call( obj, key );\r\n        },\r\n\r\n        isEmptyObject: function( obj ) {\r\n            var name;\r\n            for ( name in obj ) {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        error: function( msg ) {\r\n            throw new Error( msg );\r\n        },\r\n\r\n        // data: string of html\r\n        // context (optional): If specified, the fragment will be created in this context, defaults to document\r\n        // keepScripts (optional): If true, will include scripts passed in the html string\r\n        parseHTML: function( data, context, keepScripts ) {\r\n            if ( !data || typeof data !== \"string\" ) {\r\n                return null;\r\n            }\r\n            if ( typeof context === \"boolean\" ) {\r\n                keepScripts = context;\r\n                context = false;\r\n            }\r\n            context = context || document;\r\n\r\n            var parsed = rsingleTag.exec( data ),\r\n                scripts = !keepScripts && [];\r\n\r\n            // Single tag\r\n            if ( parsed ) {\r\n                return [ context.createElement( parsed[1] ) ];\r\n            }\r\n\r\n            parsed = jQuery.buildFragment( [ data ], context, scripts );\r\n            if ( scripts ) {\r\n                jQuery( scripts ).remove();\r\n            }\r\n            return jQuery.merge( [], parsed.childNodes );\r\n        },\r\n\r\n        parseJSON: function( data ) {\r\n            // Attempt to parse using the native JSON parser first\r\n            if ( window.JSON && window.JSON.parse ) {\r\n                return window.JSON.parse( data );\r\n            }\r\n\r\n            if ( data === null ) {\r\n                return data;\r\n            }\r\n\r\n            if ( typeof data === \"string\" ) {\r\n\r\n                // Make sure leading/trailing whitespace is removed (IE can't handle it)\r\n                data = jQuery.trim( data );\r\n\r\n                if ( data ) {\r\n                    // Make sure the incoming data is actual JSON\r\n                    // Logic borrowed from http://json.org/json2.js\r\n                    if ( rvalidchars.test( data.replace( rvalidescape, \"@\" )\r\n                        .replace( rvalidtokens, \"]\" )\r\n                        .replace( rvalidbraces, \"\")) ) {\r\n\r\n                        return ( new Function( \"return \" + data ) )();\r\n                    }\r\n                }\r\n            }\r\n\r\n            jQuery.error( \"Invalid JSON: \" + data );\r\n        },\r\n\r\n        // Cross-browser xml parsing\r\n        parseXML: function( data ) {\r\n            var xml, tmp;\r\n            if ( !data || typeof data !== \"string\" ) {\r\n                return null;\r\n            }\r\n            try {\r\n                if ( window.DOMParser ) { // Standard\r\n                    tmp = new DOMParser();\r\n                    xml = tmp.parseFromString( data , \"text/xml\" );\r\n                } else { // IE\r\n                    xml = new ActiveXObject( \"Microsoft.XMLDOM\" );\r\n                    xml.async = \"false\";\r\n                    xml.loadXML( data );\r\n                }\r\n            } catch( e ) {\r\n                xml = undefined;\r\n            }\r\n            if ( !xml || !xml.documentElement || xml.getElementsByTagName( \"parsererror\" ).length ) {\r\n                jQuery.error( \"Invalid XML: \" + data );\r\n            }\r\n            return xml;\r\n        },\r\n\r\n        noop: function() {},\r\n\r\n        // Evaluates a script in a global context\r\n        // Workarounds based on findings by Jim Driscoll\r\n        // http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\r\n        globalEval: function( data ) {\r\n            if ( data && jQuery.trim( data ) ) {\r\n                // We use execScript on Internet Explorer\r\n                // We use an anonymous function so that context is window\r\n                // rather than jQuery in Firefox\r\n                ( window.execScript || function( data ) {\r\n                    window[ \"eval\" ].call( window, data );\r\n                } )( data );\r\n            }\r\n        },\r\n\r\n        // Convert dashed to camelCase; used by the css and data modules\r\n        // Microsoft forgot to hump their vendor prefix (#9572)\r\n        camelCase: function( string ) {\r\n            return string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\r\n        },\r\n\r\n        nodeName: function( elem, name ) {\r\n            return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\r\n        },\r\n\r\n        // args is for internal usage only\r\n        each: function( obj, callback, args ) {\r\n            var value,\r\n                i = 0,\r\n                length = obj.length,\r\n                isArray = isArraylike( obj );\r\n\r\n            if ( args ) {\r\n                if ( isArray ) {\r\n                    for ( ; i < length; i++ ) {\r\n                        value = callback.apply( obj[ i ], args );\r\n\r\n                        if ( value === false ) {\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    for ( i in obj ) {\r\n                        value = callback.apply( obj[ i ], args );\r\n\r\n                        if ( value === false ) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // A special, fast, case for the most common use of each\r\n            } else {\r\n                if ( isArray ) {\r\n                    for ( ; i < length; i++ ) {\r\n                        value = callback.call( obj[ i ], i, obj[ i ] );\r\n\r\n                        if ( value === false ) {\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    for ( i in obj ) {\r\n                        value = callback.call( obj[ i ], i, obj[ i ] );\r\n\r\n                        if ( value === false ) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return obj;\r\n        },\r\n\r\n        // Use native String.trim function wherever possible\r\n        trim: core_trim && !core_trim.call(\"\\uFEFF\\xA0\") ?\r\n            function( text ) {\r\n                return text == null ?\r\n                    \"\" :\r\n                    core_trim.call( text );\r\n            } :\r\n\r\n            // Otherwise use our own trimming functionality\r\n            function( text ) {\r\n                return text == null ?\r\n                    \"\" :\r\n                    ( text + \"\" ).replace( rtrim, \"\" );\r\n            },\r\n\r\n        // results is for internal usage only\r\n        makeArray: function( arr, results ) {\r\n            var ret = results || [];\r\n\r\n            if ( arr != null ) {\r\n                if ( isArraylike( Object(arr) ) ) {\r\n                    jQuery.merge( ret,\r\n                        typeof arr === \"string\" ?\r\n                            [ arr ] : arr\r\n                    );\r\n                } else {\r\n                    core_push.call( ret, arr );\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        },\r\n\r\n        inArray: function( elem, arr, i ) {\r\n            var len;\r\n\r\n            if ( arr ) {\r\n                if ( core_indexOf ) {\r\n                    return core_indexOf.call( arr, elem, i );\r\n                }\r\n\r\n                len = arr.length;\r\n                i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;\r\n\r\n                for ( ; i < len; i++ ) {\r\n                    // Skip accessing in sparse arrays\r\n                    if ( i in arr && arr[ i ] === elem ) {\r\n                        return i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return -1;\r\n        },\r\n\r\n        merge: function( first, second ) {\r\n            var l = second.length,\r\n                i = first.length,\r\n                j = 0;\r\n\r\n            if ( typeof l === \"number\" ) {\r\n                for ( ; j < l; j++ ) {\r\n                    first[ i++ ] = second[ j ];\r\n                }\r\n            } else {\r\n                while ( second[j] !== undefined ) {\r\n                    first[ i++ ] = second[ j++ ];\r\n                }\r\n            }\r\n\r\n            first.length = i;\r\n\r\n            return first;\r\n        },\r\n\r\n        grep: function( elems, callback, inv ) {\r\n            var retVal,\r\n                ret = [],\r\n                i = 0,\r\n                length = elems.length;\r\n            inv = !!inv;\r\n\r\n            // Go through the array, only saving the items\r\n            // that pass the validator function\r\n            for ( ; i < length; i++ ) {\r\n                retVal = !!callback( elems[ i ], i );\r\n                if ( inv !== retVal ) {\r\n                    ret.push( elems[ i ] );\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        },\r\n\r\n        // arg is for internal usage only\r\n        map: function( elems, callback, arg ) {\r\n            var value,\r\n                i = 0,\r\n                length = elems.length,\r\n                isArray = isArraylike( elems ),\r\n                ret = [];\r\n\r\n            // Go through the array, translating each of the items to their\r\n            if ( isArray ) {\r\n                for ( ; i < length; i++ ) {\r\n                    value = callback( elems[ i ], i, arg );\r\n\r\n                    if ( value != null ) {\r\n                        ret[ ret.length ] = value;\r\n                    }\r\n                }\r\n\r\n                // Go through every key on the object,\r\n            } else {\r\n                for ( i in elems ) {\r\n                    value = callback( elems[ i ], i, arg );\r\n\r\n                    if ( value != null ) {\r\n                        ret[ ret.length ] = value;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Flatten any nested arrays\r\n            return core_concat.apply( [], ret );\r\n        },\r\n\r\n        // A global GUID counter for objects\r\n        guid: 1,\r\n\r\n        // Bind a function to a context, optionally partially applying any\r\n        // arguments.\r\n        proxy: function( fn, context ) {\r\n            var args, proxy, tmp;\r\n\r\n            if ( typeof context === \"string\" ) {\r\n                tmp = fn[ context ];\r\n                context = fn;\r\n                fn = tmp;\r\n            }\r\n\r\n            // Quick check to determine if target is callable, in the spec\r\n            // this throws a TypeError, but we will just return undefined.\r\n            if ( !jQuery.isFunction( fn ) ) {\r\n                return undefined;\r\n            }\r\n\r\n            // Simulated bind\r\n            args = core_slice.call( arguments, 2 );\r\n            proxy = function() {\r\n                return fn.apply( context || this, args.concat( core_slice.call( arguments ) ) );\r\n            };\r\n\r\n            // Set the guid of unique handler to the same of original handler, so it can be removed\r\n            proxy.guid = fn.guid = fn.guid || jQuery.guid++;\r\n\r\n            return proxy;\r\n        },\r\n\r\n        // Multifunctional method to get and set values of a collection\r\n        // The value/s can optionally be executed if it's a function\r\n        access: function( elems, fn, key, value, chainable, emptyGet, raw ) {\r\n            var i = 0,\r\n                length = elems.length,\r\n                bulk = key == null;\r\n\r\n            // Sets many values\r\n            if ( jQuery.type( key ) === \"object\" ) {\r\n                chainable = true;\r\n                for ( i in key ) {\r\n                    jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );\r\n                }\r\n\r\n                // Sets one value\r\n            } else if ( value !== undefined ) {\r\n                chainable = true;\r\n\r\n                if ( !jQuery.isFunction( value ) ) {\r\n                    raw = true;\r\n                }\r\n\r\n                if ( bulk ) {\r\n                    // Bulk operations run against the entire set\r\n                    if ( raw ) {\r\n                        fn.call( elems, value );\r\n                        fn = null;\r\n\r\n                        // ...except when executing function values\r\n                    } else {\r\n                        bulk = fn;\r\n                        fn = function( elem, key, value ) {\r\n                            return bulk.call( jQuery( elem ), value );\r\n                        };\r\n                    }\r\n                }\r\n\r\n                if ( fn ) {\r\n                    for ( ; i < length; i++ ) {\r\n                        fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );\r\n                    }\r\n                }\r\n            }\r\n\r\n            return chainable ?\r\n                elems :\r\n\r\n                // Gets\r\n                bulk ?\r\n                    fn.call( elems ) :\r\n                    length ? fn( elems[0], key ) : emptyGet;\r\n        },\r\n\r\n        now: function() {\r\n            return ( new Date() ).getTime();\r\n        },\r\n\r\n        // A method for quickly swapping in/out CSS properties to get correct calculations.\r\n        // Note: this method belongs to the css module but it's needed here for the support module.\r\n        // If support gets modularized, this method should be moved back to the css module.\r\n        swap: function( elem, options, callback, args ) {\r\n            var ret, name,\r\n                old = {};\r\n\r\n            // Remember the old values, and insert the new ones\r\n            for ( name in options ) {\r\n                old[ name ] = elem.style[ name ];\r\n                elem.style[ name ] = options[ name ];\r\n            }\r\n\r\n            ret = callback.apply( elem, args || [] );\r\n\r\n            // Revert the old values\r\n            for ( name in options ) {\r\n                elem.style[ name ] = old[ name ];\r\n            }\r\n\r\n            return ret;\r\n        }\r\n    });\r\n\r\n    jQuery.ready.promise = function( obj ) {\r\n        if ( !readyList ) {\r\n\r\n            readyList = jQuery.Deferred();\r\n\r\n            // Catch cases where $(document).ready() is called after the browser event has already occurred.\r\n            // we once tried to use readyState \"interactive\" here, but it caused issues like the one\r\n            // discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\r\n            if ( document.readyState === \"complete\" ) {\r\n                // Handle it asynchronously to allow scripts the opportunity to delay ready\r\n                setTimeout( jQuery.ready );\r\n\r\n                // Standards-based browsers support DOMContentLoaded\r\n            } else if ( document.addEventListener ) {\r\n                // Use the handy event callback\r\n                document.addEventListener( \"DOMContentLoaded\", completed, false );\r\n\r\n                // A fallback to window.onload, that will always work\r\n                window.addEventListener( \"load\", completed, false );\r\n\r\n                // If IE event model is used\r\n            } else {\r\n                // Ensure firing before onload, maybe late but safe also for iframes\r\n                document.attachEvent( \"onreadystatechange\", completed );\r\n\r\n                // A fallback to window.onload, that will always work\r\n                window.attachEvent( \"onload\", completed );\r\n\r\n                // If IE and not a frame\r\n                // continually check to see if the document is ready\r\n                var top = false;\r\n\r\n                try {\r\n                    top = window.frameElement == null && document.documentElement;\r\n                } catch(e) {}\r\n\r\n                if ( top && top.doScroll ) {\r\n                    (function doScrollCheck() {\r\n                        if ( !jQuery.isReady ) {\r\n\r\n                            try {\r\n                                // Use the trick by Diego Perini\r\n                                // http://javascript.nwbox.com/IEContentLoaded/\r\n                                top.doScroll(\"left\");\r\n                            } catch(e) {\r\n                                return setTimeout( doScrollCheck, 50 );\r\n                            }\r\n\r\n                            // detach all dom ready events\r\n                            detach();\r\n\r\n                            // and execute any waiting functions\r\n                            jQuery.ready();\r\n                        }\r\n                    })();\r\n                }\r\n            }\r\n        }\r\n        return readyList.promise( obj );\r\n    };\r\n\r\n// Populate the class2type map\r\n    jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n        class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\r\n    });\r\n\r\n    function isArraylike( obj ) {\r\n        var length = obj.length,\r\n            type = jQuery.type( obj );\r\n\r\n        if ( jQuery.isWindow( obj ) ) {\r\n            return false;\r\n        }\r\n\r\n        if ( obj.nodeType === 1 && length ) {\r\n            return true;\r\n        }\r\n\r\n        return type === \"array\" || type !== \"function\" &&\r\n            ( length === 0 ||\r\n                typeof length === \"number\" && length > 0 && ( length - 1 ) in obj );\r\n    }\r\n\r\n// All jQuery objects should point back to these\r\n    rootjQuery = jQuery(document);\r\n    /*!\r\n     * Sizzle CSS Selector Engine v1.10.2\r\n     * http://sizzlejs.com/\r\n     *\r\n     * Copyright 2013 jQuery Foundation, Inc. and other contributors\r\n     * Released under the MIT license\r\n     * http://jquery.org/license\r\n     *\r\n     * Date: 2013-07-03\r\n     */\r\n    (function( window, undefined ) {\r\n\r\n        var i,\r\n            support,\r\n            cachedruns,\r\n            Expr,\r\n            getText,\r\n            isXML,\r\n            compile,\r\n            outermostContext,\r\n            sortInput,\r\n\r\n        // Local document vars\r\n            setDocument,\r\n            document,\r\n            docElem,\r\n            documentIsHTML,\r\n            rbuggyQSA,\r\n            rbuggyMatches,\r\n            matches,\r\n            contains,\r\n\r\n        // Instance-specific data\r\n            expando = \"sizzle\" + -(new Date()),\r\n            preferredDoc = window.document,\r\n            dirruns = 0,\r\n            done = 0,\r\n            classCache = createCache(),\r\n            tokenCache = createCache(),\r\n            compilerCache = createCache(),\r\n            hasDuplicate = false,\r\n            sortOrder = function( a, b ) {\r\n                if ( a === b ) {\r\n                    hasDuplicate = true;\r\n                    return 0;\r\n                }\r\n                return 0;\r\n            },\r\n\r\n        // General-purpose constants\r\n            strundefined = typeof undefined,\r\n            MAX_NEGATIVE = 1 << 31,\r\n\r\n        // Instance methods\r\n            hasOwn = ({}).hasOwnProperty,\r\n            arr = [],\r\n            pop = arr.pop,\r\n            push_native = arr.push,\r\n            push = arr.push,\r\n            slice = arr.slice,\r\n        // Use a stripped-down indexOf if we can't use a native one\r\n            indexOf = arr.indexOf || function( elem ) {\r\n                var i = 0,\r\n                    len = this.length;\r\n                for ( ; i < len; i++ ) {\r\n                    if ( this[i] === elem ) {\r\n                        return i;\r\n                    }\r\n                }\r\n                return -1;\r\n            },\r\n\r\n            booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\r\n\r\n        // Regular expressions\r\n\r\n        // Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\r\n            whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\r\n        // http://www.w3.org/TR/css3-syntax/#characters\r\n            characterEncoding = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\r\n\r\n        // Loosely modeled on CSS identifier characters\r\n        // An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors\r\n        // Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\r\n            identifier = characterEncoding.replace( \"w\", \"w#\" ),\r\n\r\n        // Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors\r\n            attributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")\" + whitespace +\r\n                \"*(?:([*^$|!~]?=)\" + whitespace + \"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\" + identifier + \")|)|)\" + whitespace + \"*\\\\]\",\r\n\r\n        // Prefer arguments quoted,\r\n        //   then not containing pseudos/brackets,\r\n        //   then attribute selectors/non-parenthetical expressions,\r\n        //   then anything else\r\n        // These preferences are here to reduce the number of selectors\r\n        //   needing tokenize in the PSEUDO preFilter\r\n            pseudos = \":(\" + characterEncoding + \")(?:\\\\(((['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes.replace( 3, 8 ) + \")*)|.*)\\\\)|)\",\r\n\r\n        // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\r\n            rtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\r\n\r\n            rcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\r\n            rcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\r\n\r\n            rsibling = new RegExp( whitespace + \"*[+~]\" ),\r\n            rattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*)\" + whitespace + \"*\\\\]\", \"g\" ),\r\n\r\n            rpseudo = new RegExp( pseudos ),\r\n            ridentifier = new RegExp( \"^\" + identifier + \"$\" ),\r\n\r\n            matchExpr = {\r\n                \"ID\": new RegExp( \"^#(\" + characterEncoding + \")\" ),\r\n                \"CLASS\": new RegExp( \"^\\\\.(\" + characterEncoding + \")\" ),\r\n                \"TAG\": new RegExp( \"^(\" + characterEncoding.replace( \"w\", \"w*\" ) + \")\" ),\r\n                \"ATTR\": new RegExp( \"^\" + attributes ),\r\n                \"PSEUDO\": new RegExp( \"^\" + pseudos ),\r\n                \"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\r\n                    \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\r\n                    \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\r\n                \"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\r\n                // For use in libraries implementing .is()\r\n                // We use this for POS matching in `select`\r\n                \"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\r\n                    whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\r\n            },\r\n\r\n            rnative = /^[^{]+\\{\\s*\\[native \\w/,\r\n\r\n        // Easily-parseable/retrievable ID or TAG or CLASS selectors\r\n            rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\r\n\r\n            rinputs = /^(?:input|select|textarea|button)$/i,\r\n            rheader = /^h\\d$/i,\r\n\r\n            rescape = /'|\\\\/g,\r\n\r\n        // CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\r\n            runescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\r\n            funescape = function( _, escaped, escapedWhitespace ) {\r\n                var high = \"0x\" + escaped - 0x10000;\r\n                // NaN means non-codepoint\r\n                // Support: Firefox\r\n                // Workaround erroneous numeric interpretation of +\"0x\"\r\n                return high !== high || escapedWhitespace ?\r\n                    escaped :\r\n                    // BMP codepoint\r\n                    high < 0 ?\r\n                        String.fromCharCode( high + 0x10000 ) :\r\n                        // Supplemental Plane codepoint (surrogate pair)\r\n                        String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\r\n            };\r\n\r\n// Optimize for push.apply( _, NodeList )\r\n        try {\r\n            push.apply(\r\n                (arr = slice.call( preferredDoc.childNodes )),\r\n                preferredDoc.childNodes\r\n            );\r\n            // Support: Android<4.0\r\n            // Detect silently failing push.apply\r\n            arr[ preferredDoc.childNodes.length ].nodeType;\r\n        } catch ( e ) {\r\n            push = { apply: arr.length ?\r\n\r\n                // Leverage slice if possible\r\n                function( target, els ) {\r\n                    push_native.apply( target, slice.call(els) );\r\n                } :\r\n\r\n                // Support: IE<9\r\n                // Otherwise append directly\r\n                function( target, els ) {\r\n                    var j = target.length,\r\n                        i = 0;\r\n                    // Can't trust NodeList.length\r\n                    while ( (target[j++] = els[i++]) ) {}\r\n                    target.length = j - 1;\r\n                }\r\n            };\r\n        }\r\n\r\n        function Sizzle( selector, context, results, seed ) {\r\n            var match, elem, m, nodeType,\r\n            // QSA vars\r\n                i, groups, old, nid, newContext, newSelector;\r\n\r\n            if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\r\n                setDocument( context );\r\n            }\r\n\r\n            context = context || document;\r\n            results = results || [];\r\n\r\n            if ( !selector || typeof selector !== \"string\" ) {\r\n                return results;\r\n            }\r\n\r\n            if ( (nodeType = context.nodeType) !== 1 && nodeType !== 9 ) {\r\n                return [];\r\n            }\r\n\r\n            if ( documentIsHTML && !seed ) {\r\n\r\n                // Shortcuts\r\n                if ( (match = rquickExpr.exec( selector )) ) {\r\n                    // Speed-up: Sizzle(\"#ID\")\r\n                    if ( (m = match[1]) ) {\r\n                        if ( nodeType === 9 ) {\r\n                            elem = context.getElementById( m );\r\n                            // Check parentNode to catch when Blackberry 4.6 returns\r\n                            // nodes that are no longer in the document #6963\r\n                            if ( elem && elem.parentNode ) {\r\n                                // Handle the case where IE, Opera, and Webkit return items\r\n                                // by name instead of ID\r\n                                if ( elem.id === m ) {\r\n                                    results.push( elem );\r\n                                    return results;\r\n                                }\r\n                            } else {\r\n                                return results;\r\n                            }\r\n                        } else {\r\n                            // Context is not a document\r\n                            if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&\r\n                                contains( context, elem ) && elem.id === m ) {\r\n                                results.push( elem );\r\n                                return results;\r\n                            }\r\n                        }\r\n\r\n                        // Speed-up: Sizzle(\"TAG\")\r\n                    } else if ( match[2] ) {\r\n                        push.apply( results, context.getElementsByTagName( selector ) );\r\n                        return results;\r\n\r\n                        // Speed-up: Sizzle(\".CLASS\")\r\n                    } else if ( (m = match[3]) && support.getElementsByClassName && context.getElementsByClassName ) {\r\n                        push.apply( results, context.getElementsByClassName( m ) );\r\n                        return results;\r\n                    }\r\n                }\r\n\r\n                // QSA path\r\n                if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\r\n                    nid = old = expando;\r\n                    newContext = context;\r\n                    newSelector = nodeType === 9 && selector;\r\n\r\n                    // qSA works strangely on Element-rooted queries\r\n                    // We can work around this by specifying an extra ID on the root\r\n                    // and working up from there (Thanks to Andrew Dupont for the technique)\r\n                    // IE 8 doesn't work on object elements\r\n                    if ( nodeType === 1 && context.nodeName.toLowerCase() !== \"object\" ) {\r\n                        groups = tokenize( selector );\r\n\r\n                        if ( (old = context.getAttribute(\"id\")) ) {\r\n                            nid = old.replace( rescape, \"\\\\$&\" );\r\n                        } else {\r\n                            context.setAttribute( \"id\", nid );\r\n                        }\r\n                        nid = \"[id='\" + nid + \"'] \";\r\n\r\n                        i = groups.length;\r\n                        while ( i-- ) {\r\n                            groups[i] = nid + toSelector( groups[i] );\r\n                        }\r\n                        newContext = rsibling.test( selector ) && context.parentNode || context;\r\n                        newSelector = groups.join(\",\");\r\n                    }\r\n\r\n                    if ( newSelector ) {\r\n                        try {\r\n                            push.apply( results,\r\n                                newContext.querySelectorAll( newSelector )\r\n                            );\r\n                            return results;\r\n                        } catch(qsaError) {\r\n                        } finally {\r\n                            if ( !old ) {\r\n                                context.removeAttribute(\"id\");\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // All others\r\n            return select( selector.replace( rtrim, \"$1\" ), context, results, seed );\r\n        }\r\n\r\n        /**\r\n         * Create key-value caches of limited size\r\n         * @returns {Function(string, Object)} Returns the Object data after storing it on itself with\r\n         *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\r\n         *\tdeleting the oldest entry\r\n         */\r\n        function createCache() {\r\n            var keys = [];\r\n\r\n            function cache( key, value ) {\r\n                // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\r\n                if ( keys.push( key += \" \" ) > Expr.cacheLength ) {\r\n                    // Only keep the most recent entries\r\n                    delete cache[ keys.shift() ];\r\n                }\r\n                return (cache[ key ] = value);\r\n            }\r\n            return cache;\r\n        }\r\n\r\n        /**\r\n         * Mark a function for special use by Sizzle\r\n         * @param {Function} fn The function to mark\r\n         */\r\n        function markFunction( fn ) {\r\n            fn[ expando ] = true;\r\n            return fn;\r\n        }\r\n\r\n        /**\r\n         * Support testing using an element\r\n         * @param {Function} fn Passed the created div and expects a boolean result\r\n         */\r\n        function assert( fn ) {\r\n            var div = document.createElement(\"div\");\r\n\r\n            try {\r\n                return !!fn( div );\r\n            } catch (e) {\r\n                return false;\r\n            } finally {\r\n                // Remove from its parent by default\r\n                if ( div.parentNode ) {\r\n                    div.parentNode.removeChild( div );\r\n                }\r\n                // release memory in IE\r\n                div = null;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Adds the same handler for all of the specified attrs\r\n         * @param {String} attrs Pipe-separated list of attributes\r\n         * @param {Function} handler The method that will be applied\r\n         */\r\n        function addHandle( attrs, handler ) {\r\n            var arr = attrs.split(\"|\"),\r\n                i = attrs.length;\r\n\r\n            while ( i-- ) {\r\n                Expr.attrHandle[ arr[i] ] = handler;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Checks document order of two siblings\r\n         * @param {Element} a\r\n         * @param {Element} b\r\n         * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\r\n         */\r\n        function siblingCheck( a, b ) {\r\n            var cur = b && a,\r\n                diff = cur && a.nodeType === 1 && b.nodeType === 1 &&\r\n                    ( ~b.sourceIndex || MAX_NEGATIVE ) -\r\n                        ( ~a.sourceIndex || MAX_NEGATIVE );\r\n\r\n            // Use IE sourceIndex if available on both nodes\r\n            if ( diff ) {\r\n                return diff;\r\n            }\r\n\r\n            // Check if b follows a\r\n            if ( cur ) {\r\n                while ( (cur = cur.nextSibling) ) {\r\n                    if ( cur === b ) {\r\n                        return -1;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return a ? 1 : -1;\r\n        }\r\n\r\n        /**\r\n         * Returns a function to use in pseudos for input types\r\n         * @param {String} type\r\n         */\r\n        function createInputPseudo( type ) {\r\n            return function( elem ) {\r\n                var name = elem.nodeName.toLowerCase();\r\n                return name === \"input\" && elem.type === type;\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Returns a function to use in pseudos for buttons\r\n         * @param {String} type\r\n         */\r\n        function createButtonPseudo( type ) {\r\n            return function( elem ) {\r\n                var name = elem.nodeName.toLowerCase();\r\n                return (name === \"input\" || name === \"button\") && elem.type === type;\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Returns a function to use in pseudos for positionals\r\n         * @param {Function} fn\r\n         */\r\n        function createPositionalPseudo( fn ) {\r\n            return markFunction(function( argument ) {\r\n                argument = +argument;\r\n                return markFunction(function( seed, matches ) {\r\n                    var j,\r\n                        matchIndexes = fn( [], seed.length, argument ),\r\n                        i = matchIndexes.length;\r\n\r\n                    // Match elements found at the specified indexes\r\n                    while ( i-- ) {\r\n                        if ( seed[ (j = matchIndexes[i]) ] ) {\r\n                            seed[j] = !(matches[j] = seed[j]);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Detect xml\r\n         * @param {Element|Object} elem An element or a document\r\n         */\r\n        isXML = Sizzle.isXML = function( elem ) {\r\n            // documentElement is verified for cases where it doesn't yet exist\r\n            // (such as loading iframes in IE - #4833)\r\n            var documentElement = elem && (elem.ownerDocument || elem).documentElement;\r\n            return documentElement ? documentElement.nodeName !== \"HTML\" : false;\r\n        };\r\n\r\n// Expose support vars for convenience\r\n        support = Sizzle.support = {};\r\n\r\n        /**\r\n         * Sets document-related variables once based on the current document\r\n         * @param {Element|Object} [doc] An element or document object to use to set the document\r\n         * @returns {Object} Returns the current document\r\n         */\r\n        setDocument = Sizzle.setDocument = function( node ) {\r\n            var doc = node ? node.ownerDocument || node : preferredDoc,\r\n                parent = doc.defaultView;\r\n\r\n            // If no document and documentElement is available, return\r\n            if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\r\n                return document;\r\n            }\r\n\r\n            // Set our document\r\n            document = doc;\r\n            docElem = doc.documentElement;\r\n\r\n            // Support tests\r\n            documentIsHTML = !isXML( doc );\r\n\r\n            // Support: IE>8\r\n            // If iframe document is assigned to \"document\" variable and if iframe has been reloaded,\r\n            // IE will throw \"permission denied\" error when accessing \"document\" variable, see jQuery #13936\r\n            // IE6-8 do not support the defaultView property so parent will be undefined\r\n            if ( parent && parent.attachEvent && parent !== parent.top ) {\r\n                parent.attachEvent( \"onbeforeunload\", function() {\r\n                    setDocument();\r\n                });\r\n            }\r\n\r\n            /* Attributes\r\n             ---------------------------------------------------------------------- */\r\n\r\n            // Support: IE<8\r\n            // Verify that getAttribute really returns attributes and not properties (excepting IE8 booleans)\r\n            support.attributes = assert(function( div ) {\r\n                div.className = \"i\";\r\n                return !div.getAttribute(\"className\");\r\n            });\r\n\r\n            /* getElement(s)By*\r\n             ---------------------------------------------------------------------- */\r\n\r\n            // Check if getElementsByTagName(\"*\") returns only elements\r\n            support.getElementsByTagName = assert(function( div ) {\r\n                div.appendChild( doc.createComment(\"\") );\r\n                return !div.getElementsByTagName(\"*\").length;\r\n            });\r\n\r\n            // Check if getElementsByClassName can be trusted\r\n            support.getElementsByClassName = assert(function( div ) {\r\n                div.innerHTML = \"<div class='a'></div><div class='a i'></div>\";\r\n\r\n                // Support: Safari<4\r\n                // Catch class over-caching\r\n                div.firstChild.className = \"i\";\r\n                // Support: Opera<10\r\n                // Catch gEBCN failure to find non-leading classes\r\n                return div.getElementsByClassName(\"i\").length === 2;\r\n            });\r\n\r\n            // Support: IE<10\r\n            // Check if getElementById returns elements by name\r\n            // The broken getElementById methods don't pick up programatically-set names,\r\n            // so use a roundabout getElementsByName test\r\n            support.getById = assert(function( div ) {\r\n                docElem.appendChild( div ).id = expando;\r\n                return !doc.getElementsByName || !doc.getElementsByName( expando ).length;\r\n            });\r\n\r\n            // ID find and filter\r\n            if ( support.getById ) {\r\n                Expr.find[\"ID\"] = function( id, context ) {\r\n                    if ( typeof context.getElementById !== strundefined && documentIsHTML ) {\r\n                        var m = context.getElementById( id );\r\n                        // Check parentNode to catch when Blackberry 4.6 returns\r\n                        // nodes that are no longer in the document #6963\r\n                        return m && m.parentNode ? [m] : [];\r\n                    }\r\n                };\r\n                Expr.filter[\"ID\"] = function( id ) {\r\n                    var attrId = id.replace( runescape, funescape );\r\n                    return function( elem ) {\r\n                        return elem.getAttribute(\"id\") === attrId;\r\n                    };\r\n                };\r\n            } else {\r\n                // Support: IE6/7\r\n                // getElementById is not reliable as a find shortcut\r\n                delete Expr.find[\"ID\"];\r\n\r\n                Expr.filter[\"ID\"] =  function( id ) {\r\n                    var attrId = id.replace( runescape, funescape );\r\n                    return function( elem ) {\r\n                        var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode(\"id\");\r\n                        return node && node.value === attrId;\r\n                    };\r\n                };\r\n            }\r\n\r\n            // Tag\r\n            Expr.find[\"TAG\"] = support.getElementsByTagName ?\r\n                function( tag, context ) {\r\n                    if ( typeof context.getElementsByTagName !== strundefined ) {\r\n                        return context.getElementsByTagName( tag );\r\n                    }\r\n                } :\r\n                function( tag, context ) {\r\n                    var elem,\r\n                        tmp = [],\r\n                        i = 0,\r\n                        results = context.getElementsByTagName( tag );\r\n\r\n                    // Filter out possible comments\r\n                    if ( tag === \"*\" ) {\r\n                        while ( (elem = results[i++]) ) {\r\n                            if ( elem.nodeType === 1 ) {\r\n                                tmp.push( elem );\r\n                            }\r\n                        }\r\n\r\n                        return tmp;\r\n                    }\r\n                    return results;\r\n                };\r\n\r\n            // Class\r\n            Expr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\r\n                if ( typeof context.getElementsByClassName !== strundefined && documentIsHTML ) {\r\n                    return context.getElementsByClassName( className );\r\n                }\r\n            };\r\n\r\n            /* QSA/matchesSelector\r\n             ---------------------------------------------------------------------- */\r\n\r\n            // QSA and matchesSelector support\r\n\r\n            // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\r\n            rbuggyMatches = [];\r\n\r\n            // qSa(:focus) reports false when true (Chrome 21)\r\n            // We allow this because of a bug in IE8/9 that throws an error\r\n            // whenever `document.activeElement` is accessed on an iframe\r\n            // So, we allow :focus to pass through QSA all the time to avoid the IE error\r\n            // See http://bugs.jquery.com/ticket/13378\r\n            rbuggyQSA = [];\r\n\r\n            if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {\r\n                // Build QSA regex\r\n                // Regex strategy adopted from Diego Perini\r\n                assert(function( div ) {\r\n                    // Select is set to empty string on purpose\r\n                    // This is to test IE's treatment of not explicitly\r\n                    // setting a boolean content attribute,\r\n                    // since its presence should be enough\r\n                    // http://bugs.jquery.com/ticket/12359\r\n                    div.innerHTML = \"<select><option selected=''></option></select>\";\r\n\r\n                    // Support: IE8\r\n                    // Boolean attributes and \"value\" are not treated correctly\r\n                    if ( !div.querySelectorAll(\"[selected]\").length ) {\r\n                        rbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\r\n                    }\r\n\r\n                    // Webkit/Opera - :checked should return selected option elements\r\n                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\r\n                    // IE8 throws error here and will not see later tests\r\n                    if ( !div.querySelectorAll(\":checked\").length ) {\r\n                        rbuggyQSA.push(\":checked\");\r\n                    }\r\n                });\r\n\r\n                assert(function( div ) {\r\n\r\n                    // Support: Opera 10-12/IE8\r\n                    // ^= $= *= and empty values\r\n                    // Should not select anything\r\n                    // Support: Windows 8 Native Apps\r\n                    // The type attribute is restricted during .innerHTML assignment\r\n                    var input = doc.createElement(\"input\");\r\n                    input.setAttribute( \"type\", \"hidden\" );\r\n                    div.appendChild( input ).setAttribute( \"t\", \"\" );\r\n\r\n                    if ( div.querySelectorAll(\"[t^='']\").length ) {\r\n                        rbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\r\n                    }\r\n\r\n                    // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\r\n                    // IE8 throws error here and will not see later tests\r\n                    if ( !div.querySelectorAll(\":enabled\").length ) {\r\n                        rbuggyQSA.push( \":enabled\", \":disabled\" );\r\n                    }\r\n\r\n                    // Opera 10-11 does not throw on post-comma invalid pseudos\r\n                    div.querySelectorAll(\"*,:x\");\r\n                    rbuggyQSA.push(\",.*:\");\r\n                });\r\n            }\r\n\r\n            if ( (support.matchesSelector = rnative.test( (matches = docElem.webkitMatchesSelector ||\r\n                docElem.mozMatchesSelector ||\r\n                docElem.oMatchesSelector ||\r\n                docElem.msMatchesSelector) )) ) {\r\n\r\n                assert(function( div ) {\r\n                    // Check to see if it's possible to do matchesSelector\r\n                    // on a disconnected node (IE 9)\r\n                    support.disconnectedMatch = matches.call( div, \"div\" );\r\n\r\n                    // This should fail with an exception\r\n                    // Gecko does not error, returns false instead\r\n                    matches.call( div, \"[s!='']:x\" );\r\n                    rbuggyMatches.push( \"!=\", pseudos );\r\n                });\r\n            }\r\n\r\n            rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\r\n            rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\r\n\r\n            /* Contains\r\n             ---------------------------------------------------------------------- */\r\n\r\n            // Element contains another\r\n            // Purposefully does not implement inclusive descendent\r\n            // As in, an element does not contain itself\r\n            contains = rnative.test( docElem.contains ) || docElem.compareDocumentPosition ?\r\n                function( a, b ) {\r\n                    var adown = a.nodeType === 9 ? a.documentElement : a,\r\n                        bup = b && b.parentNode;\r\n                    return a === bup || !!( bup && bup.nodeType === 1 && (\r\n                        adown.contains ?\r\n                            adown.contains( bup ) :\r\n                            a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\r\n                        ));\r\n                } :\r\n                function( a, b ) {\r\n                    if ( b ) {\r\n                        while ( (b = b.parentNode) ) {\r\n                            if ( b === a ) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                };\r\n\r\n            /* Sorting\r\n             ---------------------------------------------------------------------- */\r\n\r\n            // Document order sorting\r\n            sortOrder = docElem.compareDocumentPosition ?\r\n                function( a, b ) {\r\n\r\n                    // Flag for duplicate removal\r\n                    if ( a === b ) {\r\n                        hasDuplicate = true;\r\n                        return 0;\r\n                    }\r\n\r\n                    var compare = b.compareDocumentPosition && a.compareDocumentPosition && a.compareDocumentPosition( b );\r\n\r\n                    if ( compare ) {\r\n                        // Disconnected nodes\r\n                        if ( compare & 1 ||\r\n                            (!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\r\n\r\n                            // Choose the first element that is related to our preferred document\r\n                            if ( a === doc || contains(preferredDoc, a) ) {\r\n                                return -1;\r\n                            }\r\n                            if ( b === doc || contains(preferredDoc, b) ) {\r\n                                return 1;\r\n                            }\r\n\r\n                            // Maintain original order\r\n                            return sortInput ?\r\n                                ( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :\r\n                                0;\r\n                        }\r\n\r\n                        return compare & 4 ? -1 : 1;\r\n                    }\r\n\r\n                    // Not directly comparable, sort on existence of method\r\n                    return a.compareDocumentPosition ? -1 : 1;\r\n                } :\r\n                function( a, b ) {\r\n                    var cur,\r\n                        i = 0,\r\n                        aup = a.parentNode,\r\n                        bup = b.parentNode,\r\n                        ap = [ a ],\r\n                        bp = [ b ];\r\n\r\n                    // Exit early if the nodes are identical\r\n                    if ( a === b ) {\r\n                        hasDuplicate = true;\r\n                        return 0;\r\n\r\n                        // Parentless nodes are either documents or disconnected\r\n                    } else if ( !aup || !bup ) {\r\n                        return a === doc ? -1 :\r\n                            b === doc ? 1 :\r\n                                aup ? -1 :\r\n                                    bup ? 1 :\r\n                                        sortInput ?\r\n                                            ( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :\r\n                                            0;\r\n\r\n                        // If the nodes are siblings, we can do a quick check\r\n                    } else if ( aup === bup ) {\r\n                        return siblingCheck( a, b );\r\n                    }\r\n\r\n                    // Otherwise we need full lists of their ancestors for comparison\r\n                    cur = a;\r\n                    while ( (cur = cur.parentNode) ) {\r\n                        ap.unshift( cur );\r\n                    }\r\n                    cur = b;\r\n                    while ( (cur = cur.parentNode) ) {\r\n                        bp.unshift( cur );\r\n                    }\r\n\r\n                    // Walk down the tree looking for a discrepancy\r\n                    while ( ap[i] === bp[i] ) {\r\n                        i++;\r\n                    }\r\n\r\n                    return i ?\r\n                        // Do a sibling check if the nodes have a common ancestor\r\n                        siblingCheck( ap[i], bp[i] ) :\r\n\r\n                        // Otherwise nodes in our document sort first\r\n                        ap[i] === preferredDoc ? -1 :\r\n                            bp[i] === preferredDoc ? 1 :\r\n                                0;\r\n                };\r\n\r\n            return doc;\r\n        };\r\n\r\n        Sizzle.matches = function( expr, elements ) {\r\n            return Sizzle( expr, null, null, elements );\r\n        };\r\n\r\n        Sizzle.matchesSelector = function( elem, expr ) {\r\n            // Set document vars if needed\r\n            if ( ( elem.ownerDocument || elem ) !== document ) {\r\n                setDocument( elem );\r\n            }\r\n\r\n            // Make sure that attribute selectors are quoted\r\n            expr = expr.replace( rattributeQuotes, \"='$1']\" );\r\n\r\n            if ( support.matchesSelector && documentIsHTML &&\r\n                ( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\r\n                ( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\r\n\r\n                try {\r\n                    var ret = matches.call( elem, expr );\r\n\r\n                    // IE 9's matchesSelector returns false on disconnected nodes\r\n                    if ( ret || support.disconnectedMatch ||\r\n                        // As well, disconnected nodes are said to be in a document\r\n                        // fragment in IE 9\r\n                        elem.document && elem.document.nodeType !== 11 ) {\r\n                        return ret;\r\n                    }\r\n                } catch(e) {}\r\n            }\r\n\r\n            return Sizzle( expr, document, null, [elem] ).length > 0;\r\n        };\r\n\r\n        Sizzle.contains = function( context, elem ) {\r\n            // Set document vars if needed\r\n            if ( ( context.ownerDocument || context ) !== document ) {\r\n                setDocument( context );\r\n            }\r\n            return contains( context, elem );\r\n        };\r\n\r\n        Sizzle.attr = function( elem, name ) {\r\n            // Set document vars if needed\r\n            if ( ( elem.ownerDocument || elem ) !== document ) {\r\n                setDocument( elem );\r\n            }\r\n\r\n            var fn = Expr.attrHandle[ name.toLowerCase() ],\r\n            // Don't get fooled by Object.prototype properties (jQuery #13807)\r\n                val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\r\n                    fn( elem, name, !documentIsHTML ) :\r\n                    undefined;\r\n\r\n            return val === undefined ?\r\n                support.attributes || !documentIsHTML ?\r\n                    elem.getAttribute( name ) :\r\n                    (val = elem.getAttributeNode(name)) && val.specified ?\r\n                        val.value :\r\n                        null :\r\n                val;\r\n        };\r\n\r\n        Sizzle.error = function( msg ) {\r\n            throw new Error( \"Syntax error, unrecognized expression: \" + msg );\r\n        };\r\n\r\n        /**\r\n         * Document sorting and removing duplicates\r\n         * @param {ArrayLike} results\r\n         */\r\n        Sizzle.uniqueSort = function( results ) {\r\n            var elem,\r\n                duplicates = [],\r\n                j = 0,\r\n                i = 0;\r\n\r\n            // Unless we *know* we can detect duplicates, assume their presence\r\n            hasDuplicate = !support.detectDuplicates;\r\n            sortInput = !support.sortStable && results.slice( 0 );\r\n            results.sort( sortOrder );\r\n\r\n            if ( hasDuplicate ) {\r\n                while ( (elem = results[i++]) ) {\r\n                    if ( elem === results[ i ] ) {\r\n                        j = duplicates.push( i );\r\n                    }\r\n                }\r\n                while ( j-- ) {\r\n                    results.splice( duplicates[ j ], 1 );\r\n                }\r\n            }\r\n\r\n            return results;\r\n        };\r\n\r\n        /**\r\n         * Utility function for retrieving the text value of an array of DOM nodes\r\n         * @param {Array|Element} elem\r\n         */\r\n        getText = Sizzle.getText = function( elem ) {\r\n            var node,\r\n                ret = \"\",\r\n                i = 0,\r\n                nodeType = elem.nodeType;\r\n\r\n            if ( !nodeType ) {\r\n                // If no nodeType, this is expected to be an array\r\n                for ( ; (node = elem[i]); i++ ) {\r\n                    // Do not traverse comment nodes\r\n                    ret += getText( node );\r\n                }\r\n            } else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\r\n                // Use textContent for elements\r\n                // innerText usage removed for consistency of new lines (see #11153)\r\n                if ( typeof elem.textContent === \"string\" ) {\r\n                    return elem.textContent;\r\n                } else {\r\n                    // Traverse its children\r\n                    for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\r\n                        ret += getText( elem );\r\n                    }\r\n                }\r\n            } else if ( nodeType === 3 || nodeType === 4 ) {\r\n                return elem.nodeValue;\r\n            }\r\n            // Do not include comment or processing instruction nodes\r\n\r\n            return ret;\r\n        };\r\n\r\n        Expr = Sizzle.selectors = {\r\n\r\n            // Can be adjusted by the user\r\n            cacheLength: 50,\r\n\r\n            createPseudo: markFunction,\r\n\r\n            match: matchExpr,\r\n\r\n            attrHandle: {},\r\n\r\n            find: {},\r\n\r\n            relative: {\r\n                \">\": { dir: \"parentNode\", first: true },\r\n                \" \": { dir: \"parentNode\" },\r\n                \"+\": { dir: \"previousSibling\", first: true },\r\n                \"~\": { dir: \"previousSibling\" }\r\n            },\r\n\r\n            preFilter: {\r\n                \"ATTR\": function( match ) {\r\n                    match[1] = match[1].replace( runescape, funescape );\r\n\r\n                    // Move the given value to match[3] whether quoted or unquoted\r\n                    match[3] = ( match[4] || match[5] || \"\" ).replace( runescape, funescape );\r\n\r\n                    if ( match[2] === \"~=\" ) {\r\n                        match[3] = \" \" + match[3] + \" \";\r\n                    }\r\n\r\n                    return match.slice( 0, 4 );\r\n                },\r\n\r\n                \"CHILD\": function( match ) {\r\n                    /* matches from matchExpr[\"CHILD\"]\r\n                     1 type (only|nth|...)\r\n                     2 what (child|of-type)\r\n                     3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\r\n                     4 xn-component of xn+y argument ([+-]?\\d*n|)\r\n                     5 sign of xn-component\r\n                     6 x of xn-component\r\n                     7 sign of y-component\r\n                     8 y of y-component\r\n                     */\r\n                    match[1] = match[1].toLowerCase();\r\n\r\n                    if ( match[1].slice( 0, 3 ) === \"nth\" ) {\r\n                        // nth-* requires argument\r\n                        if ( !match[3] ) {\r\n                            Sizzle.error( match[0] );\r\n                        }\r\n\r\n                        // numeric x and y parameters for Expr.filter.CHILD\r\n                        // remember that false/true cast respectively to 0/1\r\n                        match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\r\n                        match[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\r\n\r\n                        // other types prohibit arguments\r\n                    } else if ( match[3] ) {\r\n                        Sizzle.error( match[0] );\r\n                    }\r\n\r\n                    return match;\r\n                },\r\n\r\n                \"PSEUDO\": function( match ) {\r\n                    var excess,\r\n                        unquoted = !match[5] && match[2];\r\n\r\n                    if ( matchExpr[\"CHILD\"].test( match[0] ) ) {\r\n                        return null;\r\n                    }\r\n\r\n                    // Accept quoted arguments as-is\r\n                    if ( match[3] && match[4] !== undefined ) {\r\n                        match[2] = match[4];\r\n\r\n                        // Strip excess characters from unquoted arguments\r\n                    } else if ( unquoted && rpseudo.test( unquoted ) &&\r\n                        // Get excess from tokenize (recursively)\r\n                        (excess = tokenize( unquoted, true )) &&\r\n                        // advance to the next closing parenthesis\r\n                        (excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\r\n\r\n                        // excess is a negative index\r\n                        match[0] = match[0].slice( 0, excess );\r\n                        match[2] = unquoted.slice( 0, excess );\r\n                    }\r\n\r\n                    // Return only captures needed by the pseudo filter method (type and argument)\r\n                    return match.slice( 0, 3 );\r\n                }\r\n            },\r\n\r\n            filter: {\r\n\r\n                \"TAG\": function( nodeNameSelector ) {\r\n                    var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\r\n                    return nodeNameSelector === \"*\" ?\r\n                        function() { return true; } :\r\n                        function( elem ) {\r\n                            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\r\n                        };\r\n                },\r\n\r\n                \"CLASS\": function( className ) {\r\n                    var pattern = classCache[ className + \" \" ];\r\n\r\n                    return pattern ||\r\n                        (pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\r\n                            classCache( className, function( elem ) {\r\n                                return pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute(\"class\") || \"\" );\r\n                            });\r\n                },\r\n\r\n                \"ATTR\": function( name, operator, check ) {\r\n                    return function( elem ) {\r\n                        var result = Sizzle.attr( elem, name );\r\n\r\n                        if ( result == null ) {\r\n                            return operator === \"!=\";\r\n                        }\r\n                        if ( !operator ) {\r\n                            return true;\r\n                        }\r\n\r\n                        result += \"\";\r\n\r\n                        return operator === \"=\" ? result === check :\r\n                            operator === \"!=\" ? result !== check :\r\n                                operator === \"^=\" ? check && result.indexOf( check ) === 0 :\r\n                                    operator === \"*=\" ? check && result.indexOf( check ) > -1 :\r\n                                        operator === \"$=\" ? check && result.slice( -check.length ) === check :\r\n                                            operator === \"~=\" ? ( \" \" + result + \" \" ).indexOf( check ) > -1 :\r\n                                                operator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\r\n                                                    false;\r\n                    };\r\n                },\r\n\r\n                \"CHILD\": function( type, what, argument, first, last ) {\r\n                    var simple = type.slice( 0, 3 ) !== \"nth\",\r\n                        forward = type.slice( -4 ) !== \"last\",\r\n                        ofType = what === \"of-type\";\r\n\r\n                    return first === 1 && last === 0 ?\r\n\r\n                        // Shortcut for :nth-*(n)\r\n                        function( elem ) {\r\n                            return !!elem.parentNode;\r\n                        } :\r\n\r\n                        function( elem, context, xml ) {\r\n                            var cache, outerCache, node, diff, nodeIndex, start,\r\n                                dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\r\n                                parent = elem.parentNode,\r\n                                name = ofType && elem.nodeName.toLowerCase(),\r\n                                useCache = !xml && !ofType;\r\n\r\n                            if ( parent ) {\r\n\r\n                                // :(first|last|only)-(child|of-type)\r\n                                if ( simple ) {\r\n                                    while ( dir ) {\r\n                                        node = elem;\r\n                                        while ( (node = node[ dir ]) ) {\r\n                                            if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {\r\n                                                return false;\r\n                                            }\r\n                                        }\r\n                                        // Reverse direction for :only-* (if we haven't yet done so)\r\n                                        start = dir = type === \"only\" && !start && \"nextSibling\";\r\n                                    }\r\n                                    return true;\r\n                                }\r\n\r\n                                start = [ forward ? parent.firstChild : parent.lastChild ];\r\n\r\n                                // non-xml :nth-child(...) stores cache data on `parent`\r\n                                if ( forward && useCache ) {\r\n                                    // Seek `elem` from a previously-cached index\r\n                                    outerCache = parent[ expando ] || (parent[ expando ] = {});\r\n                                    cache = outerCache[ type ] || [];\r\n                                    nodeIndex = cache[0] === dirruns && cache[1];\r\n                                    diff = cache[0] === dirruns && cache[2];\r\n                                    node = nodeIndex && parent.childNodes[ nodeIndex ];\r\n\r\n                                    while ( (node = ++nodeIndex && node && node[ dir ] ||\r\n\r\n                                        // Fallback to seeking `elem` from the start\r\n                                        (diff = nodeIndex = 0) || start.pop()) ) {\r\n\r\n                                        // When found, cache indexes on `parent` and break\r\n                                        if ( node.nodeType === 1 && ++diff && node === elem ) {\r\n                                            outerCache[ type ] = [ dirruns, nodeIndex, diff ];\r\n                                            break;\r\n                                        }\r\n                                    }\r\n\r\n                                    // Use previously-cached element index if available\r\n                                } else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {\r\n                                    diff = cache[1];\r\n\r\n                                    // xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)\r\n                                } else {\r\n                                    // Use the same loop as above to seek `elem` from the start\r\n                                    while ( (node = ++nodeIndex && node && node[ dir ] ||\r\n                                        (diff = nodeIndex = 0) || start.pop()) ) {\r\n\r\n                                        if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {\r\n                                            // Cache the index of each encountered element\r\n                                            if ( useCache ) {\r\n                                                (node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];\r\n                                            }\r\n\r\n                                            if ( node === elem ) {\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                // Incorporate the offset, then check against cycle size\r\n                                diff -= last;\r\n                                return diff === first || ( diff % first === 0 && diff / first >= 0 );\r\n                            }\r\n                        };\r\n                },\r\n\r\n                \"PSEUDO\": function( pseudo, argument ) {\r\n                    // pseudo-class names are case-insensitive\r\n                    // http://www.w3.org/TR/selectors/#pseudo-classes\r\n                    // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\r\n                    // Remember that setFilters inherits from pseudos\r\n                    var args,\r\n                        fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\r\n                            Sizzle.error( \"unsupported pseudo: \" + pseudo );\r\n\r\n                    // The user may use createPseudo to indicate that\r\n                    // arguments are needed to create the filter function\r\n                    // just as Sizzle does\r\n                    if ( fn[ expando ] ) {\r\n                        return fn( argument );\r\n                    }\r\n\r\n                    // But maintain support for old signatures\r\n                    if ( fn.length > 1 ) {\r\n                        args = [ pseudo, pseudo, \"\", argument ];\r\n                        return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\r\n                            markFunction(function( seed, matches ) {\r\n                                var idx,\r\n                                    matched = fn( seed, argument ),\r\n                                    i = matched.length;\r\n                                while ( i-- ) {\r\n                                    idx = indexOf.call( seed, matched[i] );\r\n                                    seed[ idx ] = !( matches[ idx ] = matched[i] );\r\n                                }\r\n                            }) :\r\n                            function( elem ) {\r\n                                return fn( elem, 0, args );\r\n                            };\r\n                    }\r\n\r\n                    return fn;\r\n                }\r\n            },\r\n\r\n            pseudos: {\r\n                // Potentially complex pseudos\r\n                \"not\": markFunction(function( selector ) {\r\n                    // Trim the selector passed to compile\r\n                    // to avoid treating leading and trailing\r\n                    // spaces as combinators\r\n                    var input = [],\r\n                        results = [],\r\n                        matcher = compile( selector.replace( rtrim, \"$1\" ) );\r\n\r\n                    return matcher[ expando ] ?\r\n                        markFunction(function( seed, matches, context, xml ) {\r\n                            var elem,\r\n                                unmatched = matcher( seed, null, xml, [] ),\r\n                                i = seed.length;\r\n\r\n                            // Match elements unmatched by `matcher`\r\n                            while ( i-- ) {\r\n                                if ( (elem = unmatched[i]) ) {\r\n                                    seed[i] = !(matches[i] = elem);\r\n                                }\r\n                            }\r\n                        }) :\r\n                        function( elem, context, xml ) {\r\n                            input[0] = elem;\r\n                            matcher( input, null, xml, results );\r\n                            return !results.pop();\r\n                        };\r\n                }),\r\n\r\n                \"has\": markFunction(function( selector ) {\r\n                    return function( elem ) {\r\n                        return Sizzle( selector, elem ).length > 0;\r\n                    };\r\n                }),\r\n\r\n                \"contains\": markFunction(function( text ) {\r\n                    return function( elem ) {\r\n                        return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\r\n                    };\r\n                }),\r\n\r\n                // \"Whether an element is represented by a :lang() selector\r\n                // is based solely on the element's language value\r\n                // being equal to the identifier C,\r\n                // or beginning with the identifier C immediately followed by \"-\".\r\n                // The matching of C against the element's language value is performed case-insensitively.\r\n                // The identifier C does not have to be a valid language name.\"\r\n                // http://www.w3.org/TR/selectors/#lang-pseudo\r\n                \"lang\": markFunction( function( lang ) {\r\n                    // lang value must be a valid identifier\r\n                    if ( !ridentifier.test(lang || \"\") ) {\r\n                        Sizzle.error( \"unsupported lang: \" + lang );\r\n                    }\r\n                    lang = lang.replace( runescape, funescape ).toLowerCase();\r\n                    return function( elem ) {\r\n                        var elemLang;\r\n                        do {\r\n                            if ( (elemLang = documentIsHTML ?\r\n                                elem.lang :\r\n                                elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\r\n\r\n                                elemLang = elemLang.toLowerCase();\r\n                                return elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\r\n                            }\r\n                        } while ( (elem = elem.parentNode) && elem.nodeType === 1 );\r\n                        return false;\r\n                    };\r\n                }),\r\n\r\n                // Miscellaneous\r\n                \"target\": function( elem ) {\r\n                    var hash = window.location && window.location.hash;\r\n                    return hash && hash.slice( 1 ) === elem.id;\r\n                },\r\n\r\n                \"root\": function( elem ) {\r\n                    return elem === docElem;\r\n                },\r\n\r\n                \"focus\": function( elem ) {\r\n                    return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\r\n                },\r\n\r\n                // Boolean properties\r\n                \"enabled\": function( elem ) {\r\n                    return elem.disabled === false;\r\n                },\r\n\r\n                \"disabled\": function( elem ) {\r\n                    return elem.disabled === true;\r\n                },\r\n\r\n                \"checked\": function( elem ) {\r\n                    // In CSS3, :checked should return both checked and selected elements\r\n                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\r\n                    var nodeName = elem.nodeName.toLowerCase();\r\n                    return (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\r\n                },\r\n\r\n                \"selected\": function( elem ) {\r\n                    // Accessing this property makes selected-by-default\r\n                    // options in Safari work properly\r\n                    if ( elem.parentNode ) {\r\n                        elem.parentNode.selectedIndex;\r\n                    }\r\n\r\n                    return elem.selected === true;\r\n                },\r\n\r\n                // Contents\r\n                \"empty\": function( elem ) {\r\n                    // http://www.w3.org/TR/selectors/#empty-pseudo\r\n                    // :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),\r\n                    //   not comment, processing instructions, or others\r\n                    // Thanks to Diego Perini for the nodeName shortcut\r\n                    //   Greater than \"@\" means alpha characters (specifically not starting with \"#\" or \"?\")\r\n                    for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\r\n                        if ( elem.nodeName > \"@\" || elem.nodeType === 3 || elem.nodeType === 4 ) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                },\r\n\r\n                \"parent\": function( elem ) {\r\n                    return !Expr.pseudos[\"empty\"]( elem );\r\n                },\r\n\r\n                // Element/input types\r\n                \"header\": function( elem ) {\r\n                    return rheader.test( elem.nodeName );\r\n                },\r\n\r\n                \"input\": function( elem ) {\r\n                    return rinputs.test( elem.nodeName );\r\n                },\r\n\r\n                \"button\": function( elem ) {\r\n                    var name = elem.nodeName.toLowerCase();\r\n                    return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n                },\r\n\r\n                \"text\": function( elem ) {\r\n                    var attr;\r\n                    // IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)\r\n                    // use getAttribute instead to test this case\r\n                    return elem.nodeName.toLowerCase() === \"input\" &&\r\n                        elem.type === \"text\" &&\r\n                        ( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === elem.type );\r\n                },\r\n\r\n                // Position-in-collection\r\n                \"first\": createPositionalPseudo(function() {\r\n                    return [ 0 ];\r\n                }),\r\n\r\n                \"last\": createPositionalPseudo(function( matchIndexes, length ) {\r\n                    return [ length - 1 ];\r\n                }),\r\n\r\n                \"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n                    return [ argument < 0 ? argument + length : argument ];\r\n                }),\r\n\r\n                \"even\": createPositionalPseudo(function( matchIndexes, length ) {\r\n                    var i = 0;\r\n                    for ( ; i < length; i += 2 ) {\r\n                        matchIndexes.push( i );\r\n                    }\r\n                    return matchIndexes;\r\n                }),\r\n\r\n                \"odd\": createPositionalPseudo(function( matchIndexes, length ) {\r\n                    var i = 1;\r\n                    for ( ; i < length; i += 2 ) {\r\n                        matchIndexes.push( i );\r\n                    }\r\n                    return matchIndexes;\r\n                }),\r\n\r\n                \"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n                    var i = argument < 0 ? argument + length : argument;\r\n                    for ( ; --i >= 0; ) {\r\n                        matchIndexes.push( i );\r\n                    }\r\n                    return matchIndexes;\r\n                }),\r\n\r\n                \"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n                    var i = argument < 0 ? argument + length : argument;\r\n                    for ( ; ++i < length; ) {\r\n                        matchIndexes.push( i );\r\n                    }\r\n                    return matchIndexes;\r\n                })\r\n            }\r\n        };\r\n\r\n        Expr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\r\n\r\n// Add button/input type pseudos\r\n        for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n            Expr.pseudos[ i ] = createInputPseudo( i );\r\n        }\r\n        for ( i in { submit: true, reset: true } ) {\r\n            Expr.pseudos[ i ] = createButtonPseudo( i );\r\n        }\r\n\r\n// Easy API for creating new setFilters\r\n        function setFilters() {}\r\n        setFilters.prototype = Expr.filters = Expr.pseudos;\r\n        Expr.setFilters = new setFilters();\r\n\r\n        function tokenize( selector, parseOnly ) {\r\n            var matched, match, tokens, type,\r\n                soFar, groups, preFilters,\r\n                cached = tokenCache[ selector + \" \" ];\r\n\r\n            if ( cached ) {\r\n                return parseOnly ? 0 : cached.slice( 0 );\r\n            }\r\n\r\n            soFar = selector;\r\n            groups = [];\r\n            preFilters = Expr.preFilter;\r\n\r\n            while ( soFar ) {\r\n\r\n                // Comma and first run\r\n                if ( !matched || (match = rcomma.exec( soFar )) ) {\r\n                    if ( match ) {\r\n                        // Don't consume trailing commas as valid\r\n                        soFar = soFar.slice( match[0].length ) || soFar;\r\n                    }\r\n                    groups.push( tokens = [] );\r\n                }\r\n\r\n                matched = false;\r\n\r\n                // Combinators\r\n                if ( (match = rcombinators.exec( soFar )) ) {\r\n                    matched = match.shift();\r\n                    tokens.push({\r\n                        value: matched,\r\n                        // Cast descendant combinators to space\r\n                        type: match[0].replace( rtrim, \" \" )\r\n                    });\r\n                    soFar = soFar.slice( matched.length );\r\n                }\r\n\r\n                // Filters\r\n                for ( type in Expr.filter ) {\r\n                    if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\r\n                        (match = preFilters[ type ]( match ))) ) {\r\n                        matched = match.shift();\r\n                        tokens.push({\r\n                            value: matched,\r\n                            type: type,\r\n                            matches: match\r\n                        });\r\n                        soFar = soFar.slice( matched.length );\r\n                    }\r\n                }\r\n\r\n                if ( !matched ) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Return the length of the invalid excess\r\n            // if we're just parsing\r\n            // Otherwise, throw an error or return tokens\r\n            return parseOnly ?\r\n                soFar.length :\r\n                soFar ?\r\n                    Sizzle.error( selector ) :\r\n                    // Cache the tokens\r\n                    tokenCache( selector, groups ).slice( 0 );\r\n        }\r\n\r\n        function toSelector( tokens ) {\r\n            var i = 0,\r\n                len = tokens.length,\r\n                selector = \"\";\r\n            for ( ; i < len; i++ ) {\r\n                selector += tokens[i].value;\r\n            }\r\n            return selector;\r\n        }\r\n\r\n        function addCombinator( matcher, combinator, base ) {\r\n            var dir = combinator.dir,\r\n                checkNonElements = base && dir === \"parentNode\",\r\n                doneName = done++;\r\n\r\n            return combinator.first ?\r\n                // Check against closest ancestor/preceding element\r\n                function( elem, context, xml ) {\r\n                    while ( (elem = elem[ dir ]) ) {\r\n                        if ( elem.nodeType === 1 || checkNonElements ) {\r\n                            return matcher( elem, context, xml );\r\n                        }\r\n                    }\r\n                } :\r\n\r\n                // Check against all ancestor/preceding elements\r\n                function( elem, context, xml ) {\r\n                    var data, cache, outerCache,\r\n                        dirkey = dirruns + \" \" + doneName;\r\n\r\n                    // We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\r\n                    if ( xml ) {\r\n                        while ( (elem = elem[ dir ]) ) {\r\n                            if ( elem.nodeType === 1 || checkNonElements ) {\r\n                                if ( matcher( elem, context, xml ) ) {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        while ( (elem = elem[ dir ]) ) {\r\n                            if ( elem.nodeType === 1 || checkNonElements ) {\r\n                                outerCache = elem[ expando ] || (elem[ expando ] = {});\r\n                                if ( (cache = outerCache[ dir ]) && cache[0] === dirkey ) {\r\n                                    if ( (data = cache[1]) === true || data === cachedruns ) {\r\n                                        return data === true;\r\n                                    }\r\n                                } else {\r\n                                    cache = outerCache[ dir ] = [ dirkey ];\r\n                                    cache[1] = matcher( elem, context, xml ) || cachedruns;\r\n                                    if ( cache[1] === true ) {\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n        }\r\n\r\n        function elementMatcher( matchers ) {\r\n            return matchers.length > 1 ?\r\n                function( elem, context, xml ) {\r\n                    var i = matchers.length;\r\n                    while ( i-- ) {\r\n                        if ( !matchers[i]( elem, context, xml ) ) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                } :\r\n                matchers[0];\r\n        }\r\n\r\n        function condense( unmatched, map, filter, context, xml ) {\r\n            var elem,\r\n                newUnmatched = [],\r\n                i = 0,\r\n                len = unmatched.length,\r\n                mapped = map != null;\r\n\r\n            for ( ; i < len; i++ ) {\r\n                if ( (elem = unmatched[i]) ) {\r\n                    if ( !filter || filter( elem, context, xml ) ) {\r\n                        newUnmatched.push( elem );\r\n                        if ( mapped ) {\r\n                            map.push( i );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return newUnmatched;\r\n        }\r\n\r\n        function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\r\n            if ( postFilter && !postFilter[ expando ] ) {\r\n                postFilter = setMatcher( postFilter );\r\n            }\r\n            if ( postFinder && !postFinder[ expando ] ) {\r\n                postFinder = setMatcher( postFinder, postSelector );\r\n            }\r\n            return markFunction(function( seed, results, context, xml ) {\r\n                var temp, i, elem,\r\n                    preMap = [],\r\n                    postMap = [],\r\n                    preexisting = results.length,\r\n\r\n                // Get initial elements from seed or context\r\n                    elems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\r\n\r\n                // Prefilter to get matcher input, preserving a map for seed-results synchronization\r\n                    matcherIn = preFilter && ( seed || !selector ) ?\r\n                        condense( elems, preMap, preFilter, context, xml ) :\r\n                        elems,\r\n\r\n                    matcherOut = matcher ?\r\n                        // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\r\n                        postFinder || ( seed ? preFilter : preexisting || postFilter ) ?\r\n\r\n                            // ...intermediate processing is necessary\r\n                            [] :\r\n\r\n                            // ...otherwise use results directly\r\n                            results :\r\n                        matcherIn;\r\n\r\n                // Find primary matches\r\n                if ( matcher ) {\r\n                    matcher( matcherIn, matcherOut, context, xml );\r\n                }\r\n\r\n                // Apply postFilter\r\n                if ( postFilter ) {\r\n                    temp = condense( matcherOut, postMap );\r\n                    postFilter( temp, [], context, xml );\r\n\r\n                    // Un-match failing elements by moving them back to matcherIn\r\n                    i = temp.length;\r\n                    while ( i-- ) {\r\n                        if ( (elem = temp[i]) ) {\r\n                            matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if ( seed ) {\r\n                    if ( postFinder || preFilter ) {\r\n                        if ( postFinder ) {\r\n                            // Get the final matcherOut by condensing this intermediate into postFinder contexts\r\n                            temp = [];\r\n                            i = matcherOut.length;\r\n                            while ( i-- ) {\r\n                                if ( (elem = matcherOut[i]) ) {\r\n                                    // Restore matcherIn since elem is not yet a final match\r\n                                    temp.push( (matcherIn[i] = elem) );\r\n                                }\r\n                            }\r\n                            postFinder( null, (matcherOut = []), temp, xml );\r\n                        }\r\n\r\n                        // Move matched elements from seed to results to keep them synchronized\r\n                        i = matcherOut.length;\r\n                        while ( i-- ) {\r\n                            if ( (elem = matcherOut[i]) &&\r\n                                (temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {\r\n\r\n                                seed[temp] = !(results[temp] = elem);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Add elements to results, through postFinder if defined\r\n                } else {\r\n                    matcherOut = condense(\r\n                        matcherOut === results ?\r\n                            matcherOut.splice( preexisting, matcherOut.length ) :\r\n                            matcherOut\r\n                    );\r\n                    if ( postFinder ) {\r\n                        postFinder( null, results, matcherOut, xml );\r\n                    } else {\r\n                        push.apply( results, matcherOut );\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        function matcherFromTokens( tokens ) {\r\n            var checkContext, matcher, j,\r\n                len = tokens.length,\r\n                leadingRelative = Expr.relative[ tokens[0].type ],\r\n                implicitRelative = leadingRelative || Expr.relative[\" \"],\r\n                i = leadingRelative ? 1 : 0,\r\n\r\n            // The foundational matcher ensures that elements are reachable from top-level context(s)\r\n                matchContext = addCombinator( function( elem ) {\r\n                    return elem === checkContext;\r\n                }, implicitRelative, true ),\r\n                matchAnyContext = addCombinator( function( elem ) {\r\n                    return indexOf.call( checkContext, elem ) > -1;\r\n                }, implicitRelative, true ),\r\n                matchers = [ function( elem, context, xml ) {\r\n                    return ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\r\n                        (checkContext = context).nodeType ?\r\n                            matchContext( elem, context, xml ) :\r\n                            matchAnyContext( elem, context, xml ) );\r\n                } ];\r\n\r\n            for ( ; i < len; i++ ) {\r\n                if ( (matcher = Expr.relative[ tokens[i].type ]) ) {\r\n                    matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\r\n                } else {\r\n                    matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\r\n\r\n                    // Return special upon seeing a positional matcher\r\n                    if ( matcher[ expando ] ) {\r\n                        // Find the next relative operator (if any) for proper handling\r\n                        j = ++i;\r\n                        for ( ; j < len; j++ ) {\r\n                            if ( Expr.relative[ tokens[j].type ] ) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        return setMatcher(\r\n                            i > 1 && elementMatcher( matchers ),\r\n                            i > 1 && toSelector(\r\n                                // If the preceding token was a descendant combinator, insert an implicit any-element `*`\r\n                                tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\r\n                            ).replace( rtrim, \"$1\" ),\r\n                            matcher,\r\n                            i < j && matcherFromTokens( tokens.slice( i, j ) ),\r\n                            j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\r\n                            j < len && toSelector( tokens )\r\n                        );\r\n                    }\r\n                    matchers.push( matcher );\r\n                }\r\n            }\r\n\r\n            return elementMatcher( matchers );\r\n        }\r\n\r\n        function matcherFromGroupMatchers( elementMatchers, setMatchers ) {\r\n            // A counter to specify which element is currently being matched\r\n            var matcherCachedRuns = 0,\r\n                bySet = setMatchers.length > 0,\r\n                byElement = elementMatchers.length > 0,\r\n                superMatcher = function( seed, context, xml, results, expandContext ) {\r\n                    var elem, j, matcher,\r\n                        setMatched = [],\r\n                        matchedCount = 0,\r\n                        i = \"0\",\r\n                        unmatched = seed && [],\r\n                        outermost = expandContext != null,\r\n                        contextBackup = outermostContext,\r\n                    // We must always have either seed elements or context\r\n                        elems = seed || byElement && Expr.find[\"TAG\"]( \"*\", expandContext && context.parentNode || context ),\r\n                    // Use integer dirruns iff this is the outermost matcher\r\n                        dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1);\r\n\r\n                    if ( outermost ) {\r\n                        outermostContext = context !== document && context;\r\n                        cachedruns = matcherCachedRuns;\r\n                    }\r\n\r\n                    // Add elements passing elementMatchers directly to results\r\n                    // Keep `i` a string if there are no elements so `matchedCount` will be \"00\" below\r\n                    for ( ; (elem = elems[i]) != null; i++ ) {\r\n                        if ( byElement && elem ) {\r\n                            j = 0;\r\n                            while ( (matcher = elementMatchers[j++]) ) {\r\n                                if ( matcher( elem, context, xml ) ) {\r\n                                    results.push( elem );\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if ( outermost ) {\r\n                                dirruns = dirrunsUnique;\r\n                                cachedruns = ++matcherCachedRuns;\r\n                            }\r\n                        }\r\n\r\n                        // Track unmatched elements for set filters\r\n                        if ( bySet ) {\r\n                            // They will have gone through all possible matchers\r\n                            if ( (elem = !matcher && elem) ) {\r\n                                matchedCount--;\r\n                            }\r\n\r\n                            // Lengthen the array for every element, matched or not\r\n                            if ( seed ) {\r\n                                unmatched.push( elem );\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Apply set filters to unmatched elements\r\n                    matchedCount += i;\r\n                    if ( bySet && i !== matchedCount ) {\r\n                        j = 0;\r\n                        while ( (matcher = setMatchers[j++]) ) {\r\n                            matcher( unmatched, setMatched, context, xml );\r\n                        }\r\n\r\n                        if ( seed ) {\r\n                            // Reintegrate element matches to eliminate the need for sorting\r\n                            if ( matchedCount > 0 ) {\r\n                                while ( i-- ) {\r\n                                    if ( !(unmatched[i] || setMatched[i]) ) {\r\n                                        setMatched[i] = pop.call( results );\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            // Discard index placeholder values to get only actual matches\r\n                            setMatched = condense( setMatched );\r\n                        }\r\n\r\n                        // Add matches to results\r\n                        push.apply( results, setMatched );\r\n\r\n                        // Seedless set matches succeeding multiple successful matchers stipulate sorting\r\n                        if ( outermost && !seed && setMatched.length > 0 &&\r\n                            ( matchedCount + setMatchers.length ) > 1 ) {\r\n\r\n                            Sizzle.uniqueSort( results );\r\n                        }\r\n                    }\r\n\r\n                    // Override manipulation of globals by nested matchers\r\n                    if ( outermost ) {\r\n                        dirruns = dirrunsUnique;\r\n                        outermostContext = contextBackup;\r\n                    }\r\n\r\n                    return unmatched;\r\n                };\r\n\r\n            return bySet ?\r\n                markFunction( superMatcher ) :\r\n                superMatcher;\r\n        }\r\n\r\n        compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {\r\n            var i,\r\n                setMatchers = [],\r\n                elementMatchers = [],\r\n                cached = compilerCache[ selector + \" \" ];\r\n\r\n            if ( !cached ) {\r\n                // Generate a function of recursive functions that can be used to check each element\r\n                if ( !group ) {\r\n                    group = tokenize( selector );\r\n                }\r\n                i = group.length;\r\n                while ( i-- ) {\r\n                    cached = matcherFromTokens( group[i] );\r\n                    if ( cached[ expando ] ) {\r\n                        setMatchers.push( cached );\r\n                    } else {\r\n                        elementMatchers.push( cached );\r\n                    }\r\n                }\r\n\r\n                // Cache the compiled function\r\n                cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\r\n            }\r\n            return cached;\r\n        };\r\n\r\n        function multipleContexts( selector, contexts, results ) {\r\n            var i = 0,\r\n                len = contexts.length;\r\n            for ( ; i < len; i++ ) {\r\n                Sizzle( selector, contexts[i], results );\r\n            }\r\n            return results;\r\n        }\r\n\r\n        function select( selector, context, results, seed ) {\r\n            var i, tokens, token, type, find,\r\n                match = tokenize( selector );\r\n\r\n            if ( !seed ) {\r\n                // Try to minimize operations if there is only one group\r\n                if ( match.length === 1 ) {\r\n\r\n                    // Take a shortcut and set the context if the root selector is an ID\r\n                    tokens = match[0] = match[0].slice( 0 );\r\n                    if ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\r\n                        support.getById && context.nodeType === 9 && documentIsHTML &&\r\n                        Expr.relative[ tokens[1].type ] ) {\r\n\r\n                        context = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\r\n                        if ( !context ) {\r\n                            return results;\r\n                        }\r\n                        selector = selector.slice( tokens.shift().value.length );\r\n                    }\r\n\r\n                    // Fetch a seed set for right-to-left matching\r\n                    i = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\r\n                    while ( i-- ) {\r\n                        token = tokens[i];\r\n\r\n                        // Abort if we hit a combinator\r\n                        if ( Expr.relative[ (type = token.type) ] ) {\r\n                            break;\r\n                        }\r\n                        if ( (find = Expr.find[ type ]) ) {\r\n                            // Search, expanding context for leading sibling combinators\r\n                            if ( (seed = find(\r\n                                token.matches[0].replace( runescape, funescape ),\r\n                                rsibling.test( tokens[0].type ) && context.parentNode || context\r\n                            )) ) {\r\n\r\n                                // If seed is empty or no tokens remain, we can return early\r\n                                tokens.splice( i, 1 );\r\n                                selector = seed.length && toSelector( tokens );\r\n                                if ( !selector ) {\r\n                                    push.apply( results, seed );\r\n                                    return results;\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Compile and execute a filtering function\r\n            // Provide `match` to avoid retokenization if we modified the selector above\r\n            compile( selector, match )(\r\n                seed,\r\n                context,\r\n                !documentIsHTML,\r\n                results,\r\n                rsibling.test( selector )\r\n            );\r\n            return results;\r\n        }\r\n\r\n// One-time assignments\r\n\r\n// Sort stability\r\n        support.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\r\n\r\n// Support: Chrome<14\r\n// Always assume duplicates if they aren't passed to the comparison function\r\n        support.detectDuplicates = hasDuplicate;\r\n\r\n// Initialize against the default document\r\n        setDocument();\r\n\r\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\r\n// Detached nodes confoundingly follow *each other*\r\n        support.sortDetached = assert(function( div1 ) {\r\n            // Should return 1, but returns 4 (following)\r\n            return div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\r\n        });\r\n\r\n// Support: IE<8\r\n// Prevent attribute/property \"interpolation\"\r\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\r\n        if ( !assert(function( div ) {\r\n            div.innerHTML = \"<a href='#'></a>\";\r\n            return div.firstChild.getAttribute(\"href\") === \"#\" ;\r\n        }) ) {\r\n            addHandle( \"type|href|height|width\", function( elem, name, isXML ) {\r\n                if ( !isXML ) {\r\n                    return elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\r\n                }\r\n            });\r\n        }\r\n\r\n// Support: IE<9\r\n// Use defaultValue in place of getAttribute(\"value\")\r\n        if ( !support.attributes || !assert(function( div ) {\r\n            div.innerHTML = \"<input/>\";\r\n            div.firstChild.setAttribute( \"value\", \"\" );\r\n            return div.firstChild.getAttribute( \"value\" ) === \"\";\r\n        }) ) {\r\n            addHandle( \"value\", function( elem, name, isXML ) {\r\n                if ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\r\n                    return elem.defaultValue;\r\n                }\r\n            });\r\n        }\r\n\r\n// Support: IE<9\r\n// Use getAttributeNode to fetch booleans when getAttribute lies\r\n        if ( !assert(function( div ) {\r\n            return div.getAttribute(\"disabled\") == null;\r\n        }) ) {\r\n            addHandle( booleans, function( elem, name, isXML ) {\r\n                var val;\r\n                if ( !isXML ) {\r\n                    return (val = elem.getAttributeNode( name )) && val.specified ?\r\n                        val.value :\r\n                        elem[ name ] === true ? name.toLowerCase() : null;\r\n                }\r\n            });\r\n        }\r\n\r\n        jQuery.find = Sizzle;\r\n        jQuery.expr = Sizzle.selectors;\r\n        jQuery.expr[\":\"] = jQuery.expr.pseudos;\r\n        jQuery.unique = Sizzle.uniqueSort;\r\n        jQuery.text = Sizzle.getText;\r\n        jQuery.isXMLDoc = Sizzle.isXML;\r\n        jQuery.contains = Sizzle.contains;\r\n\r\n\r\n    })( window );\r\n// String to Object options format cache\r\n    var optionsCache = {};\r\n\r\n// Convert String-formatted options into Object-formatted ones and store in cache\r\n    function createOptions( options ) {\r\n        var object = optionsCache[ options ] = {};\r\n        jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {\r\n            object[ flag ] = true;\r\n        });\r\n        return object;\r\n    }\r\n\r\n    /*\r\n     * Create a callback list using the following parameters:\r\n     *\r\n     *\toptions: an optional list of space-separated options that will change how\r\n     *\t\t\tthe callback list behaves or a more traditional option object\r\n     *\r\n     * By default a callback list will act like an event callback list and can be\r\n     * \"fired\" multiple times.\r\n     *\r\n     * Possible options:\r\n     *\r\n     *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\r\n     *\r\n     *\tmemory:\t\t\twill keep track of previous values and will call any callback added\r\n     *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\r\n     *\t\t\t\t\tvalues (like a Deferred)\r\n     *\r\n     *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\r\n     *\r\n     *\tstopOnFalse:\tinterrupt callings when a callback returns false\r\n     *\r\n     */\r\n    jQuery.Callbacks = function( options ) {\r\n\r\n        // Convert options from String-formatted to Object-formatted if needed\r\n        // (we check in cache first)\r\n        options = typeof options === \"string\" ?\r\n            ( optionsCache[ options ] || createOptions( options ) ) :\r\n            jQuery.extend( {}, options );\r\n\r\n        var // Flag to know if list is currently firing\r\n            firing,\r\n        // Last fire value (for non-forgettable lists)\r\n            memory,\r\n        // Flag to know if list was already fired\r\n            fired,\r\n        // End of the loop when firing\r\n            firingLength,\r\n        // Index of currently firing callback (modified by remove if needed)\r\n            firingIndex,\r\n        // First callback to fire (used internally by add and fireWith)\r\n            firingStart,\r\n        // Actual callback list\r\n            list = [],\r\n        // Stack of fire calls for repeatable lists\r\n            stack = !options.once && [],\r\n        // Fire callbacks\r\n            fire = function( data ) {\r\n                memory = options.memory && data;\r\n                fired = true;\r\n                firingIndex = firingStart || 0;\r\n                firingStart = 0;\r\n                firingLength = list.length;\r\n                firing = true;\r\n                for ( ; list && firingIndex < firingLength; firingIndex++ ) {\r\n                    if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {\r\n                        memory = false; // To prevent further calls using add\r\n                        break;\r\n                    }\r\n                }\r\n                firing = false;\r\n                if ( list ) {\r\n                    if ( stack ) {\r\n                        if ( stack.length ) {\r\n                            fire( stack.shift() );\r\n                        }\r\n                    } else if ( memory ) {\r\n                        list = [];\r\n                    } else {\r\n                        self.disable();\r\n                    }\r\n                }\r\n            },\r\n        // Actual Callbacks object\r\n            self = {\r\n                // Add a callback or a collection of callbacks to the list\r\n                add: function() {\r\n                    if ( list ) {\r\n                        // First, we save the current length\r\n                        var start = list.length;\r\n                        (function add( args ) {\r\n                            jQuery.each( args, function( _, arg ) {\r\n                                var type = jQuery.type( arg );\r\n                                if ( type === \"function\" ) {\r\n                                    if ( !options.unique || !self.has( arg ) ) {\r\n                                        list.push( arg );\r\n                                    }\r\n                                } else if ( arg && arg.length && type !== \"string\" ) {\r\n                                    // Inspect recursively\r\n                                    add( arg );\r\n                                }\r\n                            });\r\n                        })( arguments );\r\n                        // Do we need to add the callbacks to the\r\n                        // current firing batch?\r\n                        if ( firing ) {\r\n                            firingLength = list.length;\r\n                            // With memory, if we're not firing then\r\n                            // we should call right away\r\n                        } else if ( memory ) {\r\n                            firingStart = start;\r\n                            fire( memory );\r\n                        }\r\n                    }\r\n                    return this;\r\n                },\r\n                // Remove a callback from the list\r\n                remove: function() {\r\n                    if ( list ) {\r\n                        jQuery.each( arguments, function( _, arg ) {\r\n                            var index;\r\n                            while( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\r\n                                list.splice( index, 1 );\r\n                                // Handle firing indexes\r\n                                if ( firing ) {\r\n                                    if ( index <= firingLength ) {\r\n                                        firingLength--;\r\n                                    }\r\n                                    if ( index <= firingIndex ) {\r\n                                        firingIndex--;\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    return this;\r\n                },\r\n                // Check if a given callback is in the list.\r\n                // If no argument is given, return whether or not list has callbacks attached.\r\n                has: function( fn ) {\r\n                    return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );\r\n                },\r\n                // Remove all callbacks from the list\r\n                empty: function() {\r\n                    list = [];\r\n                    firingLength = 0;\r\n                    return this;\r\n                },\r\n                // Have the list do nothing anymore\r\n                disable: function() {\r\n                    list = stack = memory = undefined;\r\n                    return this;\r\n                },\r\n                // Is it disabled?\r\n                disabled: function() {\r\n                    return !list;\r\n                },\r\n                // Lock the list in its current state\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if ( !memory ) {\r\n                        self.disable();\r\n                    }\r\n                    return this;\r\n                },\r\n                // Is it locked?\r\n                locked: function() {\r\n                    return !stack;\r\n                },\r\n                // Call all callbacks with the given context and arguments\r\n                fireWith: function( context, args ) {\r\n                    if ( list && ( !fired || stack ) ) {\r\n                        args = args || [];\r\n                        args = [ context, args.slice ? args.slice() : args ];\r\n                        if ( firing ) {\r\n                            stack.push( args );\r\n                        } else {\r\n                            fire( args );\r\n                        }\r\n                    }\r\n                    return this;\r\n                },\r\n                // Call all the callbacks with the given arguments\r\n                fire: function() {\r\n                    self.fireWith( this, arguments );\r\n                    return this;\r\n                },\r\n                // To know if the callbacks have already been called at least once\r\n                fired: function() {\r\n                    return !!fired;\r\n                }\r\n            };\r\n\r\n        return self;\r\n    };\r\n    jQuery.extend({\r\n\r\n        Deferred: function( func ) {\r\n            var tuples = [\r\n                    // action, add listener, listener list, final state\r\n                    [ \"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\" ],\r\n                    [ \"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\" ],\r\n                    [ \"notify\", \"progress\", jQuery.Callbacks(\"memory\") ]\r\n                ],\r\n                state = \"pending\",\r\n                promise = {\r\n                    state: function() {\r\n                        return state;\r\n                    },\r\n                    always: function() {\r\n                        deferred.done( arguments ).fail( arguments );\r\n                        return this;\r\n                    },\r\n                    then: function( /* fnDone, fnFail, fnProgress */ ) {\r\n                        var fns = arguments;\r\n                        return jQuery.Deferred(function( newDefer ) {\r\n                            jQuery.each( tuples, function( i, tuple ) {\r\n                                var action = tuple[ 0 ],\r\n                                    fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\r\n                                // deferred[ done | fail | progress ] for forwarding actions to newDefer\r\n                                deferred[ tuple[1] ](function() {\r\n                                    var returned = fn && fn.apply( this, arguments );\r\n                                    if ( returned && jQuery.isFunction( returned.promise ) ) {\r\n                                        returned.promise()\r\n                                            .done( newDefer.resolve )\r\n                                            .fail( newDefer.reject )\r\n                                            .progress( newDefer.notify );\r\n                                    } else {\r\n                                        newDefer[ action + \"With\" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );\r\n                                    }\r\n                                });\r\n                            });\r\n                            fns = null;\r\n                        }).promise();\r\n                    },\r\n                    // Get a promise for this deferred\r\n                    // If obj is provided, the promise aspect is added to the object\r\n                    promise: function( obj ) {\r\n                        return obj != null ? jQuery.extend( obj, promise ) : promise;\r\n                    }\r\n                },\r\n                deferred = {};\r\n\r\n            // Keep pipe for back-compat\r\n            promise.pipe = promise.then;\r\n\r\n            // Add list-specific methods\r\n            jQuery.each( tuples, function( i, tuple ) {\r\n                var list = tuple[ 2 ],\r\n                    stateString = tuple[ 3 ];\r\n\r\n                // promise[ done | fail | progress ] = list.add\r\n                promise[ tuple[1] ] = list.add;\r\n\r\n                // Handle state\r\n                if ( stateString ) {\r\n                    list.add(function() {\r\n                        // state = [ resolved | rejected ]\r\n                        state = stateString;\r\n\r\n                        // [ reject_list | resolve_list ].disable; progress_list.lock\r\n                    }, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\r\n                }\r\n\r\n                // deferred[ resolve | reject | notify ]\r\n                deferred[ tuple[0] ] = function() {\r\n                    deferred[ tuple[0] + \"With\" ]( this === deferred ? promise : this, arguments );\r\n                    return this;\r\n                };\r\n                deferred[ tuple[0] + \"With\" ] = list.fireWith;\r\n            });\r\n\r\n            // Make the deferred a promise\r\n            promise.promise( deferred );\r\n\r\n            // Call given func if any\r\n            if ( func ) {\r\n                func.call( deferred, deferred );\r\n            }\r\n\r\n            // All done!\r\n            return deferred;\r\n        },\r\n\r\n        // Deferred helper\r\n        when: function( subordinate /* , ..., subordinateN */ ) {\r\n            var i = 0,\r\n                resolveValues = core_slice.call( arguments ),\r\n                length = resolveValues.length,\r\n\r\n            // the count of uncompleted subordinates\r\n                remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\r\n\r\n            // the master Deferred. If resolveValues consist of only a single Deferred, just use that.\r\n                deferred = remaining === 1 ? subordinate : jQuery.Deferred(),\r\n\r\n            // Update function for both resolve and progress values\r\n                updateFunc = function( i, contexts, values ) {\r\n                    return function( value ) {\r\n                        contexts[ i ] = this;\r\n                        values[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;\r\n                        if( values === progressValues ) {\r\n                            deferred.notifyWith( contexts, values );\r\n                        } else if ( !( --remaining ) ) {\r\n                            deferred.resolveWith( contexts, values );\r\n                        }\r\n                    };\r\n                },\r\n\r\n                progressValues, progressContexts, resolveContexts;\r\n\r\n            // add listeners to Deferred subordinates; treat others as resolved\r\n            if ( length > 1 ) {\r\n                progressValues = new Array( length );\r\n                progressContexts = new Array( length );\r\n                resolveContexts = new Array( length );\r\n                for ( ; i < length; i++ ) {\r\n                    if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\r\n                        resolveValues[ i ].promise()\r\n                            .done( updateFunc( i, resolveContexts, resolveValues ) )\r\n                            .fail( deferred.reject )\r\n                            .progress( updateFunc( i, progressContexts, progressValues ) );\r\n                    } else {\r\n                        --remaining;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // if we're not waiting on anything, resolve the master\r\n            if ( !remaining ) {\r\n                deferred.resolveWith( resolveContexts, resolveValues );\r\n            }\r\n\r\n            return deferred.promise();\r\n        }\r\n    });\r\n    jQuery.support = (function( support ) {\r\n\r\n        var all, a, input, select, fragment, opt, eventName, isSupported, i,\r\n            div = document.createElement(\"div\");\r\n\r\n        // Setup\r\n        div.setAttribute( \"className\", \"t\" );\r\n        div.innerHTML = \"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\";\r\n\r\n        // Finish early in limited (non-browser) environments\r\n        all = div.getElementsByTagName(\"*\") || [];\r\n        a = div.getElementsByTagName(\"a\")[ 0 ];\r\n        if ( !a || !a.style || !all.length ) {\r\n            return support;\r\n        }\r\n\r\n        // First batch of tests\r\n        select = document.createElement(\"select\");\r\n        opt = select.appendChild( document.createElement(\"option\") );\r\n        input = div.getElementsByTagName(\"input\")[ 0 ];\r\n\r\n        a.style.cssText = \"top:1px;float:left;opacity:.5\";\r\n\r\n        // Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)\r\n        support.getSetAttribute = div.className !== \"t\";\r\n\r\n        // IE strips leading whitespace when .innerHTML is used\r\n        support.leadingWhitespace = div.firstChild.nodeType === 3;\r\n\r\n        // Make sure that tbody elements aren't automatically inserted\r\n        // IE will insert them into empty tables\r\n        support.tbody = !div.getElementsByTagName(\"tbody\").length;\r\n\r\n        // Make sure that link elements get serialized correctly by innerHTML\r\n        // This requires a wrapper element in IE\r\n        support.htmlSerialize = !!div.getElementsByTagName(\"link\").length;\r\n\r\n        // Get the style information from getAttribute\r\n        // (IE uses .cssText instead)\r\n        support.style = /top/.test( a.getAttribute(\"style\") );\r\n\r\n        // Make sure that URLs aren't manipulated\r\n        // (IE normalizes it by default)\r\n        support.hrefNormalized = a.getAttribute(\"href\") === \"/a\";\r\n\r\n        // Make sure that element opacity exists\r\n        // (IE uses filter instead)\r\n        // Use a regex to work around a WebKit issue. See #5145\r\n        support.opacity = /^0.5/.test( a.style.opacity );\r\n\r\n        // Verify style float existence\r\n        // (IE uses styleFloat instead of cssFloat)\r\n        support.cssFloat = !!a.style.cssFloat;\r\n\r\n        // Check the default checkbox/radio value (\"\" on WebKit; \"on\" elsewhere)\r\n        support.checkOn = !!input.value;\r\n\r\n        // Make sure that a selected-by-default option has a working selected property.\r\n        // (WebKit defaults to false instead of true, IE too, if it's in an optgroup)\r\n        support.optSelected = opt.selected;\r\n\r\n        // Tests for enctype support on a form (#6743)\r\n        support.enctype = !!document.createElement(\"form\").enctype;\r\n\r\n        // Makes sure cloning an html5 element does not cause problems\r\n        // Where outerHTML is undefined, this still works\r\n        support.html5Clone = document.createElement(\"nav\").cloneNode( true ).outerHTML !== \"<:nav></:nav>\";\r\n\r\n        // Will be defined later\r\n        support.inlineBlockNeedsLayout = false;\r\n        support.shrinkWrapBlocks = false;\r\n        support.pixelPosition = false;\r\n        support.deleteExpando = true;\r\n        support.noCloneEvent = true;\r\n        support.reliableMarginRight = true;\r\n        support.boxSizingReliable = true;\r\n\r\n        // Make sure checked status is properly cloned\r\n        input.checked = true;\r\n        support.noCloneChecked = input.cloneNode( true ).checked;\r\n\r\n        // Make sure that the options inside disabled selects aren't marked as disabled\r\n        // (WebKit marks them as disabled)\r\n        select.disabled = true;\r\n        support.optDisabled = !opt.disabled;\r\n\r\n        // Support: IE<9\r\n        try {\r\n            delete div.test;\r\n        } catch( e ) {\r\n            support.deleteExpando = false;\r\n        }\r\n\r\n        // Check if we can trust getAttribute(\"value\")\r\n        input = document.createElement(\"input\");\r\n        input.setAttribute( \"value\", \"\" );\r\n        support.input = input.getAttribute( \"value\" ) === \"\";\r\n\r\n        // Check if an input maintains its value after becoming a radio\r\n        input.value = \"t\";\r\n        input.setAttribute( \"type\", \"radio\" );\r\n        support.radioValue = input.value === \"t\";\r\n\r\n        // #11217 - WebKit loses check when the name is after the checked attribute\r\n        input.setAttribute( \"checked\", \"t\" );\r\n        input.setAttribute( \"name\", \"t\" );\r\n\r\n        fragment = document.createDocumentFragment();\r\n        fragment.appendChild( input );\r\n\r\n        // Check if a disconnected checkbox will retain its checked\r\n        // value of true after appended to the DOM (IE6/7)\r\n        support.appendChecked = input.checked;\r\n\r\n        // WebKit doesn't clone checked state correctly in fragments\r\n        support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;\r\n\r\n        // Support: IE<9\r\n        // Opera does not clone events (and typeof div.attachEvent === undefined).\r\n        // IE9-10 clones events bound via attachEvent, but they don't trigger with .click()\r\n        if ( div.attachEvent ) {\r\n            div.attachEvent( \"onclick\", function() {\r\n                support.noCloneEvent = false;\r\n            });\r\n\r\n            div.cloneNode( true ).click();\r\n        }\r\n\r\n        // Support: IE<9 (lack submit/change bubble), Firefox 17+ (lack focusin event)\r\n        // Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)\r\n        for ( i in { submit: true, change: true, focusin: true }) {\r\n            div.setAttribute( eventName = \"on\" + i, \"t\" );\r\n\r\n            support[ i + \"Bubbles\" ] = eventName in window || div.attributes[ eventName ].expando === false;\r\n        }\r\n\r\n        div.style.backgroundClip = \"content-box\";\r\n        div.cloneNode( true ).style.backgroundClip = \"\";\r\n        support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\r\n\r\n        // Support: IE<9\r\n        // Iteration over object's inherited properties before its own.\r\n        for ( i in jQuery( support ) ) {\r\n            break;\r\n        }\r\n        support.ownLast = i !== \"0\";\r\n\r\n        // Run tests that need a body at doc ready\r\n        jQuery(function() {\r\n            var container, marginDiv, tds,\r\n                divReset = \"padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;\",\r\n                body = document.getElementsByTagName(\"body\")[0];\r\n\r\n            if ( !body ) {\r\n                // Return for frameset docs that don't have a body\r\n                return;\r\n            }\r\n\r\n            container = document.createElement(\"div\");\r\n            container.style.cssText = \"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px\";\r\n\r\n            body.appendChild( container ).appendChild( div );\r\n\r\n            // Support: IE8\r\n            // Check if table cells still have offsetWidth/Height when they are set\r\n            // to display:none and there are still other visible table cells in a\r\n            // table row; if so, offsetWidth/Height are not reliable for use when\r\n            // determining if an element has been hidden directly using\r\n            // display:none (it is still safe to use offsets if a parent element is\r\n            // hidden; don safety goggles and see bug #4512 for more information).\r\n            div.innerHTML = \"<table><tr><td></td><td>t</td></tr></table>\";\r\n            tds = div.getElementsByTagName(\"td\");\r\n            tds[ 0 ].style.cssText = \"padding:0;margin:0;border:0;display:none\";\r\n            isSupported = ( tds[ 0 ].offsetHeight === 0 );\r\n\r\n            tds[ 0 ].style.display = \"\";\r\n            tds[ 1 ].style.display = \"none\";\r\n\r\n            // Support: IE8\r\n            // Check if empty table cells still have offsetWidth/Height\r\n            support.reliableHiddenOffsets = isSupported && ( tds[ 0 ].offsetHeight === 0 );\r\n\r\n            // Check box-sizing and margin behavior.\r\n            div.innerHTML = \"\";\r\n            div.style.cssText = \"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;\";\r\n\r\n            // Workaround failing boxSizing test due to offsetWidth returning wrong value\r\n            // with some non-1 values of body zoom, ticket #13543\r\n            jQuery.swap( body, body.style.zoom != null ? { zoom: 1 } : {}, function() {\r\n                support.boxSizing = div.offsetWidth === 4;\r\n            });\r\n\r\n            // Use window.getComputedStyle because jsdom on node.js will break without it.\r\n            if ( window.getComputedStyle ) {\r\n                support.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== \"1%\";\r\n                support.boxSizingReliable = ( window.getComputedStyle( div, null ) || { width: \"4px\" } ).width === \"4px\";\r\n\r\n                // Check if div with explicit width and no margin-right incorrectly\r\n                // gets computed margin-right based on width of container. (#3333)\r\n                // Fails in WebKit before Feb 2011 nightlies\r\n                // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\r\n                marginDiv = div.appendChild( document.createElement(\"div\") );\r\n                marginDiv.style.cssText = div.style.cssText = divReset;\r\n                marginDiv.style.marginRight = marginDiv.style.width = \"0\";\r\n                div.style.width = \"1px\";\r\n\r\n                support.reliableMarginRight =\r\n                    !parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );\r\n            }\r\n\r\n            if ( typeof div.style.zoom !== core_strundefined ) {\r\n                // Support: IE<8\r\n                // Check if natively block-level elements act like inline-block\r\n                // elements when setting their display to 'inline' and giving\r\n                // them layout\r\n                div.innerHTML = \"\";\r\n                div.style.cssText = divReset + \"width:1px;padding:1px;display:inline;zoom:1\";\r\n                support.inlineBlockNeedsLayout = ( div.offsetWidth === 3 );\r\n\r\n                // Support: IE6\r\n                // Check if elements with layout shrink-wrap their children\r\n                div.style.display = \"block\";\r\n                div.innerHTML = \"<div></div>\";\r\n                div.firstChild.style.width = \"5px\";\r\n                support.shrinkWrapBlocks = ( div.offsetWidth !== 3 );\r\n\r\n                if ( support.inlineBlockNeedsLayout ) {\r\n                    // Prevent IE 6 from affecting layout for positioned elements #11048\r\n                    // Prevent IE from shrinking the body in IE 7 mode #12869\r\n                    // Support: IE<8\r\n                    body.style.zoom = 1;\r\n                }\r\n            }\r\n\r\n            body.removeChild( container );\r\n\r\n            // Null elements to avoid leaks in IE\r\n            container = div = tds = marginDiv = null;\r\n        });\r\n\r\n        // Null elements to avoid leaks in IE\r\n        all = select = fragment = opt = a = input = null;\r\n\r\n        return support;\r\n    })({});\r\n\r\n    var rbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\r\n        rmultiDash = /([A-Z])/g;\r\n\r\n    function internalData( elem, name, data, pvt /* Internal Use Only */ ){\r\n        if ( !jQuery.acceptData( elem ) ) {\r\n            return;\r\n        }\r\n\r\n        var ret, thisCache,\r\n            internalKey = jQuery.expando,\r\n\r\n        // We have to handle DOM nodes and JS objects differently because IE6-7\r\n        // can't GC object references properly across the DOM-JS boundary\r\n            isNode = elem.nodeType,\r\n\r\n        // Only DOM nodes need the global jQuery cache; JS object data is\r\n        // attached directly to the object so GC can occur automatically\r\n            cache = isNode ? jQuery.cache : elem,\r\n\r\n        // Only defining an ID for JS objects if its cache already exists allows\r\n        // the code to shortcut on the same path as a DOM node with no cache\r\n            id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;\r\n\r\n        // Avoid doing any more work than we need to when trying to get data on an\r\n        // object that has no data at all\r\n        if ( (!id || !cache[id] || (!pvt && !cache[id].data)) && data === undefined && typeof name === \"string\" ) {\r\n            return;\r\n        }\r\n\r\n        if ( !id ) {\r\n            // Only DOM nodes need a new unique ID for each element since their data\r\n            // ends up in the global cache\r\n            if ( isNode ) {\r\n                id = elem[ internalKey ] = core_deletedIds.pop() || jQuery.guid++;\r\n            } else {\r\n                id = internalKey;\r\n            }\r\n        }\r\n\r\n        if ( !cache[ id ] ) {\r\n            // Avoid exposing jQuery metadata on plain JS objects when the object\r\n            // is serialized using JSON.stringify\r\n            cache[ id ] = isNode ? {} : { toJSON: jQuery.noop };\r\n        }\r\n\r\n        // An object can be passed to jQuery.data instead of a key/value pair; this gets\r\n        // shallow copied over onto the existing cache\r\n        if ( typeof name === \"object\" || typeof name === \"function\" ) {\r\n            if ( pvt ) {\r\n                cache[ id ] = jQuery.extend( cache[ id ], name );\r\n            } else {\r\n                cache[ id ].data = jQuery.extend( cache[ id ].data, name );\r\n            }\r\n        }\r\n\r\n        thisCache = cache[ id ];\r\n\r\n        // jQuery data() is stored in a separate object inside the object's internal data\r\n        // cache in order to avoid key collisions between internal data and user-defined\r\n        // data.\r\n        if ( !pvt ) {\r\n            if ( !thisCache.data ) {\r\n                thisCache.data = {};\r\n            }\r\n\r\n            thisCache = thisCache.data;\r\n        }\r\n\r\n        if ( data !== undefined ) {\r\n            thisCache[ jQuery.camelCase( name ) ] = data;\r\n        }\r\n\r\n        // Check for both converted-to-camel and non-converted data property names\r\n        // If a data property was specified\r\n        if ( typeof name === \"string\" ) {\r\n\r\n            // First Try to find as-is property data\r\n            ret = thisCache[ name ];\r\n\r\n            // Test for null|undefined property data\r\n            if ( ret == null ) {\r\n\r\n                // Try to find the camelCased property\r\n                ret = thisCache[ jQuery.camelCase( name ) ];\r\n            }\r\n        } else {\r\n            ret = thisCache;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    function internalRemoveData( elem, name, pvt ) {\r\n        if ( !jQuery.acceptData( elem ) ) {\r\n            return;\r\n        }\r\n\r\n        var thisCache, i,\r\n            isNode = elem.nodeType,\r\n\r\n        // See jQuery.data for more information\r\n            cache = isNode ? jQuery.cache : elem,\r\n            id = isNode ? elem[ jQuery.expando ] : jQuery.expando;\r\n\r\n        // If there is already no cache entry for this object, there is no\r\n        // purpose in continuing\r\n        if ( !cache[ id ] ) {\r\n            return;\r\n        }\r\n\r\n        if ( name ) {\r\n\r\n            thisCache = pvt ? cache[ id ] : cache[ id ].data;\r\n\r\n            if ( thisCache ) {\r\n\r\n                // Support array or space separated string names for data keys\r\n                if ( !jQuery.isArray( name ) ) {\r\n\r\n                    // try the string as a key before any manipulation\r\n                    if ( name in thisCache ) {\r\n                        name = [ name ];\r\n                    } else {\r\n\r\n                        // split the camel cased version by spaces unless a key with the spaces exists\r\n                        name = jQuery.camelCase( name );\r\n                        if ( name in thisCache ) {\r\n                            name = [ name ];\r\n                        } else {\r\n                            name = name.split(\" \");\r\n                        }\r\n                    }\r\n                } else {\r\n                    // If \"name\" is an array of keys...\r\n                    // When data is initially created, via (\"key\", \"val\") signature,\r\n                    // keys will be converted to camelCase.\r\n                    // Since there is no way to tell _how_ a key was added, remove\r\n                    // both plain key and camelCase key. #12786\r\n                    // This will only penalize the array argument path.\r\n                    name = name.concat( jQuery.map( name, jQuery.camelCase ) );\r\n                }\r\n\r\n                i = name.length;\r\n                while ( i-- ) {\r\n                    delete thisCache[ name[i] ];\r\n                }\r\n\r\n                // If there is no data left in the cache, we want to continue\r\n                // and let the cache object itself get destroyed\r\n                if ( pvt ? !isEmptyDataObject(thisCache) : !jQuery.isEmptyObject(thisCache) ) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        // See jQuery.data for more information\r\n        if ( !pvt ) {\r\n            delete cache[ id ].data;\r\n\r\n            // Don't destroy the parent cache unless the internal data object\r\n            // had been the only thing left in it\r\n            if ( !isEmptyDataObject( cache[ id ] ) ) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Destroy the cache\r\n        if ( isNode ) {\r\n            jQuery.cleanData( [ elem ], true );\r\n\r\n            // Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)\r\n            /* jshint eqeqeq: false */\r\n        } else if ( jQuery.support.deleteExpando || cache != cache.window ) {\r\n            /* jshint eqeqeq: true */\r\n            delete cache[ id ];\r\n\r\n            // When all else fails, null\r\n        } else {\r\n            cache[ id ] = null;\r\n        }\r\n    }\r\n\r\n    jQuery.extend({\r\n        cache: {},\r\n\r\n        // The following elements throw uncatchable exceptions if you\r\n        // attempt to add expando properties to them.\r\n        noData: {\r\n            \"applet\": true,\r\n            \"embed\": true,\r\n            // Ban all objects except for Flash (which handle expandos)\r\n            \"object\": \"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"\r\n        },\r\n\r\n        hasData: function( elem ) {\r\n            elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];\r\n            return !!elem && !isEmptyDataObject( elem );\r\n        },\r\n\r\n        data: function( elem, name, data ) {\r\n            return internalData( elem, name, data );\r\n        },\r\n\r\n        removeData: function( elem, name ) {\r\n            return internalRemoveData( elem, name );\r\n        },\r\n\r\n        // For internal use only.\r\n        _data: function( elem, name, data ) {\r\n            return internalData( elem, name, data, true );\r\n        },\r\n\r\n        _removeData: function( elem, name ) {\r\n            return internalRemoveData( elem, name, true );\r\n        },\r\n\r\n        // A method for determining if a DOM node can handle the data expando\r\n        acceptData: function( elem ) {\r\n            // Do not set data on non-element because it will not be cleared (#8335).\r\n            if ( elem.nodeType && elem.nodeType !== 1 && elem.nodeType !== 9 ) {\r\n                return false;\r\n            }\r\n\r\n            var noData = elem.nodeName && jQuery.noData[ elem.nodeName.toLowerCase() ];\r\n\r\n            // nodes accept data unless otherwise specified; rejection can be conditional\r\n            return !noData || noData !== true && elem.getAttribute(\"classid\") === noData;\r\n        }\r\n    });\r\n\r\n    jQuery.fn.extend({\r\n        data: function( key, value ) {\r\n            var attrs, name,\r\n                data = null,\r\n                i = 0,\r\n                elem = this[0];\r\n\r\n            // Special expections of .data basically thwart jQuery.access,\r\n            // so implement the relevant behavior ourselves\r\n\r\n            // Gets all values\r\n            if ( key === undefined ) {\r\n                if ( this.length ) {\r\n                    data = jQuery.data( elem );\r\n\r\n                    if ( elem.nodeType === 1 && !jQuery._data( elem, \"parsedAttrs\" ) ) {\r\n                        attrs = elem.attributes;\r\n                        for ( ; i < attrs.length; i++ ) {\r\n                            name = attrs[i].name;\r\n\r\n                            if ( name.indexOf(\"data-\") === 0 ) {\r\n                                name = jQuery.camelCase( name.slice(5) );\r\n\r\n                                dataAttr( elem, name, data[ name ] );\r\n                            }\r\n                        }\r\n                        jQuery._data( elem, \"parsedAttrs\", true );\r\n                    }\r\n                }\r\n\r\n                return data;\r\n            }\r\n\r\n            // Sets multiple values\r\n            if ( typeof key === \"object\" ) {\r\n                return this.each(function() {\r\n                    jQuery.data( this, key );\r\n                });\r\n            }\r\n\r\n            return arguments.length > 1 ?\r\n\r\n                // Sets one value\r\n                this.each(function() {\r\n                    jQuery.data( this, key, value );\r\n                }) :\r\n\r\n                // Gets one value\r\n                // Try to fetch any internally stored data first\r\n                elem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : null;\r\n        },\r\n\r\n        removeData: function( key ) {\r\n            return this.each(function() {\r\n                jQuery.removeData( this, key );\r\n            });\r\n        }\r\n    });\r\n\r\n    function dataAttr( elem, key, data ) {\r\n        // If nothing was found internally, try to fetch any\r\n        // data from the HTML5 data-* attribute\r\n        if ( data === undefined && elem.nodeType === 1 ) {\r\n\r\n            var name = \"data-\" + key.replace( rmultiDash, \"-$1\" ).toLowerCase();\r\n\r\n            data = elem.getAttribute( name );\r\n\r\n            if ( typeof data === \"string\" ) {\r\n                try {\r\n                    data = data === \"true\" ? true :\r\n                        data === \"false\" ? false :\r\n                            data === \"null\" ? null :\r\n                                // Only convert to a number if it doesn't change the string\r\n                                +data + \"\" === data ? +data :\r\n                                    rbrace.test( data ) ? jQuery.parseJSON( data ) :\r\n                                        data;\r\n                } catch( e ) {}\r\n\r\n                // Make sure we set the data so it isn't changed later\r\n                jQuery.data( elem, key, data );\r\n\r\n            } else {\r\n                data = undefined;\r\n            }\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n// checks a cache object for emptiness\r\n    function isEmptyDataObject( obj ) {\r\n        var name;\r\n        for ( name in obj ) {\r\n\r\n            // if the public data object is empty, the private is still empty\r\n            if ( name === \"data\" && jQuery.isEmptyObject( obj[name] ) ) {\r\n                continue;\r\n            }\r\n            if ( name !== \"toJSON\" ) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n    jQuery.extend({\r\n        queue: function( elem, type, data ) {\r\n            var queue;\r\n\r\n            if ( elem ) {\r\n                type = ( type || \"fx\" ) + \"queue\";\r\n                queue = jQuery._data( elem, type );\r\n\r\n                // Speed up dequeue by getting out quickly if this is just a lookup\r\n                if ( data ) {\r\n                    if ( !queue || jQuery.isArray(data) ) {\r\n                        queue = jQuery._data( elem, type, jQuery.makeArray(data) );\r\n                    } else {\r\n                        queue.push( data );\r\n                    }\r\n                }\r\n                return queue || [];\r\n            }\r\n        },\r\n\r\n        dequeue: function( elem, type ) {\r\n            type = type || \"fx\";\r\n\r\n            var queue = jQuery.queue( elem, type ),\r\n                startLength = queue.length,\r\n                fn = queue.shift(),\r\n                hooks = jQuery._queueHooks( elem, type ),\r\n                next = function() {\r\n                    jQuery.dequeue( elem, type );\r\n                };\r\n\r\n            // If the fx queue is dequeued, always remove the progress sentinel\r\n            if ( fn === \"inprogress\" ) {\r\n                fn = queue.shift();\r\n                startLength--;\r\n            }\r\n\r\n            if ( fn ) {\r\n\r\n                // Add a progress sentinel to prevent the fx queue from being\r\n                // automatically dequeued\r\n                if ( type === \"fx\" ) {\r\n                    queue.unshift( \"inprogress\" );\r\n                }\r\n\r\n                // clear up the last queue stop function\r\n                delete hooks.stop;\r\n                fn.call( elem, next, hooks );\r\n            }\r\n\r\n            if ( !startLength && hooks ) {\r\n                hooks.empty.fire();\r\n            }\r\n        },\r\n\r\n        // not intended for public consumption - generates a queueHooks object, or returns the current one\r\n        _queueHooks: function( elem, type ) {\r\n            var key = type + \"queueHooks\";\r\n            return jQuery._data( elem, key ) || jQuery._data( elem, key, {\r\n                empty: jQuery.Callbacks(\"once memory\").add(function() {\r\n                    jQuery._removeData( elem, type + \"queue\" );\r\n                    jQuery._removeData( elem, key );\r\n                })\r\n            });\r\n        }\r\n    });\r\n\r\n    jQuery.fn.extend({\r\n        queue: function( type, data ) {\r\n            var setter = 2;\r\n\r\n            if ( typeof type !== \"string\" ) {\r\n                data = type;\r\n                type = \"fx\";\r\n                setter--;\r\n            }\r\n\r\n            if ( arguments.length < setter ) {\r\n                return jQuery.queue( this[0], type );\r\n            }\r\n\r\n            return data === undefined ?\r\n                this :\r\n                this.each(function() {\r\n                    var queue = jQuery.queue( this, type, data );\r\n\r\n                    // ensure a hooks for this queue\r\n                    jQuery._queueHooks( this, type );\r\n\r\n                    if ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\r\n                        jQuery.dequeue( this, type );\r\n                    }\r\n                });\r\n        },\r\n        dequeue: function( type ) {\r\n            return this.each(function() {\r\n                jQuery.dequeue( this, type );\r\n            });\r\n        },\r\n        // Based off of the plugin by Clint Helfers, with permission.\r\n        // http://blindsignals.com/index.php/2009/07/jquery-delay/\r\n        delay: function( time, type ) {\r\n            time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\r\n            type = type || \"fx\";\r\n\r\n            return this.queue( type, function( next, hooks ) {\r\n                var timeout = setTimeout( next, time );\r\n                hooks.stop = function() {\r\n                    clearTimeout( timeout );\r\n                };\r\n            });\r\n        },\r\n        clearQueue: function( type ) {\r\n            return this.queue( type || \"fx\", [] );\r\n        },\r\n        // Get a promise resolved when queues of a certain type\r\n        // are emptied (fx is the type by default)\r\n        promise: function( type, obj ) {\r\n            var tmp,\r\n                count = 1,\r\n                defer = jQuery.Deferred(),\r\n                elements = this,\r\n                i = this.length,\r\n                resolve = function() {\r\n                    if ( !( --count ) ) {\r\n                        defer.resolveWith( elements, [ elements ] );\r\n                    }\r\n                };\r\n\r\n            if ( typeof type !== \"string\" ) {\r\n                obj = type;\r\n                type = undefined;\r\n            }\r\n            type = type || \"fx\";\r\n\r\n            while( i-- ) {\r\n                tmp = jQuery._data( elements[ i ], type + \"queueHooks\" );\r\n                if ( tmp && tmp.empty ) {\r\n                    count++;\r\n                    tmp.empty.add( resolve );\r\n                }\r\n            }\r\n            resolve();\r\n            return defer.promise( obj );\r\n        }\r\n    });\r\n    var nodeHook, boolHook,\r\n        rclass = /[\\t\\r\\n\\f]/g,\r\n        rreturn = /\\r/g,\r\n        rfocusable = /^(?:input|select|textarea|button|object)$/i,\r\n        rclickable = /^(?:a|area)$/i,\r\n        ruseDefault = /^(?:checked|selected)$/i,\r\n        getSetAttribute = jQuery.support.getSetAttribute,\r\n        getSetInput = jQuery.support.input;\r\n\r\n    jQuery.fn.extend({\r\n        attr: function( name, value ) {\r\n            return jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );\r\n        },\r\n\r\n        removeAttr: function( name ) {\r\n            return this.each(function() {\r\n                jQuery.removeAttr( this, name );\r\n            });\r\n        },\r\n\r\n        prop: function( name, value ) {\r\n            return jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );\r\n        },\r\n\r\n        removeProp: function( name ) {\r\n            name = jQuery.propFix[ name ] || name;\r\n            return this.each(function() {\r\n                // try/catch handles cases where IE balks (such as removing a property on window)\r\n                try {\r\n                    this[ name ] = undefined;\r\n                    delete this[ name ];\r\n                } catch( e ) {}\r\n            });\r\n        },\r\n\r\n        addClass: function( value ) {\r\n            var classes, elem, cur, clazz, j,\r\n                i = 0,\r\n                len = this.length,\r\n                proceed = typeof value === \"string\" && value;\r\n\r\n            if ( jQuery.isFunction( value ) ) {\r\n                return this.each(function( j ) {\r\n                    jQuery( this ).addClass( value.call( this, j, this.className ) );\r\n                });\r\n            }\r\n\r\n            if ( proceed ) {\r\n                // The disjunction here is for better compressibility (see removeClass)\r\n                classes = ( value || \"\" ).match( core_rnotwhite ) || [];\r\n\r\n                for ( ; i < len; i++ ) {\r\n                    elem = this[ i ];\r\n                    cur = elem.nodeType === 1 && ( elem.className ?\r\n                        ( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\r\n                        \" \"\r\n                        );\r\n\r\n                    if ( cur ) {\r\n                        j = 0;\r\n                        while ( (clazz = classes[j++]) ) {\r\n                            if ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\r\n                                cur += clazz + \" \";\r\n                            }\r\n                        }\r\n                        elem.className = jQuery.trim( cur );\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        removeClass: function( value ) {\r\n            var classes, elem, cur, clazz, j,\r\n                i = 0,\r\n                len = this.length,\r\n                proceed = arguments.length === 0 || typeof value === \"string\" && value;\r\n\r\n            if ( jQuery.isFunction( value ) ) {\r\n                return this.each(function( j ) {\r\n                    jQuery( this ).removeClass( value.call( this, j, this.className ) );\r\n                });\r\n            }\r\n            if ( proceed ) {\r\n                classes = ( value || \"\" ).match( core_rnotwhite ) || [];\r\n\r\n                for ( ; i < len; i++ ) {\r\n                    elem = this[ i ];\r\n                    // This expression is here for better compressibility (see addClass)\r\n                    cur = elem.nodeType === 1 && ( elem.className ?\r\n                        ( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\r\n                        \"\"\r\n                        );\r\n\r\n                    if ( cur ) {\r\n                        j = 0;\r\n                        while ( (clazz = classes[j++]) ) {\r\n                            // Remove *all* instances\r\n                            while ( cur.indexOf( \" \" + clazz + \" \" ) >= 0 ) {\r\n                                cur = cur.replace( \" \" + clazz + \" \", \" \" );\r\n                            }\r\n                        }\r\n                        elem.className = value ? jQuery.trim( cur ) : \"\";\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        toggleClass: function( value, stateVal ) {\r\n            var type = typeof value;\r\n\r\n            if ( typeof stateVal === \"boolean\" && type === \"string\" ) {\r\n                return stateVal ? this.addClass( value ) : this.removeClass( value );\r\n            }\r\n\r\n            if ( jQuery.isFunction( value ) ) {\r\n                return this.each(function( i ) {\r\n                    jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );\r\n                });\r\n            }\r\n\r\n            return this.each(function() {\r\n                if ( type === \"string\" ) {\r\n                    // toggle individual class names\r\n                    var className,\r\n                        i = 0,\r\n                        self = jQuery( this ),\r\n                        classNames = value.match( core_rnotwhite ) || [];\r\n\r\n                    while ( (className = classNames[ i++ ]) ) {\r\n                        // check each className given, space separated list\r\n                        if ( self.hasClass( className ) ) {\r\n                            self.removeClass( className );\r\n                        } else {\r\n                            self.addClass( className );\r\n                        }\r\n                    }\r\n\r\n                    // Toggle whole class name\r\n                } else if ( type === core_strundefined || type === \"boolean\" ) {\r\n                    if ( this.className ) {\r\n                        // store className if set\r\n                        jQuery._data( this, \"__className__\", this.className );\r\n                    }\r\n\r\n                    // If the element has a class name or if we're passed \"false\",\r\n                    // then remove the whole classname (if there was one, the above saved it).\r\n                    // Otherwise bring back whatever was previously saved (if anything),\r\n                    // falling back to the empty string if nothing was stored.\r\n                    this.className = this.className || value === false ? \"\" : jQuery._data( this, \"__className__\" ) || \"\";\r\n                }\r\n            });\r\n        },\r\n\r\n        hasClass: function( selector ) {\r\n            var className = \" \" + selector + \" \",\r\n                i = 0,\r\n                l = this.length;\r\n            for ( ; i < l; i++ ) {\r\n                if ( this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf( className ) >= 0 ) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        val: function( value ) {\r\n            var ret, hooks, isFunction,\r\n                elem = this[0];\r\n\r\n            if ( !arguments.length ) {\r\n                if ( elem ) {\r\n                    hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];\r\n\r\n                    if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, \"value\" )) !== undefined ) {\r\n                        return ret;\r\n                    }\r\n\r\n                    ret = elem.value;\r\n\r\n                    return typeof ret === \"string\" ?\r\n                        // handle most common string cases\r\n                        ret.replace(rreturn, \"\") :\r\n                        // handle cases where value is null/undef or number\r\n                        ret == null ? \"\" : ret;\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            isFunction = jQuery.isFunction( value );\r\n\r\n            return this.each(function( i ) {\r\n                var val;\r\n\r\n                if ( this.nodeType !== 1 ) {\r\n                    return;\r\n                }\r\n\r\n                if ( isFunction ) {\r\n                    val = value.call( this, i, jQuery( this ).val() );\r\n                } else {\r\n                    val = value;\r\n                }\r\n\r\n                // Treat null/undefined as \"\"; convert numbers to string\r\n                if ( val == null ) {\r\n                    val = \"\";\r\n                } else if ( typeof val === \"number\" ) {\r\n                    val += \"\";\r\n                } else if ( jQuery.isArray( val ) ) {\r\n                    val = jQuery.map(val, function ( value ) {\r\n                        return value == null ? \"\" : value + \"\";\r\n                    });\r\n                }\r\n\r\n                hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\r\n\r\n                // If set returns undefined, fall back to normal setting\r\n                if ( !hooks || !(\"set\" in hooks) || hooks.set( this, val, \"value\" ) === undefined ) {\r\n                    this.value = val;\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    jQuery.extend({\r\n        valHooks: {\r\n            option: {\r\n                get: function( elem ) {\r\n                    // Use proper attribute retrieval(#6932, #12072)\r\n                    var val = jQuery.find.attr( elem, \"value\" );\r\n                    return val != null ?\r\n                        val :\r\n                        elem.text;\r\n                }\r\n            },\r\n            select: {\r\n                get: function( elem ) {\r\n                    var value, option,\r\n                        options = elem.options,\r\n                        index = elem.selectedIndex,\r\n                        one = elem.type === \"select-one\" || index < 0,\r\n                        values = one ? null : [],\r\n                        max = one ? index + 1 : options.length,\r\n                        i = index < 0 ?\r\n                            max :\r\n                            one ? index : 0;\r\n\r\n                    // Loop through all the selected options\r\n                    for ( ; i < max; i++ ) {\r\n                        option = options[ i ];\r\n\r\n                        // oldIE doesn't update selected after form reset (#2551)\r\n                        if ( ( option.selected || i === index ) &&\r\n                            // Don't return options that are disabled or in a disabled optgroup\r\n                            ( jQuery.support.optDisabled ? !option.disabled : option.getAttribute(\"disabled\") === null ) &&\r\n                            ( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n                            // Get the specific value for the option\r\n                            value = jQuery( option ).val();\r\n\r\n                            // We don't need an array for one selects\r\n                            if ( one ) {\r\n                                return value;\r\n                            }\r\n\r\n                            // Multi-Selects return an array\r\n                            values.push( value );\r\n                        }\r\n                    }\r\n\r\n                    return values;\r\n                },\r\n\r\n                set: function( elem, value ) {\r\n                    var optionSet, option,\r\n                        options = elem.options,\r\n                        values = jQuery.makeArray( value ),\r\n                        i = options.length;\r\n\r\n                    while ( i-- ) {\r\n                        option = options[ i ];\r\n                        if ( (option.selected = jQuery.inArray( jQuery(option).val(), values ) >= 0) ) {\r\n                            optionSet = true;\r\n                        }\r\n                    }\r\n\r\n                    // force browsers to behave consistently when non-matching value is set\r\n                    if ( !optionSet ) {\r\n                        elem.selectedIndex = -1;\r\n                    }\r\n                    return values;\r\n                }\r\n            }\r\n        },\r\n\r\n        attr: function( elem, name, value ) {\r\n            var hooks, ret,\r\n                nType = elem.nodeType;\r\n\r\n            // don't get/set attributes on text, comment and attribute nodes\r\n            if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\r\n                return;\r\n            }\r\n\r\n            // Fallback to prop when attributes are not supported\r\n            if ( typeof elem.getAttribute === core_strundefined ) {\r\n                return jQuery.prop( elem, name, value );\r\n            }\r\n\r\n            // All attributes are lowercase\r\n            // Grab necessary hook if one is defined\r\n            if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\r\n                name = name.toLowerCase();\r\n                hooks = jQuery.attrHooks[ name ] ||\r\n                    ( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );\r\n            }\r\n\r\n            if ( value !== undefined ) {\r\n\r\n                if ( value === null ) {\r\n                    jQuery.removeAttr( elem, name );\r\n\r\n                } else if ( hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {\r\n                    return ret;\r\n\r\n                } else {\r\n                    elem.setAttribute( name, value + \"\" );\r\n                    return value;\r\n                }\r\n\r\n            } else if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ) {\r\n                return ret;\r\n\r\n            } else {\r\n                ret = jQuery.find.attr( elem, name );\r\n\r\n                // Non-existent attributes return null, we normalize to undefined\r\n                return ret == null ?\r\n                    undefined :\r\n                    ret;\r\n            }\r\n        },\r\n\r\n        removeAttr: function( elem, value ) {\r\n            var name, propName,\r\n                i = 0,\r\n                attrNames = value && value.match( core_rnotwhite );\r\n\r\n            if ( attrNames && elem.nodeType === 1 ) {\r\n                while ( (name = attrNames[i++]) ) {\r\n                    propName = jQuery.propFix[ name ] || name;\r\n\r\n                    // Boolean attributes get special treatment (#10870)\r\n                    if ( jQuery.expr.match.bool.test( name ) ) {\r\n                        // Set corresponding property to false\r\n                        if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {\r\n                            elem[ propName ] = false;\r\n                            // Support: IE<9\r\n                            // Also clear defaultChecked/defaultSelected (if appropriate)\r\n                        } else {\r\n                            elem[ jQuery.camelCase( \"default-\" + name ) ] =\r\n                                elem[ propName ] = false;\r\n                        }\r\n\r\n                        // See #9699 for explanation of this approach (setting first, then removal)\r\n                    } else {\r\n                        jQuery.attr( elem, name, \"\" );\r\n                    }\r\n\r\n                    elem.removeAttribute( getSetAttribute ? name : propName );\r\n                }\r\n            }\r\n        },\r\n\r\n        attrHooks: {\r\n            type: {\r\n                set: function( elem, value ) {\r\n                    if ( !jQuery.support.radioValue && value === \"radio\" && jQuery.nodeName(elem, \"input\") ) {\r\n                        // Setting the type on a radio button after the value resets the value in IE6-9\r\n                        // Reset value to default in case type is set after value during creation\r\n                        var val = elem.value;\r\n                        elem.setAttribute( \"type\", value );\r\n                        if ( val ) {\r\n                            elem.value = val;\r\n                        }\r\n                        return value;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        propFix: {\r\n            \"for\": \"htmlFor\",\r\n            \"class\": \"className\"\r\n        },\r\n\r\n        prop: function( elem, name, value ) {\r\n            var ret, hooks, notxml,\r\n                nType = elem.nodeType;\r\n\r\n            // don't get/set properties on text, comment and attribute nodes\r\n            if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\r\n                return;\r\n            }\r\n\r\n            notxml = nType !== 1 || !jQuery.isXMLDoc( elem );\r\n\r\n            if ( notxml ) {\r\n                // Fix name and attach hooks\r\n                name = jQuery.propFix[ name ] || name;\r\n                hooks = jQuery.propHooks[ name ];\r\n            }\r\n\r\n            if ( value !== undefined ) {\r\n                return hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?\r\n                    ret :\r\n                    ( elem[ name ] = value );\r\n\r\n            } else {\r\n                return hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ?\r\n                    ret :\r\n                    elem[ name ];\r\n            }\r\n        },\r\n\r\n        propHooks: {\r\n            tabIndex: {\r\n                get: function( elem ) {\r\n                    // elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\r\n                    // http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\r\n                    // Use proper attribute retrieval(#12072)\r\n                    var tabindex = jQuery.find.attr( elem, \"tabindex\" );\r\n\r\n                    return tabindex ?\r\n                        parseInt( tabindex, 10 ) :\r\n                        rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?\r\n                            0 :\r\n                            -1;\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n// Hooks for boolean attributes\r\n    boolHook = {\r\n        set: function( elem, value, name ) {\r\n            if ( value === false ) {\r\n                // Remove boolean attributes when set to false\r\n                jQuery.removeAttr( elem, name );\r\n            } else if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {\r\n                // IE<8 needs the *property* name\r\n                elem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || name, name );\r\n\r\n                // Use defaultChecked and defaultSelected for oldIE\r\n            } else {\r\n                elem[ jQuery.camelCase( \"default-\" + name ) ] = elem[ name ] = true;\r\n            }\r\n\r\n            return name;\r\n        }\r\n    };\r\n    jQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\r\n        var getter = jQuery.expr.attrHandle[ name ] || jQuery.find.attr;\r\n\r\n        jQuery.expr.attrHandle[ name ] = getSetInput && getSetAttribute || !ruseDefault.test( name ) ?\r\n            function( elem, name, isXML ) {\r\n                var fn = jQuery.expr.attrHandle[ name ],\r\n                    ret = isXML ?\r\n                        undefined :\r\n                        /* jshint eqeqeq: false */\r\n                        (jQuery.expr.attrHandle[ name ] = undefined) !=\r\n                            getter( elem, name, isXML ) ?\r\n\r\n                            name.toLowerCase() :\r\n                            null;\r\n                jQuery.expr.attrHandle[ name ] = fn;\r\n                return ret;\r\n            } :\r\n            function( elem, name, isXML ) {\r\n                return isXML ?\r\n                    undefined :\r\n                    elem[ jQuery.camelCase( \"default-\" + name ) ] ?\r\n                        name.toLowerCase() :\r\n                        null;\r\n            };\r\n    });\r\n\r\n// fix oldIE attroperties\r\n    if ( !getSetInput || !getSetAttribute ) {\r\n        jQuery.attrHooks.value = {\r\n            set: function( elem, value, name ) {\r\n                if ( jQuery.nodeName( elem, \"input\" ) ) {\r\n                    // Does not return so that setAttribute is also used\r\n                    elem.defaultValue = value;\r\n                } else {\r\n                    // Use nodeHook if defined (#1954); otherwise setAttribute is fine\r\n                    return nodeHook && nodeHook.set( elem, value, name );\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n// IE6/7 do not support getting/setting some attributes with get/setAttribute\r\n    if ( !getSetAttribute ) {\r\n\r\n        // Use this for any attribute in IE6/7\r\n        // This fixes almost every IE6/7 issue\r\n        nodeHook = {\r\n            set: function( elem, value, name ) {\r\n                // Set the existing or create a new attribute node\r\n                var ret = elem.getAttributeNode( name );\r\n                if ( !ret ) {\r\n                    elem.setAttributeNode(\r\n                        (ret = elem.ownerDocument.createAttribute( name ))\r\n                    );\r\n                }\r\n\r\n                ret.value = value += \"\";\r\n\r\n                // Break association with cloned elements by also using setAttribute (#9646)\r\n                return name === \"value\" || value === elem.getAttribute( name ) ?\r\n                    value :\r\n                    undefined;\r\n            }\r\n        };\r\n        jQuery.expr.attrHandle.id = jQuery.expr.attrHandle.name = jQuery.expr.attrHandle.coords =\r\n            // Some attributes are constructed with empty-string values when not defined\r\n            function( elem, name, isXML ) {\r\n                var ret;\r\n                return isXML ?\r\n                    undefined :\r\n                    (ret = elem.getAttributeNode( name )) && ret.value !== \"\" ?\r\n                        ret.value :\r\n                        null;\r\n            };\r\n        jQuery.valHooks.button = {\r\n            get: function( elem, name ) {\r\n                var ret = elem.getAttributeNode( name );\r\n                return ret && ret.specified ?\r\n                    ret.value :\r\n                    undefined;\r\n            },\r\n            set: nodeHook.set\r\n        };\r\n\r\n        // Set contenteditable to false on removals(#10429)\r\n        // Setting to empty string throws an error as an invalid value\r\n        jQuery.attrHooks.contenteditable = {\r\n            set: function( elem, value, name ) {\r\n                nodeHook.set( elem, value === \"\" ? false : value, name );\r\n            }\r\n        };\r\n\r\n        // Set width and height to auto instead of 0 on empty string( Bug #8150 )\r\n        // This is for removals\r\n        jQuery.each([ \"width\", \"height\" ], function( i, name ) {\r\n            jQuery.attrHooks[ name ] = {\r\n                set: function( elem, value ) {\r\n                    if ( value === \"\" ) {\r\n                        elem.setAttribute( name, \"auto\" );\r\n                        return value;\r\n                    }\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n\r\n// Some attributes require a special call on IE\r\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\r\n    if ( !jQuery.support.hrefNormalized ) {\r\n        // href/src property should get the full normalized URL (#10299/#12915)\r\n        jQuery.each([ \"href\", \"src\" ], function( i, name ) {\r\n            jQuery.propHooks[ name ] = {\r\n                get: function( elem ) {\r\n                    return elem.getAttribute( name, 4 );\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    if ( !jQuery.support.style ) {\r\n        jQuery.attrHooks.style = {\r\n            get: function( elem ) {\r\n                // Return undefined in the case of empty string\r\n                // Note: IE uppercases css property names, but if we were to .toLowerCase()\r\n                // .cssText, that would destroy case senstitivity in URL's, like in \"background\"\r\n                return elem.style.cssText || undefined;\r\n            },\r\n            set: function( elem, value ) {\r\n                return ( elem.style.cssText = value + \"\" );\r\n            }\r\n        };\r\n    }\r\n\r\n// Safari mis-reports the default selected property of an option\r\n// Accessing the parent's selectedIndex property fixes it\r\n    if ( !jQuery.support.optSelected ) {\r\n        jQuery.propHooks.selected = {\r\n            get: function( elem ) {\r\n                var parent = elem.parentNode;\r\n\r\n                if ( parent ) {\r\n                    parent.selectedIndex;\r\n\r\n                    // Make sure that it also works with optgroups, see #5701\r\n                    if ( parent.parentNode ) {\r\n                        parent.parentNode.selectedIndex;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n        };\r\n    }\r\n\r\n    jQuery.each([\r\n        \"tabIndex\",\r\n        \"readOnly\",\r\n        \"maxLength\",\r\n        \"cellSpacing\",\r\n        \"cellPadding\",\r\n        \"rowSpan\",\r\n        \"colSpan\",\r\n        \"useMap\",\r\n        \"frameBorder\",\r\n        \"contentEditable\"\r\n    ], function() {\r\n        jQuery.propFix[ this.toLowerCase() ] = this;\r\n    });\r\n\r\n// IE6/7 call enctype encoding\r\n    if ( !jQuery.support.enctype ) {\r\n        jQuery.propFix.enctype = \"encoding\";\r\n    }\r\n\r\n// Radios and checkboxes getter/setter\r\n    jQuery.each([ \"radio\", \"checkbox\" ], function() {\r\n        jQuery.valHooks[ this ] = {\r\n            set: function( elem, value ) {\r\n                if ( jQuery.isArray( value ) ) {\r\n                    return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );\r\n                }\r\n            }\r\n        };\r\n        if ( !jQuery.support.checkOn ) {\r\n            jQuery.valHooks[ this ].get = function( elem ) {\r\n                // Support: Webkit\r\n                // \"\" is returned instead of \"on\" if a value isn't specified\r\n                return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\r\n            };\r\n        }\r\n    });\r\n    var rformElems = /^(?:input|select|textarea)$/i,\r\n        rkeyEvent = /^key/,\r\n        rmouseEvent = /^(?:mouse|contextmenu)|click/,\r\n        rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\r\n        rtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\r\n\r\n    function returnTrue() {\r\n        return true;\r\n    }\r\n\r\n    function returnFalse() {\r\n        return false;\r\n    }\r\n\r\n    function safeActiveElement() {\r\n        try {\r\n            return document.activeElement;\r\n        } catch ( err ) { }\r\n    }\r\n\r\n    /*\r\n     * Helper functions for managing events -- not part of the public interface.\r\n     * Props to Dean Edwards' addEvent library for many of the ideas.\r\n     */\r\n    jQuery.event = {\r\n\r\n        global: {},\r\n\r\n        add: function( elem, types, handler, data, selector ) {\r\n            var tmp, events, t, handleObjIn,\r\n                special, eventHandle, handleObj,\r\n                handlers, type, namespaces, origType,\r\n                elemData = jQuery._data( elem );\r\n\r\n            // Don't attach events to noData or text/comment nodes (but allow plain objects)\r\n            if ( !elemData ) {\r\n                return;\r\n            }\r\n\r\n            // Caller can pass in an object of custom data in lieu of the handler\r\n            if ( handler.handler ) {\r\n                handleObjIn = handler;\r\n                handler = handleObjIn.handler;\r\n                selector = handleObjIn.selector;\r\n            }\r\n\r\n            // Make sure that the handler has a unique ID, used to find/remove it later\r\n            if ( !handler.guid ) {\r\n                handler.guid = jQuery.guid++;\r\n            }\r\n\r\n            // Init the element's event structure and main handler, if this is the first\r\n            if ( !(events = elemData.events) ) {\r\n                events = elemData.events = {};\r\n            }\r\n            if ( !(eventHandle = elemData.handle) ) {\r\n                eventHandle = elemData.handle = function( e ) {\r\n                    // Discard the second event of a jQuery.event.trigger() and\r\n                    // when an event is called after a page has unloaded\r\n                    return typeof jQuery !== core_strundefined && (!e || jQuery.event.triggered !== e.type) ?\r\n                        jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :\r\n                        undefined;\r\n                };\r\n                // Add elem as a property of the handle fn to prevent a memory leak with IE non-native events\r\n                eventHandle.elem = elem;\r\n            }\r\n\r\n            // Handle multiple events separated by a space\r\n            types = ( types || \"\" ).match( core_rnotwhite ) || [\"\"];\r\n            t = types.length;\r\n            while ( t-- ) {\r\n                tmp = rtypenamespace.exec( types[t] ) || [];\r\n                type = origType = tmp[1];\r\n                namespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\r\n\r\n                // There *must* be a type, no attaching namespace-only handlers\r\n                if ( !type ) {\r\n                    continue;\r\n                }\r\n\r\n                // If event changes its type, use the special event handlers for the changed type\r\n                special = jQuery.event.special[ type ] || {};\r\n\r\n                // If selector defined, determine special event api type, otherwise given type\r\n                type = ( selector ? special.delegateType : special.bindType ) || type;\r\n\r\n                // Update special based on newly reset type\r\n                special = jQuery.event.special[ type ] || {};\r\n\r\n                // handleObj is passed to all event handlers\r\n                handleObj = jQuery.extend({\r\n                    type: type,\r\n                    origType: origType,\r\n                    data: data,\r\n                    handler: handler,\r\n                    guid: handler.guid,\r\n                    selector: selector,\r\n                    needsContext: selector && jQuery.expr.match.needsContext.test( selector ),\r\n                    namespace: namespaces.join(\".\")\r\n                }, handleObjIn );\r\n\r\n                // Init the event handler queue if we're the first\r\n                if ( !(handlers = events[ type ]) ) {\r\n                    handlers = events[ type ] = [];\r\n                    handlers.delegateCount = 0;\r\n\r\n                    // Only use addEventListener/attachEvent if the special events handler returns false\r\n                    if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\r\n                        // Bind the global event handler to the element\r\n                        if ( elem.addEventListener ) {\r\n                            elem.addEventListener( type, eventHandle, false );\r\n\r\n                        } else if ( elem.attachEvent ) {\r\n                            elem.attachEvent( \"on\" + type, eventHandle );\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if ( special.add ) {\r\n                    special.add.call( elem, handleObj );\r\n\r\n                    if ( !handleObj.handler.guid ) {\r\n                        handleObj.handler.guid = handler.guid;\r\n                    }\r\n                }\r\n\r\n                // Add to the element's handler list, delegates in front\r\n                if ( selector ) {\r\n                    handlers.splice( handlers.delegateCount++, 0, handleObj );\r\n                } else {\r\n                    handlers.push( handleObj );\r\n                }\r\n\r\n                // Keep track of which events have ever been used, for event optimization\r\n                jQuery.event.global[ type ] = true;\r\n            }\r\n\r\n            // Nullify elem to prevent memory leaks in IE\r\n            elem = null;\r\n        },\r\n\r\n        // Detach an event or set of events from an element\r\n        remove: function( elem, types, handler, selector, mappedTypes ) {\r\n            var j, handleObj, tmp,\r\n                origCount, t, events,\r\n                special, handlers, type,\r\n                namespaces, origType,\r\n                elemData = jQuery.hasData( elem ) && jQuery._data( elem );\r\n\r\n            if ( !elemData || !(events = elemData.events) ) {\r\n                return;\r\n            }\r\n\r\n            // Once for each type.namespace in types; type may be omitted\r\n            types = ( types || \"\" ).match( core_rnotwhite ) || [\"\"];\r\n            t = types.length;\r\n            while ( t-- ) {\r\n                tmp = rtypenamespace.exec( types[t] ) || [];\r\n                type = origType = tmp[1];\r\n                namespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\r\n\r\n                // Unbind all events (on this namespace, if provided) for the element\r\n                if ( !type ) {\r\n                    for ( type in events ) {\r\n                        jQuery.event.remove( elem, type + types[ t ], handler, selector, true );\r\n                    }\r\n                    continue;\r\n                }\r\n\r\n                special = jQuery.event.special[ type ] || {};\r\n                type = ( selector ? special.delegateType : special.bindType ) || type;\r\n                handlers = events[ type ] || [];\r\n                tmp = tmp[2] && new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" );\r\n\r\n                // Remove matching events\r\n                origCount = j = handlers.length;\r\n                while ( j-- ) {\r\n                    handleObj = handlers[ j ];\r\n\r\n                    if ( ( mappedTypes || origType === handleObj.origType ) &&\r\n                        ( !handler || handler.guid === handleObj.guid ) &&\r\n                        ( !tmp || tmp.test( handleObj.namespace ) ) &&\r\n                        ( !selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector ) ) {\r\n                        handlers.splice( j, 1 );\r\n\r\n                        if ( handleObj.selector ) {\r\n                            handlers.delegateCount--;\r\n                        }\r\n                        if ( special.remove ) {\r\n                            special.remove.call( elem, handleObj );\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Remove generic event handler if we removed something and no more handlers exist\r\n                // (avoids potential for endless recursion during removal of special event handlers)\r\n                if ( origCount && !handlers.length ) {\r\n                    if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {\r\n                        jQuery.removeEvent( elem, type, elemData.handle );\r\n                    }\r\n\r\n                    delete events[ type ];\r\n                }\r\n            }\r\n\r\n            // Remove the expando if it's no longer used\r\n            if ( jQuery.isEmptyObject( events ) ) {\r\n                delete elemData.handle;\r\n\r\n                // removeData also checks for emptiness and clears the expando if empty\r\n                // so use it instead of delete\r\n                jQuery._removeData( elem, \"events\" );\r\n            }\r\n        },\r\n\r\n        trigger: function( event, data, elem, onlyHandlers ) {\r\n            var handle, ontype, cur,\r\n                bubbleType, special, tmp, i,\r\n                eventPath = [ elem || document ],\r\n                type = core_hasOwn.call( event, \"type\" ) ? event.type : event,\r\n                namespaces = core_hasOwn.call( event, \"namespace\" ) ? event.namespace.split(\".\") : [];\r\n\r\n            cur = tmp = elem = elem || document;\r\n\r\n            // Don't do events on text and comment nodes\r\n            if ( elem.nodeType === 3 || elem.nodeType === 8 ) {\r\n                return;\r\n            }\r\n\r\n            // focus/blur morphs to focusin/out; ensure we're not firing them right now\r\n            if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\r\n                return;\r\n            }\r\n\r\n            if ( type.indexOf(\".\") >= 0 ) {\r\n                // Namespaced trigger; create a regexp to match event type in handle()\r\n                namespaces = type.split(\".\");\r\n                type = namespaces.shift();\r\n                namespaces.sort();\r\n            }\r\n            ontype = type.indexOf(\":\") < 0 && \"on\" + type;\r\n\r\n            // Caller can pass in a jQuery.Event object, Object, or just an event type string\r\n            event = event[ jQuery.expando ] ?\r\n                event :\r\n                new jQuery.Event( type, typeof event === \"object\" && event );\r\n\r\n            // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\r\n            event.isTrigger = onlyHandlers ? 2 : 3;\r\n            event.namespace = namespaces.join(\".\");\r\n            event.namespace_re = event.namespace ?\r\n                new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" ) :\r\n                null;\r\n\r\n            // Clean up the event in case it is being reused\r\n            event.result = undefined;\r\n            if ( !event.target ) {\r\n                event.target = elem;\r\n            }\r\n\r\n            // Clone any incoming data and prepend the event, creating the handler arg list\r\n            data = data == null ?\r\n                [ event ] :\r\n                jQuery.makeArray( data, [ event ] );\r\n\r\n            // Allow special events to draw outside the lines\r\n            special = jQuery.event.special[ type ] || {};\r\n            if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\r\n                return;\r\n            }\r\n\r\n            // Determine event propagation path in advance, per W3C events spec (#9951)\r\n            // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\r\n            if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\r\n\r\n                bubbleType = special.delegateType || type;\r\n                if ( !rfocusMorph.test( bubbleType + type ) ) {\r\n                    cur = cur.parentNode;\r\n                }\r\n                for ( ; cur; cur = cur.parentNode ) {\r\n                    eventPath.push( cur );\r\n                    tmp = cur;\r\n                }\r\n\r\n                // Only add window if we got to document (e.g., not plain obj or detached DOM)\r\n                if ( tmp === (elem.ownerDocument || document) ) {\r\n                    eventPath.push( tmp.defaultView || tmp.parentWindow || window );\r\n                }\r\n            }\r\n\r\n            // Fire handlers on the event path\r\n            i = 0;\r\n            while ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {\r\n\r\n                event.type = i > 1 ?\r\n                    bubbleType :\r\n                    special.bindType || type;\r\n\r\n                // jQuery handler\r\n                handle = ( jQuery._data( cur, \"events\" ) || {} )[ event.type ] && jQuery._data( cur, \"handle\" );\r\n                if ( handle ) {\r\n                    handle.apply( cur, data );\r\n                }\r\n\r\n                // Native handler\r\n                handle = ontype && cur[ ontype ];\r\n                if ( handle && jQuery.acceptData( cur ) && handle.apply && handle.apply( cur, data ) === false ) {\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n            event.type = type;\r\n\r\n            // If nobody prevented the default action, do it now\r\n            if ( !onlyHandlers && !event.isDefaultPrevented() ) {\r\n\r\n                if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&\r\n                    jQuery.acceptData( elem ) ) {\r\n\r\n                    // Call a native DOM method on the target with the same name name as the event.\r\n                    // Can't use an .isFunction() check here because IE6/7 fails that test.\r\n                    // Don't do default actions on window, that's where global variables be (#6170)\r\n                    if ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {\r\n\r\n                        // Don't re-trigger an onFOO event when we call its FOO() method\r\n                        tmp = elem[ ontype ];\r\n\r\n                        if ( tmp ) {\r\n                            elem[ ontype ] = null;\r\n                        }\r\n\r\n                        // Prevent re-triggering of the same event, since we already bubbled it above\r\n                        jQuery.event.triggered = type;\r\n                        try {\r\n                            elem[ type ]();\r\n                        } catch ( e ) {\r\n                            // IE<9 dies on focus/blur to hidden element (#1486,#12518)\r\n                            // only reproducible on winXP IE8 native, not IE9 in IE8 mode\r\n                        }\r\n                        jQuery.event.triggered = undefined;\r\n\r\n                        if ( tmp ) {\r\n                            elem[ ontype ] = tmp;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return event.result;\r\n        },\r\n\r\n        dispatch: function( event ) {\r\n\r\n            // Make a writable jQuery.Event from the native event object\r\n            event = jQuery.event.fix( event );\r\n\r\n            var i, ret, handleObj, matched, j,\r\n                handlerQueue = [],\r\n                args = core_slice.call( arguments ),\r\n                handlers = ( jQuery._data( this, \"events\" ) || {} )[ event.type ] || [],\r\n                special = jQuery.event.special[ event.type ] || {};\r\n\r\n            // Use the fix-ed jQuery.Event rather than the (read-only) native event\r\n            args[0] = event;\r\n            event.delegateTarget = this;\r\n\r\n            // Call the preDispatch hook for the mapped type, and let it bail if desired\r\n            if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\r\n                return;\r\n            }\r\n\r\n            // Determine handlers\r\n            handlerQueue = jQuery.event.handlers.call( this, event, handlers );\r\n\r\n            // Run delegates first; they may want to stop propagation beneath us\r\n            i = 0;\r\n            while ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {\r\n                event.currentTarget = matched.elem;\r\n\r\n                j = 0;\r\n                while ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {\r\n\r\n                    // Triggered event must either 1) have no namespace, or\r\n                    // 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).\r\n                    if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {\r\n\r\n                        event.handleObj = handleObj;\r\n                        event.data = handleObj.data;\r\n\r\n                        ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\r\n                            .apply( matched.elem, args );\r\n\r\n                        if ( ret !== undefined ) {\r\n                            if ( (event.result = ret) === false ) {\r\n                                event.preventDefault();\r\n                                event.stopPropagation();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Call the postDispatch hook for the mapped type\r\n            if ( special.postDispatch ) {\r\n                special.postDispatch.call( this, event );\r\n            }\r\n\r\n            return event.result;\r\n        },\r\n\r\n        handlers: function( event, handlers ) {\r\n            var sel, handleObj, matches, i,\r\n                handlerQueue = [],\r\n                delegateCount = handlers.delegateCount,\r\n                cur = event.target;\r\n\r\n            // Find delegate handlers\r\n            // Black-hole SVG <use> instance trees (#13180)\r\n            // Avoid non-left-click bubbling in Firefox (#3861)\r\n            if ( delegateCount && cur.nodeType && (!event.button || event.type !== \"click\") ) {\r\n\r\n                /* jshint eqeqeq: false */\r\n                for ( ; cur != this; cur = cur.parentNode || this ) {\r\n                    /* jshint eqeqeq: true */\r\n\r\n                    // Don't check non-elements (#13208)\r\n                    // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\r\n                    if ( cur.nodeType === 1 && (cur.disabled !== true || event.type !== \"click\") ) {\r\n                        matches = [];\r\n                        for ( i = 0; i < delegateCount; i++ ) {\r\n                            handleObj = handlers[ i ];\r\n\r\n                            // Don't conflict with Object.prototype properties (#13203)\r\n                            sel = handleObj.selector + \" \";\r\n\r\n                            if ( matches[ sel ] === undefined ) {\r\n                                matches[ sel ] = handleObj.needsContext ?\r\n                                    jQuery( sel, this ).index( cur ) >= 0 :\r\n                                    jQuery.find( sel, this, null, [ cur ] ).length;\r\n                            }\r\n                            if ( matches[ sel ] ) {\r\n                                matches.push( handleObj );\r\n                            }\r\n                        }\r\n                        if ( matches.length ) {\r\n                            handlerQueue.push({ elem: cur, handlers: matches });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Add the remaining (directly-bound) handlers\r\n            if ( delegateCount < handlers.length ) {\r\n                handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });\r\n            }\r\n\r\n            return handlerQueue;\r\n        },\r\n\r\n        fix: function( event ) {\r\n            if ( event[ jQuery.expando ] ) {\r\n                return event;\r\n            }\r\n\r\n            // Create a writable copy of the event object and normalize some properties\r\n            var i, prop, copy,\r\n                type = event.type,\r\n                originalEvent = event,\r\n                fixHook = this.fixHooks[ type ];\r\n\r\n            if ( !fixHook ) {\r\n                this.fixHooks[ type ] = fixHook =\r\n                    rmouseEvent.test( type ) ? this.mouseHooks :\r\n                        rkeyEvent.test( type ) ? this.keyHooks :\r\n                        {};\r\n            }\r\n            copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\r\n\r\n            event = new jQuery.Event( originalEvent );\r\n\r\n            i = copy.length;\r\n            while ( i-- ) {\r\n                prop = copy[ i ];\r\n                event[ prop ] = originalEvent[ prop ];\r\n            }\r\n\r\n            // Support: IE<9\r\n            // Fix target property (#1925)\r\n            if ( !event.target ) {\r\n                event.target = originalEvent.srcElement || document;\r\n            }\r\n\r\n            // Support: Chrome 23+, Safari?\r\n            // Target should not be a text node (#504, #13143)\r\n            if ( event.target.nodeType === 3 ) {\r\n                event.target = event.target.parentNode;\r\n            }\r\n\r\n            // Support: IE<9\r\n            // For mouse/key events, metaKey==false if it's undefined (#3368, #11328)\r\n            event.metaKey = !!event.metaKey;\r\n\r\n            return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\r\n        },\r\n\r\n        // Includes some event props shared by KeyEvent and MouseEvent\r\n        props: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\r\n\r\n        fixHooks: {},\r\n\r\n        keyHooks: {\r\n            props: \"char charCode key keyCode\".split(\" \"),\r\n            filter: function( event, original ) {\r\n\r\n                // Add which for key events\r\n                if ( event.which == null ) {\r\n                    event.which = original.charCode != null ? original.charCode : original.keyCode;\r\n                }\r\n\r\n                return event;\r\n            }\r\n        },\r\n\r\n        mouseHooks: {\r\n            props: \"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\r\n            filter: function( event, original ) {\r\n                var body, eventDoc, doc,\r\n                    button = original.button,\r\n                    fromElement = original.fromElement;\r\n\r\n                // Calculate pageX/Y if missing and clientX/Y available\r\n                if ( event.pageX == null && original.clientX != null ) {\r\n                    eventDoc = event.target.ownerDocument || document;\r\n                    doc = eventDoc.documentElement;\r\n                    body = eventDoc.body;\r\n\r\n                    event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\r\n                    event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\r\n                }\r\n\r\n                // Add relatedTarget, if necessary\r\n                if ( !event.relatedTarget && fromElement ) {\r\n                    event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;\r\n                }\r\n\r\n                // Add which for click: 1 === left; 2 === middle; 3 === right\r\n                // Note: button is not normalized, so don't use it\r\n                if ( !event.which && button !== undefined ) {\r\n                    event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\r\n                }\r\n\r\n                return event;\r\n            }\r\n        },\r\n\r\n        special: {\r\n            load: {\r\n                // Prevent triggered image.load events from bubbling to window.load\r\n                noBubble: true\r\n            },\r\n            focus: {\r\n                // Fire native event if possible so blur/focus sequence is correct\r\n                trigger: function() {\r\n                    if ( this !== safeActiveElement() && this.focus ) {\r\n                        try {\r\n                            this.focus();\r\n                            return false;\r\n                        } catch ( e ) {\r\n                            // Support: IE<9\r\n                            // If we error on focus to hidden element (#1486, #12518),\r\n                            // let .trigger() run the handlers\r\n                        }\r\n                    }\r\n                },\r\n                delegateType: \"focusin\"\r\n            },\r\n            blur: {\r\n                trigger: function() {\r\n                    if ( this === safeActiveElement() && this.blur ) {\r\n                        this.blur();\r\n                        return false;\r\n                    }\r\n                },\r\n                delegateType: \"focusout\"\r\n            },\r\n            click: {\r\n                // For checkbox, fire native event so checked state will be right\r\n                trigger: function() {\r\n                    if ( jQuery.nodeName( this, \"input\" ) && this.type === \"checkbox\" && this.click ) {\r\n                        this.click();\r\n                        return false;\r\n                    }\r\n                },\r\n\r\n                // For cross-browser consistency, don't fire native .click() on links\r\n                _default: function( event ) {\r\n                    return jQuery.nodeName( event.target, \"a\" );\r\n                }\r\n            },\r\n\r\n            beforeunload: {\r\n                postDispatch: function( event ) {\r\n\r\n                    // Even when returnValue equals to undefined Firefox will still show alert\r\n                    if ( event.result !== undefined ) {\r\n                        event.originalEvent.returnValue = event.result;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        simulate: function( type, elem, event, bubble ) {\r\n            // Piggyback on a donor event to simulate a different one.\r\n            // Fake originalEvent to avoid donor's stopPropagation, but if the\r\n            // simulated event prevents default then we do the same on the donor.\r\n            var e = jQuery.extend(\r\n                new jQuery.Event(),\r\n                event,\r\n                {\r\n                    type: type,\r\n                    isSimulated: true,\r\n                    originalEvent: {}\r\n                }\r\n            );\r\n            if ( bubble ) {\r\n                jQuery.event.trigger( e, null, elem );\r\n            } else {\r\n                jQuery.event.dispatch.call( elem, e );\r\n            }\r\n            if ( e.isDefaultPrevented() ) {\r\n                event.preventDefault();\r\n            }\r\n        }\r\n    };\r\n\r\n    jQuery.removeEvent = document.removeEventListener ?\r\n        function( elem, type, handle ) {\r\n            if ( elem.removeEventListener ) {\r\n                elem.removeEventListener( type, handle, false );\r\n            }\r\n        } :\r\n        function( elem, type, handle ) {\r\n            var name = \"on\" + type;\r\n\r\n            if ( elem.detachEvent ) {\r\n\r\n                // #8545, #7054, preventing memory leaks for custom events in IE6-8\r\n                // detachEvent needed property on element, by name of that event, to properly expose it to GC\r\n                if ( typeof elem[ name ] === core_strundefined ) {\r\n                    elem[ name ] = null;\r\n                }\r\n\r\n                elem.detachEvent( name, handle );\r\n            }\r\n        };\r\n\r\n    jQuery.Event = function( src, props ) {\r\n        // Allow instantiation without the 'new' keyword\r\n        if ( !(this instanceof jQuery.Event) ) {\r\n            return new jQuery.Event( src, props );\r\n        }\r\n\r\n        // Event object\r\n        if ( src && src.type ) {\r\n            this.originalEvent = src;\r\n            this.type = src.type;\r\n\r\n            // Events bubbling up the document may have been marked as prevented\r\n            // by a handler lower down the tree; reflect the correct value.\r\n            this.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||\r\n                src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;\r\n\r\n            // Event type\r\n        } else {\r\n            this.type = src;\r\n        }\r\n\r\n        // Put explicitly provided properties onto the event object\r\n        if ( props ) {\r\n            jQuery.extend( this, props );\r\n        }\r\n\r\n        // Create a timestamp if incoming event doesn't have one\r\n        this.timeStamp = src && src.timeStamp || jQuery.now();\r\n\r\n        // Mark it as fixed\r\n        this[ jQuery.expando ] = true;\r\n    };\r\n\r\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\r\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\r\n    jQuery.Event.prototype = {\r\n        isDefaultPrevented: returnFalse,\r\n        isPropagationStopped: returnFalse,\r\n        isImmediatePropagationStopped: returnFalse,\r\n\r\n        preventDefault: function() {\r\n            var e = this.originalEvent;\r\n\r\n            this.isDefaultPrevented = returnTrue;\r\n            if ( !e ) {\r\n                return;\r\n            }\r\n\r\n            // If preventDefault exists, run it on the original event\r\n            if ( e.preventDefault ) {\r\n                e.preventDefault();\r\n\r\n                // Support: IE\r\n                // Otherwise set the returnValue property of the original event to false\r\n            } else {\r\n                e.returnValue = false;\r\n            }\r\n        },\r\n        stopPropagation: function() {\r\n            var e = this.originalEvent;\r\n\r\n            this.isPropagationStopped = returnTrue;\r\n            if ( !e ) {\r\n                return;\r\n            }\r\n            // If stopPropagation exists, run it on the original event\r\n            if ( e.stopPropagation ) {\r\n                e.stopPropagation();\r\n            }\r\n\r\n            // Support: IE\r\n            // Set the cancelBubble property of the original event to true\r\n            e.cancelBubble = true;\r\n        },\r\n        stopImmediatePropagation: function() {\r\n            this.isImmediatePropagationStopped = returnTrue;\r\n            this.stopPropagation();\r\n        }\r\n    };\r\n\r\n// Create mouseenter/leave events using mouseover/out and event-time checks\r\n    jQuery.each({\r\n        mouseenter: \"mouseover\",\r\n        mouseleave: \"mouseout\"\r\n    }, function( orig, fix ) {\r\n        jQuery.event.special[ orig ] = {\r\n            delegateType: fix,\r\n            bindType: fix,\r\n\r\n            handle: function( event ) {\r\n                var ret,\r\n                    target = this,\r\n                    related = event.relatedTarget,\r\n                    handleObj = event.handleObj;\r\n\r\n                // For mousenter/leave call the handler if related is outside the target.\r\n                // NB: No relatedTarget if the mouse left/entered the browser window\r\n                if ( !related || (related !== target && !jQuery.contains( target, related )) ) {\r\n                    event.type = handleObj.origType;\r\n                    ret = handleObj.handler.apply( this, arguments );\r\n                    event.type = fix;\r\n                }\r\n                return ret;\r\n            }\r\n        };\r\n    });\r\n\r\n// IE submit delegation\r\n    if ( !jQuery.support.submitBubbles ) {\r\n\r\n        jQuery.event.special.submit = {\r\n            setup: function() {\r\n                // Only need this for delegated form submit events\r\n                if ( jQuery.nodeName( this, \"form\" ) ) {\r\n                    return false;\r\n                }\r\n\r\n                // Lazy-add a submit handler when a descendant form may potentially be submitted\r\n                jQuery.event.add( this, \"click._submit keypress._submit\", function( e ) {\r\n                    // Node name check avoids a VML-related crash in IE (#9807)\r\n                    var elem = e.target,\r\n                        form = jQuery.nodeName( elem, \"input\" ) || jQuery.nodeName( elem, \"button\" ) ? elem.form : undefined;\r\n                    if ( form && !jQuery._data( form, \"submitBubbles\" ) ) {\r\n                        jQuery.event.add( form, \"submit._submit\", function( event ) {\r\n                            event._submit_bubble = true;\r\n                        });\r\n                        jQuery._data( form, \"submitBubbles\", true );\r\n                    }\r\n                });\r\n                // return undefined since we don't need an event listener\r\n            },\r\n\r\n            postDispatch: function( event ) {\r\n                // If form was submitted by the user, bubble the event up the tree\r\n                if ( event._submit_bubble ) {\r\n                    delete event._submit_bubble;\r\n                    if ( this.parentNode && !event.isTrigger ) {\r\n                        jQuery.event.simulate( \"submit\", this.parentNode, event, true );\r\n                    }\r\n                }\r\n            },\r\n\r\n            teardown: function() {\r\n                // Only need this for delegated form submit events\r\n                if ( jQuery.nodeName( this, \"form\" ) ) {\r\n                    return false;\r\n                }\r\n\r\n                // Remove delegated handlers; cleanData eventually reaps submit handlers attached above\r\n                jQuery.event.remove( this, \"._submit\" );\r\n            }\r\n        };\r\n    }\r\n\r\n// IE change delegation and checkbox/radio fix\r\n    if ( !jQuery.support.changeBubbles ) {\r\n\r\n        jQuery.event.special.change = {\r\n\r\n            setup: function() {\r\n\r\n                if ( rformElems.test( this.nodeName ) ) {\r\n                    // IE doesn't fire change on a check/radio until blur; trigger it on click\r\n                    // after a propertychange. Eat the blur-change in special.change.handle.\r\n                    // This still fires onchange a second time for check/radio after blur.\r\n                    if ( this.type === \"checkbox\" || this.type === \"radio\" ) {\r\n                        jQuery.event.add( this, \"propertychange._change\", function( event ) {\r\n                            if ( event.originalEvent.propertyName === \"checked\" ) {\r\n                                this._just_changed = true;\r\n                            }\r\n                        });\r\n                        jQuery.event.add( this, \"click._change\", function( event ) {\r\n                            if ( this._just_changed && !event.isTrigger ) {\r\n                                this._just_changed = false;\r\n                            }\r\n                            // Allow triggered, simulated change events (#11500)\r\n                            jQuery.event.simulate( \"change\", this, event, true );\r\n                        });\r\n                    }\r\n                    return false;\r\n                }\r\n                // Delegated event; lazy-add a change handler on descendant inputs\r\n                jQuery.event.add( this, \"beforeactivate._change\", function( e ) {\r\n                    var elem = e.target;\r\n\r\n                    if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, \"changeBubbles\" ) ) {\r\n                        jQuery.event.add( elem, \"change._change\", function( event ) {\r\n                            if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {\r\n                                jQuery.event.simulate( \"change\", this.parentNode, event, true );\r\n                            }\r\n                        });\r\n                        jQuery._data( elem, \"changeBubbles\", true );\r\n                    }\r\n                });\r\n            },\r\n\r\n            handle: function( event ) {\r\n                var elem = event.target;\r\n\r\n                // Swallow native change events from checkbox/radio, we already triggered them above\r\n                if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== \"radio\" && elem.type !== \"checkbox\") ) {\r\n                    return event.handleObj.handler.apply( this, arguments );\r\n                }\r\n            },\r\n\r\n            teardown: function() {\r\n                jQuery.event.remove( this, \"._change\" );\r\n\r\n                return !rformElems.test( this.nodeName );\r\n            }\r\n        };\r\n    }\r\n\r\n// Create \"bubbling\" focus and blur events\r\n    if ( !jQuery.support.focusinBubbles ) {\r\n        jQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\r\n\r\n            // Attach a single capturing handler while someone wants focusin/focusout\r\n            var attaches = 0,\r\n                handler = function( event ) {\r\n                    jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\r\n                };\r\n\r\n            jQuery.event.special[ fix ] = {\r\n                setup: function() {\r\n                    if ( attaches++ === 0 ) {\r\n                        document.addEventListener( orig, handler, true );\r\n                    }\r\n                },\r\n                teardown: function() {\r\n                    if ( --attaches === 0 ) {\r\n                        document.removeEventListener( orig, handler, true );\r\n                    }\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    jQuery.fn.extend({\r\n\r\n        on: function( types, selector, data, fn, /*INTERNAL*/ one ) {\r\n            var type, origFn;\r\n\r\n            // Types can be a map of types/handlers\r\n            if ( typeof types === \"object\" ) {\r\n                // ( types-Object, selector, data )\r\n                if ( typeof selector !== \"string\" ) {\r\n                    // ( types-Object, data )\r\n                    data = data || selector;\r\n                    selector = undefined;\r\n                }\r\n                for ( type in types ) {\r\n                    this.on( type, selector, data, types[ type ], one );\r\n                }\r\n                return this;\r\n            }\r\n\r\n            if ( data == null && fn == null ) {\r\n                // ( types, fn )\r\n                fn = selector;\r\n                data = selector = undefined;\r\n            } else if ( fn == null ) {\r\n                if ( typeof selector === \"string\" ) {\r\n                    // ( types, selector, fn )\r\n                    fn = data;\r\n                    data = undefined;\r\n                } else {\r\n                    // ( types, data, fn )\r\n                    fn = data;\r\n                    data = selector;\r\n                    selector = undefined;\r\n                }\r\n            }\r\n            if ( fn === false ) {\r\n                fn = returnFalse;\r\n            } else if ( !fn ) {\r\n                return this;\r\n            }\r\n\r\n            if ( one === 1 ) {\r\n                origFn = fn;\r\n                fn = function( event ) {\r\n                    // Can use an empty set, since event contains the info\r\n                    jQuery().off( event );\r\n                    return origFn.apply( this, arguments );\r\n                };\r\n                // Use same guid so caller can remove using origFn\r\n                fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\r\n            }\r\n            return this.each( function() {\r\n                jQuery.event.add( this, types, fn, data, selector );\r\n            });\r\n        },\r\n        one: function( types, selector, data, fn ) {\r\n            return this.on( types, selector, data, fn, 1 );\r\n        },\r\n        off: function( types, selector, fn ) {\r\n            var handleObj, type;\r\n            if ( types && types.preventDefault && types.handleObj ) {\r\n                // ( event )  dispatched jQuery.Event\r\n                handleObj = types.handleObj;\r\n                jQuery( types.delegateTarget ).off(\r\n                    handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\r\n                    handleObj.selector,\r\n                    handleObj.handler\r\n                );\r\n                return this;\r\n            }\r\n            if ( typeof types === \"object\" ) {\r\n                // ( types-object [, selector] )\r\n                for ( type in types ) {\r\n                    this.off( type, selector, types[ type ] );\r\n                }\r\n                return this;\r\n            }\r\n            if ( selector === false || typeof selector === \"function\" ) {\r\n                // ( types [, fn] )\r\n                fn = selector;\r\n                selector = undefined;\r\n            }\r\n            if ( fn === false ) {\r\n                fn = returnFalse;\r\n            }\r\n            return this.each(function() {\r\n                jQuery.event.remove( this, types, fn, selector );\r\n            });\r\n        },\r\n\r\n        trigger: function( type, data ) {\r\n            return this.each(function() {\r\n                jQuery.event.trigger( type, data, this );\r\n            });\r\n        },\r\n        triggerHandler: function( type, data ) {\r\n            var elem = this[0];\r\n            if ( elem ) {\r\n                return jQuery.event.trigger( type, data, elem, true );\r\n            }\r\n        }\r\n    });\r\n    var isSimple = /^.[^:#\\[\\.,]*$/,\r\n        rparentsprev = /^(?:parents|prev(?:Until|All))/,\r\n        rneedsContext = jQuery.expr.match.needsContext,\r\n    // methods guaranteed to produce a unique set when starting from a unique set\r\n        guaranteedUnique = {\r\n            children: true,\r\n            contents: true,\r\n            next: true,\r\n            prev: true\r\n        };\r\n\r\n    jQuery.fn.extend({\r\n        find: function( selector ) {\r\n            var i,\r\n                ret = [],\r\n                self = this,\r\n                len = self.length;\r\n\r\n            if ( typeof selector !== \"string\" ) {\r\n                return this.pushStack( jQuery( selector ).filter(function() {\r\n                    for ( i = 0; i < len; i++ ) {\r\n                        if ( jQuery.contains( self[ i ], this ) ) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }) );\r\n            }\r\n\r\n            for ( i = 0; i < len; i++ ) {\r\n                jQuery.find( selector, self[ i ], ret );\r\n            }\r\n\r\n            // Needed because $( selector, context ) becomes $( context ).find( selector )\r\n            ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\r\n            ret.selector = this.selector ? this.selector + \" \" + selector : selector;\r\n            return ret;\r\n        },\r\n\r\n        has: function( target ) {\r\n            var i,\r\n                targets = jQuery( target, this ),\r\n                len = targets.length;\r\n\r\n            return this.filter(function() {\r\n                for ( i = 0; i < len; i++ ) {\r\n                    if ( jQuery.contains( this, targets[i] ) ) {\r\n                        return true;\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        not: function( selector ) {\r\n            return this.pushStack( winnow(this, selector || [], true) );\r\n        },\r\n\r\n        filter: function( selector ) {\r\n            return this.pushStack( winnow(this, selector || [], false) );\r\n        },\r\n\r\n        is: function( selector ) {\r\n            return !!winnow(\r\n                this,\r\n\r\n                // If this is a positional/relative selector, check membership in the returned set\r\n                // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\r\n                typeof selector === \"string\" && rneedsContext.test( selector ) ?\r\n                    jQuery( selector ) :\r\n                    selector || [],\r\n                false\r\n            ).length;\r\n        },\r\n\r\n        closest: function( selectors, context ) {\r\n            var cur,\r\n                i = 0,\r\n                l = this.length,\r\n                ret = [],\r\n                pos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\r\n                    jQuery( selectors, context || this.context ) :\r\n                    0;\r\n\r\n            for ( ; i < l; i++ ) {\r\n                for ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {\r\n                    // Always skip document fragments\r\n                    if ( cur.nodeType < 11 && (pos ?\r\n                        pos.index(cur) > -1 :\r\n\r\n                        // Don't pass non-elements to Sizzle\r\n                        cur.nodeType === 1 &&\r\n                            jQuery.find.matchesSelector(cur, selectors)) ) {\r\n\r\n                        cur = ret.push( cur );\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this.pushStack( ret.length > 1 ? jQuery.unique( ret ) : ret );\r\n        },\r\n\r\n        // Determine the position of an element within\r\n        // the matched set of elements\r\n        index: function( elem ) {\r\n\r\n            // No argument, return index in parent\r\n            if ( !elem ) {\r\n                return ( this[0] && this[0].parentNode ) ? this.first().prevAll().length : -1;\r\n            }\r\n\r\n            // index in selector\r\n            if ( typeof elem === \"string\" ) {\r\n                return jQuery.inArray( this[0], jQuery( elem ) );\r\n            }\r\n\r\n            // Locate the position of the desired element\r\n            return jQuery.inArray(\r\n                // If it receives a jQuery object, the first element is used\r\n                elem.jquery ? elem[0] : elem, this );\r\n        },\r\n\r\n        add: function( selector, context ) {\r\n            var set = typeof selector === \"string\" ?\r\n                    jQuery( selector, context ) :\r\n                    jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),\r\n                all = jQuery.merge( this.get(), set );\r\n\r\n            return this.pushStack( jQuery.unique(all) );\r\n        },\r\n\r\n        addBack: function( selector ) {\r\n            return this.add( selector == null ?\r\n                this.prevObject : this.prevObject.filter(selector)\r\n            );\r\n        }\r\n    });\r\n\r\n    function sibling( cur, dir ) {\r\n        do {\r\n            cur = cur[ dir ];\r\n        } while ( cur && cur.nodeType !== 1 );\r\n\r\n        return cur;\r\n    }\r\n\r\n    jQuery.each({\r\n        parent: function( elem ) {\r\n            var parent = elem.parentNode;\r\n            return parent && parent.nodeType !== 11 ? parent : null;\r\n        },\r\n        parents: function( elem ) {\r\n            return jQuery.dir( elem, \"parentNode\" );\r\n        },\r\n        parentsUntil: function( elem, i, until ) {\r\n            return jQuery.dir( elem, \"parentNode\", until );\r\n        },\r\n        next: function( elem ) {\r\n            return sibling( elem, \"nextSibling\" );\r\n        },\r\n        prev: function( elem ) {\r\n            return sibling( elem, \"previousSibling\" );\r\n        },\r\n        nextAll: function( elem ) {\r\n            return jQuery.dir( elem, \"nextSibling\" );\r\n        },\r\n        prevAll: function( elem ) {\r\n            return jQuery.dir( elem, \"previousSibling\" );\r\n        },\r\n        nextUntil: function( elem, i, until ) {\r\n            return jQuery.dir( elem, \"nextSibling\", until );\r\n        },\r\n        prevUntil: function( elem, i, until ) {\r\n            return jQuery.dir( elem, \"previousSibling\", until );\r\n        },\r\n        siblings: function( elem ) {\r\n            return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );\r\n        },\r\n        children: function( elem ) {\r\n            return jQuery.sibling( elem.firstChild );\r\n        },\r\n        contents: function( elem ) {\r\n            return jQuery.nodeName( elem, \"iframe\" ) ?\r\n                elem.contentDocument || elem.contentWindow.document :\r\n                jQuery.merge( [], elem.childNodes );\r\n        }\r\n    }, function( name, fn ) {\r\n        jQuery.fn[ name ] = function( until, selector ) {\r\n            var ret = jQuery.map( this, fn, until );\r\n\r\n            if ( name.slice( -5 ) !== \"Until\" ) {\r\n                selector = until;\r\n            }\r\n\r\n            if ( selector && typeof selector === \"string\" ) {\r\n                ret = jQuery.filter( selector, ret );\r\n            }\r\n\r\n            if ( this.length > 1 ) {\r\n                // Remove duplicates\r\n                if ( !guaranteedUnique[ name ] ) {\r\n                    ret = jQuery.unique( ret );\r\n                }\r\n\r\n                // Reverse order for parents* and prev-derivatives\r\n                if ( rparentsprev.test( name ) ) {\r\n                    ret = ret.reverse();\r\n                }\r\n            }\r\n\r\n            return this.pushStack( ret );\r\n        };\r\n    });\r\n\r\n    jQuery.extend({\r\n        filter: function( expr, elems, not ) {\r\n            var elem = elems[ 0 ];\r\n\r\n            if ( not ) {\r\n                expr = \":not(\" + expr + \")\";\r\n            }\r\n\r\n            return elems.length === 1 && elem.nodeType === 1 ?\r\n                jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\r\n                jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\r\n                    return elem.nodeType === 1;\r\n                }));\r\n        },\r\n\r\n        dir: function( elem, dir, until ) {\r\n            var matched = [],\r\n                cur = elem[ dir ];\r\n\r\n            while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {\r\n                if ( cur.nodeType === 1 ) {\r\n                    matched.push( cur );\r\n                }\r\n                cur = cur[dir];\r\n            }\r\n            return matched;\r\n        },\r\n\r\n        sibling: function( n, elem ) {\r\n            var r = [];\r\n\r\n            for ( ; n; n = n.nextSibling ) {\r\n                if ( n.nodeType === 1 && n !== elem ) {\r\n                    r.push( n );\r\n                }\r\n            }\r\n\r\n            return r;\r\n        }\r\n    });\r\n\r\n// Implement the identical functionality for filter and not\r\n    function winnow( elements, qualifier, not ) {\r\n        if ( jQuery.isFunction( qualifier ) ) {\r\n            return jQuery.grep( elements, function( elem, i ) {\r\n                /* jshint -W018 */\r\n                return !!qualifier.call( elem, i, elem ) !== not;\r\n            });\r\n\r\n        }\r\n\r\n        if ( qualifier.nodeType ) {\r\n            return jQuery.grep( elements, function( elem ) {\r\n                return ( elem === qualifier ) !== not;\r\n            });\r\n\r\n        }\r\n\r\n        if ( typeof qualifier === \"string\" ) {\r\n            if ( isSimple.test( qualifier ) ) {\r\n                return jQuery.filter( qualifier, elements, not );\r\n            }\r\n\r\n            qualifier = jQuery.filter( qualifier, elements );\r\n        }\r\n\r\n        return jQuery.grep( elements, function( elem ) {\r\n            return ( jQuery.inArray( elem, qualifier ) >= 0 ) !== not;\r\n        });\r\n    }\r\n    function createSafeFragment( document ) {\r\n        var list = nodeNames.split( \"|\" ),\r\n            safeFrag = document.createDocumentFragment();\r\n\r\n        if ( safeFrag.createElement ) {\r\n            while ( list.length ) {\r\n                safeFrag.createElement(\r\n                    list.pop()\r\n                );\r\n            }\r\n        }\r\n        return safeFrag;\r\n    }\r\n\r\n    var nodeNames = \"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|\" +\r\n            \"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",\r\n        rinlinejQuery = / jQuery\\d+=\"(?:null|\\d+)\"/g,\r\n        rnoshimcache = new RegExp(\"<(?:\" + nodeNames + \")[\\\\s/>]\", \"i\"),\r\n        rleadingWhitespace = /^\\s+/,\r\n        rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\r\n        rtagName = /<([\\w:]+)/,\r\n        rtbody = /<tbody/i,\r\n        rhtml = /<|&#?\\w+;/,\r\n        rnoInnerhtml = /<(?:script|style|link)/i,\r\n        manipulation_rcheckableType = /^(?:checkbox|radio)$/i,\r\n    // checked=\"checked\" or checked\r\n        rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\r\n        rscriptType = /^$|\\/(?:java|ecma)script/i,\r\n        rscriptTypeMasked = /^true\\/(.*)/,\r\n        rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\r\n\r\n    // We have to close these tags to support XHTML (#13200)\r\n        wrapMap = {\r\n            option: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\r\n            legend: [ 1, \"<fieldset>\", \"</fieldset>\" ],\r\n            area: [ 1, \"<map>\", \"</map>\" ],\r\n            param: [ 1, \"<object>\", \"</object>\" ],\r\n            thead: [ 1, \"<table>\", \"</table>\" ],\r\n            tr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\r\n            col: [ 2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\" ],\r\n            td: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\r\n\r\n            // IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,\r\n            // unless wrapped in a div with non-breaking characters in front of it.\r\n            _default: jQuery.support.htmlSerialize ? [ 0, \"\", \"\" ] : [ 1, \"X<div>\", \"</div>\"  ]\r\n        },\r\n        safeFragment = createSafeFragment( document ),\r\n        fragmentDiv = safeFragment.appendChild( document.createElement(\"div\") );\r\n\r\n    wrapMap.optgroup = wrapMap.option;\r\n    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\r\n    wrapMap.th = wrapMap.td;\r\n\r\n    jQuery.fn.extend({\r\n        text: function( value ) {\r\n            return jQuery.access( this, function( value ) {\r\n                return value === undefined ?\r\n                    jQuery.text( this ) :\r\n                    this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );\r\n            }, null, value, arguments.length );\r\n        },\r\n\r\n        append: function() {\r\n            return this.domManip( arguments, function( elem ) {\r\n                if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n                    var target = manipulationTarget( this, elem );\r\n                    target.appendChild( elem );\r\n                }\r\n            });\r\n        },\r\n\r\n        prepend: function() {\r\n            return this.domManip( arguments, function( elem ) {\r\n                if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n                    var target = manipulationTarget( this, elem );\r\n                    target.insertBefore( elem, target.firstChild );\r\n                }\r\n            });\r\n        },\r\n\r\n        before: function() {\r\n            return this.domManip( arguments, function( elem ) {\r\n                if ( this.parentNode ) {\r\n                    this.parentNode.insertBefore( elem, this );\r\n                }\r\n            });\r\n        },\r\n\r\n        after: function() {\r\n            return this.domManip( arguments, function( elem ) {\r\n                if ( this.parentNode ) {\r\n                    this.parentNode.insertBefore( elem, this.nextSibling );\r\n                }\r\n            });\r\n        },\r\n\r\n        // keepData is for internal use only--do not document\r\n        remove: function( selector, keepData ) {\r\n            var elem,\r\n                elems = selector ? jQuery.filter( selector, this ) : this,\r\n                i = 0;\r\n\r\n            for ( ; (elem = elems[i]) != null; i++ ) {\r\n\r\n                if ( !keepData && elem.nodeType === 1 ) {\r\n                    jQuery.cleanData( getAll( elem ) );\r\n                }\r\n\r\n                if ( elem.parentNode ) {\r\n                    if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {\r\n                        setGlobalEval( getAll( elem, \"script\" ) );\r\n                    }\r\n                    elem.parentNode.removeChild( elem );\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        empty: function() {\r\n            var elem,\r\n                i = 0;\r\n\r\n            for ( ; (elem = this[i]) != null; i++ ) {\r\n                // Remove element nodes and prevent memory leaks\r\n                if ( elem.nodeType === 1 ) {\r\n                    jQuery.cleanData( getAll( elem, false ) );\r\n                }\r\n\r\n                // Remove any remaining nodes\r\n                while ( elem.firstChild ) {\r\n                    elem.removeChild( elem.firstChild );\r\n                }\r\n\r\n                // If this is a select, ensure that it displays empty (#12336)\r\n                // Support: IE<9\r\n                if ( elem.options && jQuery.nodeName( elem, \"select\" ) ) {\r\n                    elem.options.length = 0;\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        clone: function( dataAndEvents, deepDataAndEvents ) {\r\n            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\r\n            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\r\n\r\n            return this.map( function () {\r\n                return jQuery.clone( this, dataAndEvents, deepDataAndEvents );\r\n            });\r\n        },\r\n\r\n        html: function( value ) {\r\n            return jQuery.access( this, function( value ) {\r\n                var elem = this[0] || {},\r\n                    i = 0,\r\n                    l = this.length;\r\n\r\n                if ( value === undefined ) {\r\n                    return elem.nodeType === 1 ?\r\n                        elem.innerHTML.replace( rinlinejQuery, \"\" ) :\r\n                        undefined;\r\n                }\r\n\r\n                // See if we can take a shortcut and just use innerHTML\r\n                if ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\r\n                    ( jQuery.support.htmlSerialize || !rnoshimcache.test( value )  ) &&\r\n                    ( jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&\r\n                    !wrapMap[ ( rtagName.exec( value ) || [\"\", \"\"] )[1].toLowerCase() ] ) {\r\n\r\n                    value = value.replace( rxhtmlTag, \"<$1></$2>\" );\r\n\r\n                    try {\r\n                        for (; i < l; i++ ) {\r\n                            // Remove element nodes and prevent memory leaks\r\n                            elem = this[i] || {};\r\n                            if ( elem.nodeType === 1 ) {\r\n                                jQuery.cleanData( getAll( elem, false ) );\r\n                                elem.innerHTML = value;\r\n                            }\r\n                        }\r\n\r\n                        elem = 0;\r\n\r\n                        // If using innerHTML throws an exception, use the fallback method\r\n                    } catch(e) {}\r\n                }\r\n\r\n                if ( elem ) {\r\n                    this.empty().append( value );\r\n                }\r\n            }, null, value, arguments.length );\r\n        },\r\n\r\n        replaceWith: function() {\r\n            var\r\n            // Snapshot the DOM in case .domManip sweeps something relevant into its fragment\r\n                args = jQuery.map( this, function( elem ) {\r\n                    return [ elem.nextSibling, elem.parentNode ];\r\n                }),\r\n                i = 0;\r\n\r\n            // Make the changes, replacing each context element with the new content\r\n            this.domManip( arguments, function( elem ) {\r\n                var next = args[ i++ ],\r\n                    parent = args[ i++ ];\r\n\r\n                if ( parent ) {\r\n                    // Don't use the snapshot next if it has moved (#13810)\r\n                    if ( next && next.parentNode !== parent ) {\r\n                        next = this.nextSibling;\r\n                    }\r\n                    jQuery( this ).remove();\r\n                    parent.insertBefore( elem, next );\r\n                }\r\n                // Allow new content to include elements from the context set\r\n            }, true );\r\n\r\n            // Force removal if there was no new content (e.g., from empty arguments)\r\n            return i ? this : this.remove();\r\n        },\r\n\r\n        detach: function( selector ) {\r\n            return this.remove( selector, true );\r\n        },\r\n\r\n        domManip: function( args, callback, allowIntersection ) {\r\n\r\n            // Flatten any nested arrays\r\n            args = core_concat.apply( [], args );\r\n\r\n            var first, node, hasScripts,\r\n                scripts, doc, fragment,\r\n                i = 0,\r\n                l = this.length,\r\n                set = this,\r\n                iNoClone = l - 1,\r\n                value = args[0],\r\n                isFunction = jQuery.isFunction( value );\r\n\r\n            // We can't cloneNode fragments that contain checked, in WebKit\r\n            if ( isFunction || !( l <= 1 || typeof value !== \"string\" || jQuery.support.checkClone || !rchecked.test( value ) ) ) {\r\n                return this.each(function( index ) {\r\n                    var self = set.eq( index );\r\n                    if ( isFunction ) {\r\n                        args[0] = value.call( this, index, self.html() );\r\n                    }\r\n                    self.domManip( args, callback, allowIntersection );\r\n                });\r\n            }\r\n\r\n            if ( l ) {\r\n                fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, !allowIntersection && this );\r\n                first = fragment.firstChild;\r\n\r\n                if ( fragment.childNodes.length === 1 ) {\r\n                    fragment = first;\r\n                }\r\n\r\n                if ( first ) {\r\n                    scripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\r\n                    hasScripts = scripts.length;\r\n\r\n                    // Use the original fragment for the last item instead of the first because it can end up\r\n                    // being emptied incorrectly in certain situations (#8070).\r\n                    for ( ; i < l; i++ ) {\r\n                        node = fragment;\r\n\r\n                        if ( i !== iNoClone ) {\r\n                            node = jQuery.clone( node, true, true );\r\n\r\n                            // Keep references to cloned scripts for later restoration\r\n                            if ( hasScripts ) {\r\n                                jQuery.merge( scripts, getAll( node, \"script\" ) );\r\n                            }\r\n                        }\r\n\r\n                        callback.call( this[i], node, i );\r\n                    }\r\n\r\n                    if ( hasScripts ) {\r\n                        doc = scripts[ scripts.length - 1 ].ownerDocument;\r\n\r\n                        // Reenable scripts\r\n                        jQuery.map( scripts, restoreScript );\r\n\r\n                        // Evaluate executable scripts on first document insertion\r\n                        for ( i = 0; i < hasScripts; i++ ) {\r\n                            node = scripts[ i ];\r\n                            if ( rscriptType.test( node.type || \"\" ) &&\r\n                                !jQuery._data( node, \"globalEval\" ) && jQuery.contains( doc, node ) ) {\r\n\r\n                                if ( node.src ) {\r\n                                    // Hope ajax is available...\r\n                                    jQuery._evalUrl( node.src );\r\n                                } else {\r\n                                    jQuery.globalEval( ( node.text || node.textContent || node.innerHTML || \"\" ).replace( rcleanScript, \"\" ) );\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Fix #11809: Avoid leaking memory\r\n                    fragment = first = null;\r\n                }\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n// Support: IE<8\r\n// Manipulating tables requires a tbody\r\n    function manipulationTarget( elem, content ) {\r\n        return jQuery.nodeName( elem, \"table\" ) &&\r\n            jQuery.nodeName( content.nodeType === 1 ? content : content.firstChild, \"tr\" ) ?\r\n\r\n            elem.getElementsByTagName(\"tbody\")[0] ||\r\n                elem.appendChild( elem.ownerDocument.createElement(\"tbody\") ) :\r\n            elem;\r\n    }\r\n\r\n// Replace/restore the type attribute of script elements for safe DOM manipulation\r\n    function disableScript( elem ) {\r\n        elem.type = (jQuery.find.attr( elem, \"type\" ) !== null) + \"/\" + elem.type;\r\n        return elem;\r\n    }\r\n    function restoreScript( elem ) {\r\n        var match = rscriptTypeMasked.exec( elem.type );\r\n        if ( match ) {\r\n            elem.type = match[1];\r\n        } else {\r\n            elem.removeAttribute(\"type\");\r\n        }\r\n        return elem;\r\n    }\r\n\r\n// Mark scripts as having already been evaluated\r\n    function setGlobalEval( elems, refElements ) {\r\n        var elem,\r\n            i = 0;\r\n        for ( ; (elem = elems[i]) != null; i++ ) {\r\n            jQuery._data( elem, \"globalEval\", !refElements || jQuery._data( refElements[i], \"globalEval\" ) );\r\n        }\r\n    }\r\n\r\n    function cloneCopyEvent( src, dest ) {\r\n\r\n        if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {\r\n            return;\r\n        }\r\n\r\n        var type, i, l,\r\n            oldData = jQuery._data( src ),\r\n            curData = jQuery._data( dest, oldData ),\r\n            events = oldData.events;\r\n\r\n        if ( events ) {\r\n            delete curData.handle;\r\n            curData.events = {};\r\n\r\n            for ( type in events ) {\r\n                for ( i = 0, l = events[ type ].length; i < l; i++ ) {\r\n                    jQuery.event.add( dest, type, events[ type ][ i ] );\r\n                }\r\n            }\r\n        }\r\n\r\n        // make the cloned public data object a copy from the original\r\n        if ( curData.data ) {\r\n            curData.data = jQuery.extend( {}, curData.data );\r\n        }\r\n    }\r\n\r\n    function fixCloneNodeIssues( src, dest ) {\r\n        var nodeName, e, data;\r\n\r\n        // We do not need to do anything for non-Elements\r\n        if ( dest.nodeType !== 1 ) {\r\n            return;\r\n        }\r\n\r\n        nodeName = dest.nodeName.toLowerCase();\r\n\r\n        // IE6-8 copies events bound via attachEvent when using cloneNode.\r\n        if ( !jQuery.support.noCloneEvent && dest[ jQuery.expando ] ) {\r\n            data = jQuery._data( dest );\r\n\r\n            for ( e in data.events ) {\r\n                jQuery.removeEvent( dest, e, data.handle );\r\n            }\r\n\r\n            // Event data gets referenced instead of copied if the expando gets copied too\r\n            dest.removeAttribute( jQuery.expando );\r\n        }\r\n\r\n        // IE blanks contents when cloning scripts, and tries to evaluate newly-set text\r\n        if ( nodeName === \"script\" && dest.text !== src.text ) {\r\n            disableScript( dest ).text = src.text;\r\n            restoreScript( dest );\r\n\r\n            // IE6-10 improperly clones children of object elements using classid.\r\n            // IE10 throws NoModificationAllowedError if parent is null, #12132.\r\n        } else if ( nodeName === \"object\" ) {\r\n            if ( dest.parentNode ) {\r\n                dest.outerHTML = src.outerHTML;\r\n            }\r\n\r\n            // This path appears unavoidable for IE9. When cloning an object\r\n            // element in IE9, the outerHTML strategy above is not sufficient.\r\n            // If the src has innerHTML and the destination does not,\r\n            // copy the src.innerHTML into the dest.innerHTML. #10324\r\n            if ( jQuery.support.html5Clone && ( src.innerHTML && !jQuery.trim(dest.innerHTML) ) ) {\r\n                dest.innerHTML = src.innerHTML;\r\n            }\r\n\r\n        } else if ( nodeName === \"input\" && manipulation_rcheckableType.test( src.type ) ) {\r\n            // IE6-8 fails to persist the checked state of a cloned checkbox\r\n            // or radio button. Worse, IE6-7 fail to give the cloned element\r\n            // a checked appearance if the defaultChecked value isn't also set\r\n\r\n            dest.defaultChecked = dest.checked = src.checked;\r\n\r\n            // IE6-7 get confused and end up setting the value of a cloned\r\n            // checkbox/radio button to an empty string instead of \"on\"\r\n            if ( dest.value !== src.value ) {\r\n                dest.value = src.value;\r\n            }\r\n\r\n            // IE6-8 fails to return the selected option to the default selected\r\n            // state when cloning options\r\n        } else if ( nodeName === \"option\" ) {\r\n            dest.defaultSelected = dest.selected = src.defaultSelected;\r\n\r\n            // IE6-8 fails to set the defaultValue to the correct value when\r\n            // cloning other types of input fields\r\n        } else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\r\n            dest.defaultValue = src.defaultValue;\r\n        }\r\n    }\r\n\r\n    jQuery.each({\r\n        appendTo: \"append\",\r\n        prependTo: \"prepend\",\r\n        insertBefore: \"before\",\r\n        insertAfter: \"after\",\r\n        replaceAll: \"replaceWith\"\r\n    }, function( name, original ) {\r\n        jQuery.fn[ name ] = function( selector ) {\r\n            var elems,\r\n                i = 0,\r\n                ret = [],\r\n                insert = jQuery( selector ),\r\n                last = insert.length - 1;\r\n\r\n            for ( ; i <= last; i++ ) {\r\n                elems = i === last ? this : this.clone(true);\r\n                jQuery( insert[i] )[ original ]( elems );\r\n\r\n                // Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()\r\n                core_push.apply( ret, elems.get() );\r\n            }\r\n\r\n            return this.pushStack( ret );\r\n        };\r\n    });\r\n\r\n    function getAll( context, tag ) {\r\n        var elems, elem,\r\n            i = 0,\r\n            found = typeof context.getElementsByTagName !== core_strundefined ? context.getElementsByTagName( tag || \"*\" ) :\r\n                typeof context.querySelectorAll !== core_strundefined ? context.querySelectorAll( tag || \"*\" ) :\r\n                    undefined;\r\n\r\n        if ( !found ) {\r\n            for ( found = [], elems = context.childNodes || context; (elem = elems[i]) != null; i++ ) {\r\n                if ( !tag || jQuery.nodeName( elem, tag ) ) {\r\n                    found.push( elem );\r\n                } else {\r\n                    jQuery.merge( found, getAll( elem, tag ) );\r\n                }\r\n            }\r\n        }\r\n\r\n        return tag === undefined || tag && jQuery.nodeName( context, tag ) ?\r\n            jQuery.merge( [ context ], found ) :\r\n            found;\r\n    }\r\n\r\n// Used in buildFragment, fixes the defaultChecked property\r\n    function fixDefaultChecked( elem ) {\r\n        if ( manipulation_rcheckableType.test( elem.type ) ) {\r\n            elem.defaultChecked = elem.checked;\r\n        }\r\n    }\r\n\r\n    jQuery.extend({\r\n        clone: function( elem, dataAndEvents, deepDataAndEvents ) {\r\n            var destElements, node, clone, i, srcElements,\r\n                inPage = jQuery.contains( elem.ownerDocument, elem );\r\n\r\n            if ( jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( \"<\" + elem.nodeName + \">\" ) ) {\r\n                clone = elem.cloneNode( true );\r\n\r\n                // IE<=8 does not properly clone detached, unknown element nodes\r\n            } else {\r\n                fragmentDiv.innerHTML = elem.outerHTML;\r\n                fragmentDiv.removeChild( clone = fragmentDiv.firstChild );\r\n            }\r\n\r\n            if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&\r\n                (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {\r\n\r\n                // We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\r\n                destElements = getAll( clone );\r\n                srcElements = getAll( elem );\r\n\r\n                // Fix all IE cloning issues\r\n                for ( i = 0; (node = srcElements[i]) != null; ++i ) {\r\n                    // Ensure that the destination node is not null; Fixes #9587\r\n                    if ( destElements[i] ) {\r\n                        fixCloneNodeIssues( node, destElements[i] );\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Copy the events from the original to the clone\r\n            if ( dataAndEvents ) {\r\n                if ( deepDataAndEvents ) {\r\n                    srcElements = srcElements || getAll( elem );\r\n                    destElements = destElements || getAll( clone );\r\n\r\n                    for ( i = 0; (node = srcElements[i]) != null; i++ ) {\r\n                        cloneCopyEvent( node, destElements[i] );\r\n                    }\r\n                } else {\r\n                    cloneCopyEvent( elem, clone );\r\n                }\r\n            }\r\n\r\n            // Preserve script evaluation history\r\n            destElements = getAll( clone, \"script\" );\r\n            if ( destElements.length > 0 ) {\r\n                setGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\r\n            }\r\n\r\n            destElements = srcElements = node = null;\r\n\r\n            // Return the cloned set\r\n            return clone;\r\n        },\r\n\r\n        buildFragment: function( elems, context, scripts, selection ) {\r\n            var j, elem, contains,\r\n                tmp, tag, tbody, wrap,\r\n                l = elems.length,\r\n\r\n            // Ensure a safe fragment\r\n                safe = createSafeFragment( context ),\r\n\r\n                nodes = [],\r\n                i = 0;\r\n\r\n            for ( ; i < l; i++ ) {\r\n                elem = elems[ i ];\r\n\r\n                if ( elem || elem === 0 ) {\r\n\r\n                    // Add nodes directly\r\n                    if ( jQuery.type( elem ) === \"object\" ) {\r\n                        jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\r\n\r\n                        // Convert non-html into a text node\r\n                    } else if ( !rhtml.test( elem ) ) {\r\n                        nodes.push( context.createTextNode( elem ) );\r\n\r\n                        // Convert html into DOM nodes\r\n                    } else {\r\n                        tmp = tmp || safe.appendChild( context.createElement(\"div\") );\r\n\r\n                        // Deserialize a standard representation\r\n                        tag = ( rtagName.exec( elem ) || [\"\", \"\"] )[1].toLowerCase();\r\n                        wrap = wrapMap[ tag ] || wrapMap._default;\r\n\r\n                        tmp.innerHTML = wrap[1] + elem.replace( rxhtmlTag, \"<$1></$2>\" ) + wrap[2];\r\n\r\n                        // Descend through wrappers to the right content\r\n                        j = wrap[0];\r\n                        while ( j-- ) {\r\n                            tmp = tmp.lastChild;\r\n                        }\r\n\r\n                        // Manually add leading whitespace removed by IE\r\n                        if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {\r\n                            nodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[0] ) );\r\n                        }\r\n\r\n                        // Remove IE's autoinserted <tbody> from table fragments\r\n                        if ( !jQuery.support.tbody ) {\r\n\r\n                            // String was a <table>, *may* have spurious <tbody>\r\n                            elem = tag === \"table\" && !rtbody.test( elem ) ?\r\n                                tmp.firstChild :\r\n\r\n                                // String was a bare <thead> or <tfoot>\r\n                                wrap[1] === \"<table>\" && !rtbody.test( elem ) ?\r\n                                    tmp :\r\n                                    0;\r\n\r\n                            j = elem && elem.childNodes.length;\r\n                            while ( j-- ) {\r\n                                if ( jQuery.nodeName( (tbody = elem.childNodes[j]), \"tbody\" ) && !tbody.childNodes.length ) {\r\n                                    elem.removeChild( tbody );\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        jQuery.merge( nodes, tmp.childNodes );\r\n\r\n                        // Fix #12392 for WebKit and IE > 9\r\n                        tmp.textContent = \"\";\r\n\r\n                        // Fix #12392 for oldIE\r\n                        while ( tmp.firstChild ) {\r\n                            tmp.removeChild( tmp.firstChild );\r\n                        }\r\n\r\n                        // Remember the top-level container for proper cleanup\r\n                        tmp = safe.lastChild;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Fix #11356: Clear elements from fragment\r\n            if ( tmp ) {\r\n                safe.removeChild( tmp );\r\n            }\r\n\r\n            // Reset defaultChecked for any radios and checkboxes\r\n            // about to be appended to the DOM in IE 6/7 (#8060)\r\n            if ( !jQuery.support.appendChecked ) {\r\n                jQuery.grep( getAll( nodes, \"input\" ), fixDefaultChecked );\r\n            }\r\n\r\n            i = 0;\r\n            while ( (elem = nodes[ i++ ]) ) {\r\n\r\n                // #4087 - If origin and destination elements are the same, and this is\r\n                // that element, do not do anything\r\n                if ( selection && jQuery.inArray( elem, selection ) !== -1 ) {\r\n                    continue;\r\n                }\r\n\r\n                contains = jQuery.contains( elem.ownerDocument, elem );\r\n\r\n                // Append to fragment\r\n                tmp = getAll( safe.appendChild( elem ), \"script\" );\r\n\r\n                // Preserve script evaluation history\r\n                if ( contains ) {\r\n                    setGlobalEval( tmp );\r\n                }\r\n\r\n                // Capture executables\r\n                if ( scripts ) {\r\n                    j = 0;\r\n                    while ( (elem = tmp[ j++ ]) ) {\r\n                        if ( rscriptType.test( elem.type || \"\" ) ) {\r\n                            scripts.push( elem );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            tmp = null;\r\n\r\n            return safe;\r\n        },\r\n\r\n        cleanData: function( elems, /* internal */ acceptData ) {\r\n            var elem, type, id, data,\r\n                i = 0,\r\n                internalKey = jQuery.expando,\r\n                cache = jQuery.cache,\r\n                deleteExpando = jQuery.support.deleteExpando,\r\n                special = jQuery.event.special;\r\n\r\n            for ( ; (elem = elems[i]) != null; i++ ) {\r\n\r\n                if ( acceptData || jQuery.acceptData( elem ) ) {\r\n\r\n                    id = elem[ internalKey ];\r\n                    data = id && cache[ id ];\r\n\r\n                    if ( data ) {\r\n                        if ( data.events ) {\r\n                            for ( type in data.events ) {\r\n                                if ( special[ type ] ) {\r\n                                    jQuery.event.remove( elem, type );\r\n\r\n                                    // This is a shortcut to avoid jQuery.event.remove's overhead\r\n                                } else {\r\n                                    jQuery.removeEvent( elem, type, data.handle );\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        // Remove cache only if it was not already removed by jQuery.event.remove\r\n                        if ( cache[ id ] ) {\r\n\r\n                            delete cache[ id ];\r\n\r\n                            // IE does not allow us to delete expando properties from nodes,\r\n                            // nor does it have a removeAttribute function on Document nodes;\r\n                            // we must handle all of these cases\r\n                            if ( deleteExpando ) {\r\n                                delete elem[ internalKey ];\r\n\r\n                            } else if ( typeof elem.removeAttribute !== core_strundefined ) {\r\n                                elem.removeAttribute( internalKey );\r\n\r\n                            } else {\r\n                                elem[ internalKey ] = null;\r\n                            }\r\n\r\n                            core_deletedIds.push( id );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        _evalUrl: function( url ) {\r\n            return jQuery.ajax({\r\n                url: url,\r\n                type: \"GET\",\r\n                dataType: \"script\",\r\n                async: false,\r\n                global: false,\r\n                \"throws\": true\r\n            });\r\n        }\r\n    });\r\n    jQuery.fn.extend({\r\n        wrapAll: function( html ) {\r\n            if ( jQuery.isFunction( html ) ) {\r\n                return this.each(function(i) {\r\n                    jQuery(this).wrapAll( html.call(this, i) );\r\n                });\r\n            }\r\n\r\n            if ( this[0] ) {\r\n                // The elements to wrap the target around\r\n                var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);\r\n\r\n                if ( this[0].parentNode ) {\r\n                    wrap.insertBefore( this[0] );\r\n                }\r\n\r\n                wrap.map(function() {\r\n                    var elem = this;\r\n\r\n                    while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {\r\n                        elem = elem.firstChild;\r\n                    }\r\n\r\n                    return elem;\r\n                }).append( this );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        wrapInner: function( html ) {\r\n            if ( jQuery.isFunction( html ) ) {\r\n                return this.each(function(i) {\r\n                    jQuery(this).wrapInner( html.call(this, i) );\r\n                });\r\n            }\r\n\r\n            return this.each(function() {\r\n                var self = jQuery( this ),\r\n                    contents = self.contents();\r\n\r\n                if ( contents.length ) {\r\n                    contents.wrapAll( html );\r\n\r\n                } else {\r\n                    self.append( html );\r\n                }\r\n            });\r\n        },\r\n\r\n        wrap: function( html ) {\r\n            var isFunction = jQuery.isFunction( html );\r\n\r\n            return this.each(function(i) {\r\n                jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );\r\n            });\r\n        },\r\n\r\n        unwrap: function() {\r\n            return this.parent().each(function() {\r\n                if ( !jQuery.nodeName( this, \"body\" ) ) {\r\n                    jQuery( this ).replaceWith( this.childNodes );\r\n                }\r\n            }).end();\r\n        }\r\n    });\r\n    var iframe, getStyles, curCSS,\r\n        ralpha = /alpha\\([^)]*\\)/i,\r\n        ropacity = /opacity\\s*=\\s*([^)]*)/,\r\n        rposition = /^(top|right|bottom|left)$/,\r\n    // swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\r\n    // see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\r\n        rdisplayswap = /^(none|table(?!-c[ea]).+)/,\r\n        rmargin = /^margin/,\r\n        rnumsplit = new RegExp( \"^(\" + core_pnum + \")(.*)$\", \"i\" ),\r\n        rnumnonpx = new RegExp( \"^(\" + core_pnum + \")(?!px)[a-z%]+$\", \"i\" ),\r\n        rrelNum = new RegExp( \"^([+-])=(\" + core_pnum + \")\", \"i\" ),\r\n        elemdisplay = { BODY: \"block\" },\r\n\r\n        cssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\r\n        cssNormalTransform = {\r\n            letterSpacing: 0,\r\n            fontWeight: 400\r\n        },\r\n\r\n        cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ],\r\n        cssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ];\r\n\r\n// return a css property mapped to a potentially vendor prefixed property\r\n    function vendorPropName( style, name ) {\r\n\r\n        // shortcut for names that are not vendor prefixed\r\n        if ( name in style ) {\r\n            return name;\r\n        }\r\n\r\n        // check for vendor prefixed names\r\n        var capName = name.charAt(0).toUpperCase() + name.slice(1),\r\n            origName = name,\r\n            i = cssPrefixes.length;\r\n\r\n        while ( i-- ) {\r\n            name = cssPrefixes[ i ] + capName;\r\n            if ( name in style ) {\r\n                return name;\r\n            }\r\n        }\r\n\r\n        return origName;\r\n    }\r\n\r\n    function isHidden( elem, el ) {\r\n        // isHidden might be called from jQuery#filter function;\r\n        // in that case, element will be second argument\r\n        elem = el || elem;\r\n        return jQuery.css( elem, \"display\" ) === \"none\" || !jQuery.contains( elem.ownerDocument, elem );\r\n    }\r\n\r\n    function showHide( elements, show ) {\r\n        var display, elem, hidden,\r\n            values = [],\r\n            index = 0,\r\n            length = elements.length;\r\n\r\n        for ( ; index < length; index++ ) {\r\n            elem = elements[ index ];\r\n            if ( !elem.style ) {\r\n                continue;\r\n            }\r\n\r\n            values[ index ] = jQuery._data( elem, \"olddisplay\" );\r\n            display = elem.style.display;\r\n            if ( show ) {\r\n                // Reset the inline display of this element to learn if it is\r\n                // being hidden by cascaded rules or not\r\n                if ( !values[ index ] && display === \"none\" ) {\r\n                    elem.style.display = \"\";\r\n                }\r\n\r\n                // Set elements which have been overridden with display: none\r\n                // in a stylesheet to whatever the default browser style is\r\n                // for such an element\r\n                if ( elem.style.display === \"\" && isHidden( elem ) ) {\r\n                    values[ index ] = jQuery._data( elem, \"olddisplay\", css_defaultDisplay(elem.nodeName) );\r\n                }\r\n            } else {\r\n\r\n                if ( !values[ index ] ) {\r\n                    hidden = isHidden( elem );\r\n\r\n                    if ( display && display !== \"none\" || !hidden ) {\r\n                        jQuery._data( elem, \"olddisplay\", hidden ? display : jQuery.css( elem, \"display\" ) );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Set the display of most of the elements in a second loop\r\n        // to avoid the constant reflow\r\n        for ( index = 0; index < length; index++ ) {\r\n            elem = elements[ index ];\r\n            if ( !elem.style ) {\r\n                continue;\r\n            }\r\n            if ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\r\n                elem.style.display = show ? values[ index ] || \"\" : \"none\";\r\n            }\r\n        }\r\n\r\n        return elements;\r\n    }\r\n\r\n    jQuery.fn.extend({\r\n        css: function( name, value ) {\r\n            return jQuery.access( this, function( elem, name, value ) {\r\n                var len, styles,\r\n                    map = {},\r\n                    i = 0;\r\n\r\n                if ( jQuery.isArray( name ) ) {\r\n                    styles = getStyles( elem );\r\n                    len = name.length;\r\n\r\n                    for ( ; i < len; i++ ) {\r\n                        map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\r\n                    }\r\n\r\n                    return map;\r\n                }\r\n\r\n                return value !== undefined ?\r\n                    jQuery.style( elem, name, value ) :\r\n                    jQuery.css( elem, name );\r\n            }, name, value, arguments.length > 1 );\r\n        },\r\n        show: function() {\r\n            return showHide( this, true );\r\n        },\r\n        hide: function() {\r\n            return showHide( this );\r\n        },\r\n        toggle: function( state ) {\r\n            if ( typeof state === \"boolean\" ) {\r\n                return state ? this.show() : this.hide();\r\n            }\r\n\r\n            return this.each(function() {\r\n                if ( isHidden( this ) ) {\r\n                    jQuery( this ).show();\r\n                } else {\r\n                    jQuery( this ).hide();\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    jQuery.extend({\r\n        // Add in style property hooks for overriding the default\r\n        // behavior of getting and setting a style property\r\n        cssHooks: {\r\n            opacity: {\r\n                get: function( elem, computed ) {\r\n                    if ( computed ) {\r\n                        // We should always get a number back from opacity\r\n                        var ret = curCSS( elem, \"opacity\" );\r\n                        return ret === \"\" ? \"1\" : ret;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        // Don't automatically add \"px\" to these possibly-unitless properties\r\n        cssNumber: {\r\n            \"columnCount\": true,\r\n            \"fillOpacity\": true,\r\n            \"fontWeight\": true,\r\n            \"lineHeight\": true,\r\n            \"opacity\": true,\r\n            \"order\": true,\r\n            \"orphans\": true,\r\n            \"widows\": true,\r\n            \"zIndex\": true,\r\n            \"zoom\": true\r\n        },\r\n\r\n        // Add in properties whose names you wish to fix before\r\n        // setting or getting the value\r\n        cssProps: {\r\n            // normalize float css property\r\n            \"float\": jQuery.support.cssFloat ? \"cssFloat\" : \"styleFloat\"\r\n        },\r\n\r\n        // Get and set the style property on a DOM Node\r\n        style: function( elem, name, value, extra ) {\r\n            // Don't set styles on text and comment nodes\r\n            if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\r\n                return;\r\n            }\r\n\r\n            // Make sure that we're working with the right name\r\n            var ret, type, hooks,\r\n                origName = jQuery.camelCase( name ),\r\n                style = elem.style;\r\n\r\n            name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );\r\n\r\n            // gets hook for the prefixed version\r\n            // followed by the unprefixed version\r\n            hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\r\n\r\n            // Check if we're setting a value\r\n            if ( value !== undefined ) {\r\n                type = typeof value;\r\n\r\n                // convert relative number strings (+= or -=) to relative numbers. #7345\r\n                if ( type === \"string\" && (ret = rrelNum.exec( value )) ) {\r\n                    value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );\r\n                    // Fixes bug #9237\r\n                    type = \"number\";\r\n                }\r\n\r\n                // Make sure that NaN and null values aren't set. See: #7116\r\n                if ( value == null || type === \"number\" && isNaN( value ) ) {\r\n                    return;\r\n                }\r\n\r\n                // If a number was passed in, add 'px' to the (except for certain CSS properties)\r\n                if ( type === \"number\" && !jQuery.cssNumber[ origName ] ) {\r\n                    value += \"px\";\r\n                }\r\n\r\n                // Fixes #8908, it can be done more correctly by specifing setters in cssHooks,\r\n                // but it would mean to define eight (for every problematic property) identical functions\r\n                if ( !jQuery.support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0 ) {\r\n                    style[ name ] = \"inherit\";\r\n                }\r\n\r\n                // If a hook was provided, use that value, otherwise just set the specified value\r\n                if ( !hooks || !(\"set\" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {\r\n\r\n                    // Wrapped to prevent IE from throwing errors when 'invalid' values are provided\r\n                    // Fixes bug #5509\r\n                    try {\r\n                        style[ name ] = value;\r\n                    } catch(e) {}\r\n                }\r\n\r\n            } else {\r\n                // If a hook was provided get the non-computed value from there\r\n                if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {\r\n                    return ret;\r\n                }\r\n\r\n                // Otherwise just get the value from the style object\r\n                return style[ name ];\r\n            }\r\n        },\r\n\r\n        css: function( elem, name, extra, styles ) {\r\n            var num, val, hooks,\r\n                origName = jQuery.camelCase( name );\r\n\r\n            // Make sure that we're working with the right name\r\n            name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );\r\n\r\n            // gets hook for the prefixed version\r\n            // followed by the unprefixed version\r\n            hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\r\n\r\n            // If a hook was provided get the computed value from there\r\n            if ( hooks && \"get\" in hooks ) {\r\n                val = hooks.get( elem, true, extra );\r\n            }\r\n\r\n            // Otherwise, if a way to get the computed value exists, use that\r\n            if ( val === undefined ) {\r\n                val = curCSS( elem, name, styles );\r\n            }\r\n\r\n            //convert \"normal\" to computed value\r\n            if ( val === \"normal\" && name in cssNormalTransform ) {\r\n                val = cssNormalTransform[ name ];\r\n            }\r\n\r\n            // Return, converting to number if forced or a qualifier was provided and val looks numeric\r\n            if ( extra === \"\" || extra ) {\r\n                num = parseFloat( val );\r\n                return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;\r\n            }\r\n            return val;\r\n        }\r\n    });\r\n\r\n// NOTE: we've included the \"window\" in window.getComputedStyle\r\n// because jsdom on node.js will break without it.\r\n    if ( window.getComputedStyle ) {\r\n        getStyles = function( elem ) {\r\n            return window.getComputedStyle( elem, null );\r\n        };\r\n\r\n        curCSS = function( elem, name, _computed ) {\r\n            var width, minWidth, maxWidth,\r\n                computed = _computed || getStyles( elem ),\r\n\r\n            // getPropertyValue is only needed for .css('filter') in IE9, see #12537\r\n                ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined,\r\n                style = elem.style;\r\n\r\n            if ( computed ) {\r\n\r\n                if ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\r\n                    ret = jQuery.style( elem, name );\r\n                }\r\n\r\n                // A tribute to the \"awesome hack by Dean Edwards\"\r\n                // Chrome < 17 and Safari 5.0 uses \"computed value\" instead of \"used value\" for margin-right\r\n                // Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\r\n                // this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\r\n                if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\r\n\r\n                    // Remember the original values\r\n                    width = style.width;\r\n                    minWidth = style.minWidth;\r\n                    maxWidth = style.maxWidth;\r\n\r\n                    // Put in the new values to get a computed value out\r\n                    style.minWidth = style.maxWidth = style.width = ret;\r\n                    ret = computed.width;\r\n\r\n                    // Revert the changed values\r\n                    style.width = width;\r\n                    style.minWidth = minWidth;\r\n                    style.maxWidth = maxWidth;\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        };\r\n    } else if ( document.documentElement.currentStyle ) {\r\n        getStyles = function( elem ) {\r\n            return elem.currentStyle;\r\n        };\r\n\r\n        curCSS = function( elem, name, _computed ) {\r\n            var left, rs, rsLeft,\r\n                computed = _computed || getStyles( elem ),\r\n                ret = computed ? computed[ name ] : undefined,\r\n                style = elem.style;\r\n\r\n            // Avoid setting ret to empty string here\r\n            // so we don't default to auto\r\n            if ( ret == null && style && style[ name ] ) {\r\n                ret = style[ name ];\r\n            }\r\n\r\n            // From the awesome hack by Dean Edwards\r\n            // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\r\n\r\n            // If we're not dealing with a regular pixel number\r\n            // but a number that has a weird ending, we need to convert it to pixels\r\n            // but not position css attributes, as those are proportional to the parent element instead\r\n            // and we can't measure the parent instead because it might trigger a \"stacking dolls\" problem\r\n            if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {\r\n\r\n                // Remember the original values\r\n                left = style.left;\r\n                rs = elem.runtimeStyle;\r\n                rsLeft = rs && rs.left;\r\n\r\n                // Put in the new values to get a computed value out\r\n                if ( rsLeft ) {\r\n                    rs.left = elem.currentStyle.left;\r\n                }\r\n                style.left = name === \"fontSize\" ? \"1em\" : ret;\r\n                ret = style.pixelLeft + \"px\";\r\n\r\n                // Revert the changed values\r\n                style.left = left;\r\n                if ( rsLeft ) {\r\n                    rs.left = rsLeft;\r\n                }\r\n            }\r\n\r\n            return ret === \"\" ? \"auto\" : ret;\r\n        };\r\n    }\r\n\r\n    function setPositiveNumber( elem, value, subtract ) {\r\n        var matches = rnumsplit.exec( value );\r\n        return matches ?\r\n            // Guard against undefined \"subtract\", e.g., when used as in cssHooks\r\n            Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || \"px\" ) :\r\n            value;\r\n    }\r\n\r\n    function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\r\n        var i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\r\n                // If we already have the right measurement, avoid augmentation\r\n                4 :\r\n                // Otherwise initialize for horizontal or vertical properties\r\n                name === \"width\" ? 1 : 0,\r\n\r\n            val = 0;\r\n\r\n        for ( ; i < 4; i += 2 ) {\r\n            // both box models exclude margin, so add it if we want it\r\n            if ( extra === \"margin\" ) {\r\n                val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\r\n            }\r\n\r\n            if ( isBorderBox ) {\r\n                // border-box includes padding, so remove it if we want content\r\n                if ( extra === \"content\" ) {\r\n                    val -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\r\n                }\r\n\r\n                // at this point, extra isn't border nor margin, so remove border\r\n                if ( extra !== \"margin\" ) {\r\n                    val -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\r\n                }\r\n            } else {\r\n                // at this point, extra isn't content, so add padding\r\n                val += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\r\n\r\n                // at this point, extra isn't content nor padding, so add border\r\n                if ( extra !== \"padding\" ) {\r\n                    val += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\r\n                }\r\n            }\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    function getWidthOrHeight( elem, name, extra ) {\r\n\r\n        // Start with offset property, which is equivalent to the border-box value\r\n        var valueIsBorderBox = true,\r\n            val = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\r\n            styles = getStyles( elem ),\r\n            isBorderBox = jQuery.support.boxSizing && jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\r\n\r\n        // some non-html elements return undefined for offsetWidth, so check for null/undefined\r\n        // svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\r\n        // MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\r\n        if ( val <= 0 || val == null ) {\r\n            // Fall back to computed then uncomputed css if necessary\r\n            val = curCSS( elem, name, styles );\r\n            if ( val < 0 || val == null ) {\r\n                val = elem.style[ name ];\r\n            }\r\n\r\n            // Computed unit is not pixels. Stop here and return.\r\n            if ( rnumnonpx.test(val) ) {\r\n                return val;\r\n            }\r\n\r\n            // we need the check for style in case a browser which returns unreliable values\r\n            // for getComputedStyle silently falls back to the reliable elem.style\r\n            valueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );\r\n\r\n            // Normalize \"\", auto, and prepare for extra\r\n            val = parseFloat( val ) || 0;\r\n        }\r\n\r\n        // use the active box-sizing model to add/subtract irrelevant styles\r\n        return ( val +\r\n            augmentWidthOrHeight(\r\n                elem,\r\n                name,\r\n                extra || ( isBorderBox ? \"border\" : \"content\" ),\r\n                valueIsBorderBox,\r\n                styles\r\n            )\r\n            ) + \"px\";\r\n    }\r\n\r\n// Try to determine the default display value of an element\r\n    function css_defaultDisplay( nodeName ) {\r\n        var doc = document,\r\n            display = elemdisplay[ nodeName ];\r\n\r\n        if ( !display ) {\r\n            display = actualDisplay( nodeName, doc );\r\n\r\n            // If the simple way fails, read from inside an iframe\r\n            if ( display === \"none\" || !display ) {\r\n                // Use the already-created iframe if possible\r\n                iframe = ( iframe ||\r\n                    jQuery(\"<iframe frameborder='0' width='0' height='0'/>\")\r\n                        .css( \"cssText\", \"display:block !important\" )\r\n                    ).appendTo( doc.documentElement );\r\n\r\n                // Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\r\n                doc = ( iframe[0].contentWindow || iframe[0].contentDocument ).document;\r\n                doc.write(\"<!doctype html><html><body>\");\r\n                doc.close();\r\n\r\n                display = actualDisplay( nodeName, doc );\r\n                iframe.detach();\r\n            }\r\n\r\n            // Store the correct default display\r\n            elemdisplay[ nodeName ] = display;\r\n        }\r\n\r\n        return display;\r\n    }\r\n\r\n// Called ONLY from within css_defaultDisplay\r\n    function actualDisplay( name, doc ) {\r\n        var elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\r\n            display = jQuery.css( elem[0], \"display\" );\r\n        elem.remove();\r\n        return display;\r\n    }\r\n\r\n    jQuery.each([ \"height\", \"width\" ], function( i, name ) {\r\n        jQuery.cssHooks[ name ] = {\r\n            get: function( elem, computed, extra ) {\r\n                if ( computed ) {\r\n                    // certain elements can have dimension info if we invisibly show them\r\n                    // however, it must have a current display style that would benefit from this\r\n                    return elem.offsetWidth === 0 && rdisplayswap.test( jQuery.css( elem, \"display\" ) ) ?\r\n                        jQuery.swap( elem, cssShow, function() {\r\n                            return getWidthOrHeight( elem, name, extra );\r\n                        }) :\r\n                        getWidthOrHeight( elem, name, extra );\r\n                }\r\n            },\r\n\r\n            set: function( elem, value, extra ) {\r\n                var styles = extra && getStyles( elem );\r\n                return setPositiveNumber( elem, value, extra ?\r\n                    augmentWidthOrHeight(\r\n                        elem,\r\n                        name,\r\n                        extra,\r\n                        jQuery.support.boxSizing && jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\r\n                        styles\r\n                    ) : 0\r\n                );\r\n            }\r\n        };\r\n    });\r\n\r\n    if ( !jQuery.support.opacity ) {\r\n        jQuery.cssHooks.opacity = {\r\n            get: function( elem, computed ) {\r\n                // IE uses filters for opacity\r\n                return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || \"\" ) ?\r\n                    ( 0.01 * parseFloat( RegExp.$1 ) ) + \"\" :\r\n                    computed ? \"1\" : \"\";\r\n            },\r\n\r\n            set: function( elem, value ) {\r\n                var style = elem.style,\r\n                    currentStyle = elem.currentStyle,\r\n                    opacity = jQuery.isNumeric( value ) ? \"alpha(opacity=\" + value * 100 + \")\" : \"\",\r\n                    filter = currentStyle && currentStyle.filter || style.filter || \"\";\r\n\r\n                // IE has trouble with opacity if it does not have layout\r\n                // Force it by setting the zoom level\r\n                style.zoom = 1;\r\n\r\n                // if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652\r\n                // if value === \"\", then remove inline opacity #12685\r\n                if ( ( value >= 1 || value === \"\" ) &&\r\n                    jQuery.trim( filter.replace( ralpha, \"\" ) ) === \"\" &&\r\n                    style.removeAttribute ) {\r\n\r\n                    // Setting style.filter to null, \"\" & \" \" still leave \"filter:\" in the cssText\r\n                    // if \"filter:\" is present at all, clearType is disabled, we want to avoid this\r\n                    // style.removeAttribute is IE Only, but so apparently is this code path...\r\n                    style.removeAttribute( \"filter\" );\r\n\r\n                    // if there is no filter style applied in a css rule or unset inline opacity, we are done\r\n                    if ( value === \"\" || currentStyle && !currentStyle.filter ) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                // otherwise, set new filter values\r\n                style.filter = ralpha.test( filter ) ?\r\n                    filter.replace( ralpha, opacity ) :\r\n                    filter + \" \" + opacity;\r\n            }\r\n        };\r\n    }\r\n\r\n// These hooks cannot be added until DOM ready because the support test\r\n// for it is not run until after DOM ready\r\n    jQuery(function() {\r\n        if ( !jQuery.support.reliableMarginRight ) {\r\n            jQuery.cssHooks.marginRight = {\r\n                get: function( elem, computed ) {\r\n                    if ( computed ) {\r\n                        // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\r\n                        // Work around by temporarily setting element display to inline-block\r\n                        return jQuery.swap( elem, { \"display\": \"inline-block\" },\r\n                            curCSS, [ elem, \"marginRight\" ] );\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\r\n        // getComputedStyle returns percent when specified for top/left/bottom/right\r\n        // rather than make the css module depend on the offset module, we just check for it here\r\n        if ( !jQuery.support.pixelPosition && jQuery.fn.position ) {\r\n            jQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\r\n                jQuery.cssHooks[ prop ] = {\r\n                    get: function( elem, computed ) {\r\n                        if ( computed ) {\r\n                            computed = curCSS( elem, prop );\r\n                            // if curCSS returns percentage, fallback to offset\r\n                            return rnumnonpx.test( computed ) ?\r\n                                jQuery( elem ).position()[ prop ] + \"px\" :\r\n                                computed;\r\n                        }\r\n                    }\r\n                };\r\n            });\r\n        }\r\n\r\n    });\r\n\r\n    if ( jQuery.expr && jQuery.expr.filters ) {\r\n        jQuery.expr.filters.hidden = function( elem ) {\r\n            // Support: Opera <= 12.12\r\n            // Opera reports offsetWidths and offsetHeights less than zero on some elements\r\n            return elem.offsetWidth <= 0 && elem.offsetHeight <= 0 ||\r\n                (!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || jQuery.css( elem, \"display\" )) === \"none\");\r\n        };\r\n\r\n        jQuery.expr.filters.visible = function( elem ) {\r\n            return !jQuery.expr.filters.hidden( elem );\r\n        };\r\n    }\r\n\r\n// These hooks are used by animate to expand properties\r\n    jQuery.each({\r\n        margin: \"\",\r\n        padding: \"\",\r\n        border: \"Width\"\r\n    }, function( prefix, suffix ) {\r\n        jQuery.cssHooks[ prefix + suffix ] = {\r\n            expand: function( value ) {\r\n                var i = 0,\r\n                    expanded = {},\r\n\r\n                // assumes a single number if not a string\r\n                    parts = typeof value === \"string\" ? value.split(\" \") : [ value ];\r\n\r\n                for ( ; i < 4; i++ ) {\r\n                    expanded[ prefix + cssExpand[ i ] + suffix ] =\r\n                        parts[ i ] || parts[ i - 2 ] || parts[ 0 ];\r\n                }\r\n\r\n                return expanded;\r\n            }\r\n        };\r\n\r\n        if ( !rmargin.test( prefix ) ) {\r\n            jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\r\n        }\r\n    });\r\n    var r20 = /%20/g,\r\n        rbracket = /\\[\\]$/,\r\n        rCRLF = /\\r?\\n/g,\r\n        rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\r\n        rsubmittable = /^(?:input|select|textarea|keygen)/i;\r\n\r\n    jQuery.fn.extend({\r\n        serialize: function() {\r\n            return jQuery.param( this.serializeArray() );\r\n        },\r\n        serializeArray: function() {\r\n            return this.map(function(){\r\n                // Can add propHook for \"elements\" to filter or add form elements\r\n                var elements = jQuery.prop( this, \"elements\" );\r\n                return elements ? jQuery.makeArray( elements ) : this;\r\n            })\r\n                .filter(function(){\r\n                    var type = this.type;\r\n                    // Use .is(\":disabled\") so that fieldset[disabled] works\r\n                    return this.name && !jQuery( this ).is( \":disabled\" ) &&\r\n                        rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\r\n                        ( this.checked || !manipulation_rcheckableType.test( type ) );\r\n                })\r\n                .map(function( i, elem ){\r\n                    var val = jQuery( this ).val();\r\n\r\n                    return val == null ?\r\n                        null :\r\n                        jQuery.isArray( val ) ?\r\n                            jQuery.map( val, function( val ){\r\n                                return { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n                            }) :\r\n                        { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n                }).get();\r\n        }\r\n    });\r\n\r\n//Serialize an array of form elements or a set of\r\n//key/values into a query string\r\n    jQuery.param = function( a, traditional ) {\r\n        var prefix,\r\n            s = [],\r\n            add = function( key, value ) {\r\n                // If value is a function, invoke it and return its value\r\n                value = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\r\n                s[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\r\n            };\r\n\r\n        // Set traditional to true for jQuery <= 1.3.2 behavior.\r\n        if ( traditional === undefined ) {\r\n            traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\r\n        }\r\n\r\n        // If an array was passed in, assume that it is an array of form elements.\r\n        if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\r\n            // Serialize the form elements\r\n            jQuery.each( a, function() {\r\n                add( this.name, this.value );\r\n            });\r\n\r\n        } else {\r\n            // If traditional, encode the \"old\" way (the way 1.3.2 or older\r\n            // did it), otherwise encode params recursively.\r\n            for ( prefix in a ) {\r\n                buildParams( prefix, a[ prefix ], traditional, add );\r\n            }\r\n        }\r\n\r\n        // Return the resulting serialization\r\n        return s.join( \"&\" ).replace( r20, \"+\" );\r\n    };\r\n\r\n    function buildParams( prefix, obj, traditional, add ) {\r\n        var name;\r\n\r\n        if ( jQuery.isArray( obj ) ) {\r\n            // Serialize array item.\r\n            jQuery.each( obj, function( i, v ) {\r\n                if ( traditional || rbracket.test( prefix ) ) {\r\n                    // Treat each array item as a scalar.\r\n                    add( prefix, v );\r\n\r\n                } else {\r\n                    // Item is non-scalar (array or object), encode its numeric index.\r\n                    buildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, traditional, add );\r\n                }\r\n            });\r\n\r\n        } else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\r\n            // Serialize object item.\r\n            for ( name in obj ) {\r\n                buildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\r\n            }\r\n\r\n        } else {\r\n            // Serialize scalar item.\r\n            add( prefix, obj );\r\n        }\r\n    }\r\n    jQuery.each( (\"blur focus focusin focusout load resize scroll unload click dblclick \" +\r\n        \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\r\n        \"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function( i, name ) {\r\n\r\n        // Handle event binding\r\n        jQuery.fn[ name ] = function( data, fn ) {\r\n            return arguments.length > 0 ?\r\n                this.on( name, null, data, fn ) :\r\n                this.trigger( name );\r\n        };\r\n    });\r\n\r\n    jQuery.fn.extend({\r\n        hover: function( fnOver, fnOut ) {\r\n            return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\r\n        },\r\n\r\n        bind: function( types, data, fn ) {\r\n            return this.on( types, null, data, fn );\r\n        },\r\n        unbind: function( types, fn ) {\r\n            return this.off( types, null, fn );\r\n        },\r\n\r\n        delegate: function( selector, types, data, fn ) {\r\n            return this.on( types, selector, data, fn );\r\n        },\r\n        undelegate: function( selector, types, fn ) {\r\n            // ( namespace ) or ( selector, types [, fn] )\r\n            return arguments.length === 1 ? this.off( selector, \"**\" ) : this.off( types, selector || \"**\", fn );\r\n        }\r\n    });\r\n    var\r\n    // Document location\r\n        ajaxLocParts,\r\n        ajaxLocation,\r\n        ajax_nonce = jQuery.now(),\r\n\r\n        ajax_rquery = /\\?/,\r\n        rhash = /#.*$/,\r\n        rts = /([?&])_=[^&]*/,\r\n        rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg, // IE leaves an \\r character at EOL\r\n    // #7653, #8125, #8152: local protocol detection\r\n        rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\r\n        rnoContent = /^(?:GET|HEAD)$/,\r\n        rprotocol = /^\\/\\//,\r\n        rurl = /^([\\w.+-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,\r\n\r\n    // Keep a copy of the old load method\r\n        _load = jQuery.fn.load,\r\n\r\n    /* Prefilters\r\n     * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n     * 2) These are called:\r\n     *    - BEFORE asking for a transport\r\n     *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n     * 3) key is the dataType\r\n     * 4) the catchall symbol \"*\" can be used\r\n     * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n     */\r\n        prefilters = {},\r\n\r\n    /* Transports bindings\r\n     * 1) key is the dataType\r\n     * 2) the catchall symbol \"*\" can be used\r\n     * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n     */\r\n        transports = {},\r\n\r\n    // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\r\n        allTypes = \"*/\".concat(\"*\");\r\n\r\n// #8138, IE may throw an exception when accessing\r\n// a field from window.location if document.domain has been set\r\n    try {\r\n        ajaxLocation = location.href;\r\n    } catch( e ) {\r\n        // Use the href attribute of an A element\r\n        // since IE will modify it given document.location\r\n        ajaxLocation = document.createElement( \"a\" );\r\n        ajaxLocation.href = \"\";\r\n        ajaxLocation = ajaxLocation.href;\r\n    }\r\n\r\n// Segment location into parts\r\n    ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\r\n\r\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports( structure ) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function( dataTypeExpression, func ) {\r\n\r\n            if ( typeof dataTypeExpression !== \"string\" ) {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match( core_rnotwhite ) || [];\r\n\r\n            if ( jQuery.isFunction( func ) ) {\r\n                // For each dataType in the dataTypeExpression\r\n                while ( (dataType = dataTypes[i++]) ) {\r\n                    // Prepend if requested\r\n                    if ( dataType[0] === \"+\" ) {\r\n                        dataType = dataType.slice( 1 ) || \"*\";\r\n                        (structure[ dataType ] = structure[ dataType ] || []).unshift( func );\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[ dataType ] = structure[ dataType ] || []).push( func );\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n// Base inspection function for prefilters and transports\r\n    function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\r\n\r\n        var inspected = {},\r\n            seekingTransport = ( structure === transports );\r\n\r\n        function inspect( dataType ) {\r\n            var selected;\r\n            inspected[ dataType ] = true;\r\n            jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\r\n                var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\r\n                if( typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {\r\n                    options.dataTypes.unshift( dataTypeOrTransport );\r\n                    inspect( dataTypeOrTransport );\r\n                    return false;\r\n                } else if ( seekingTransport ) {\r\n                    return !( selected = dataTypeOrTransport );\r\n                }\r\n            });\r\n            return selected;\r\n        }\r\n\r\n        return inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\r\n    }\r\n\r\n// A special extend for ajax options\r\n// that takes \"flat\" options (not to be deep extended)\r\n// Fixes #9887\r\n    function ajaxExtend( target, src ) {\r\n        var deep, key,\r\n            flatOptions = jQuery.ajaxSettings.flatOptions || {};\r\n\r\n        for ( key in src ) {\r\n            if ( src[ key ] !== undefined ) {\r\n                ( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];\r\n            }\r\n        }\r\n        if ( deep ) {\r\n            jQuery.extend( true, target, deep );\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    jQuery.fn.load = function( url, params, callback ) {\r\n        if ( typeof url !== \"string\" && _load ) {\r\n            return _load.apply( this, arguments );\r\n        }\r\n\r\n        var selector, response, type,\r\n            self = this,\r\n            off = url.indexOf(\" \");\r\n\r\n        if ( off >= 0 ) {\r\n            selector = url.slice( off, url.length );\r\n            url = url.slice( 0, off );\r\n        }\r\n\r\n        // If it's a function\r\n        if ( jQuery.isFunction( params ) ) {\r\n\r\n            // We assume that it's the callback\r\n            callback = params;\r\n            params = undefined;\r\n\r\n            // Otherwise, build a param string\r\n        } else if ( params && typeof params === \"object\" ) {\r\n            type = \"POST\";\r\n        }\r\n\r\n        // If we have elements to modify, make the request\r\n        if ( self.length > 0 ) {\r\n            jQuery.ajax({\r\n                url: url,\r\n\r\n                // if \"type\" variable is undefined, then \"GET\" method will be used\r\n                type: type,\r\n                dataType: \"html\",\r\n                data: params\r\n            }).done(function( responseText ) {\r\n\r\n                    // Save response for use in complete callback\r\n                    response = arguments;\r\n\r\n                    self.html( selector ?\r\n\r\n                        // If a selector was specified, locate the right elements in a dummy div\r\n                        // Exclude scripts to avoid IE 'Permission Denied' errors\r\n                        jQuery(\"<div>\").append( jQuery.parseHTML( responseText ) ).find( selector ) :\r\n\r\n                        // Otherwise use the full result\r\n                        responseText );\r\n\r\n                }).complete( callback && function( jqXHR, status ) {\r\n                    self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );\r\n                });\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n// Attach a bunch of functions for handling common AJAX events\r\n    jQuery.each( [ \"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\" ], function( i, type ){\r\n        jQuery.fn[ type ] = function( fn ){\r\n            return this.on( type, fn );\r\n        };\r\n    });\r\n\r\n    jQuery.extend({\r\n\r\n        // Counter for holding the number of active queries\r\n        active: 0,\r\n\r\n        // Last-Modified header cache for next request\r\n        lastModified: {},\r\n        etag: {},\r\n\r\n        ajaxSettings: {\r\n            url: ajaxLocation,\r\n            type: \"GET\",\r\n            isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\r\n            global: true,\r\n            processData: true,\r\n            async: true,\r\n            contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n            /*\r\n             timeout: 0,\r\n             data: null,\r\n             dataType: null,\r\n             username: null,\r\n             password: null,\r\n             cache: null,\r\n             throws: false,\r\n             traditional: false,\r\n             headers: {},\r\n             */\r\n\r\n            accepts: {\r\n                \"*\": allTypes,\r\n                text: \"text/plain\",\r\n                html: \"text/html\",\r\n                xml: \"application/xml, text/xml\",\r\n                json: \"application/json, text/javascript\"\r\n            },\r\n\r\n            contents: {\r\n                xml: /xml/,\r\n                html: /html/,\r\n                json: /json/\r\n            },\r\n\r\n            responseFields: {\r\n                xml: \"responseXML\",\r\n                text: \"responseText\",\r\n                json: \"responseJSON\"\r\n            },\r\n\r\n            // Data converters\r\n            // Keys separate source (or catchall \"*\") and destination types with a single space\r\n            converters: {\r\n\r\n                // Convert anything to text\r\n                \"* text\": String,\r\n\r\n                // Text to html (true = no transformation)\r\n                \"text html\": true,\r\n\r\n                // Evaluate text as a json expression\r\n                \"text json\": jQuery.parseJSON,\r\n\r\n                // Parse text as xml\r\n                \"text xml\": jQuery.parseXML\r\n            },\r\n\r\n            // For options that shouldn't be deep extended:\r\n            // you can add your own custom options here if\r\n            // and when you create one that shouldn't be\r\n            // deep extended (see ajaxExtend)\r\n            flatOptions: {\r\n                url: true,\r\n                context: true\r\n            }\r\n        },\r\n\r\n        // Creates a full fledged settings object into target\r\n        // with both ajaxSettings and settings fields.\r\n        // If target is omitted, writes into ajaxSettings.\r\n        ajaxSetup: function( target, settings ) {\r\n            return settings ?\r\n\r\n                // Building a settings object\r\n                ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\r\n\r\n                // Extending ajaxSettings\r\n                ajaxExtend( jQuery.ajaxSettings, target );\r\n        },\r\n\r\n        ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\r\n        ajaxTransport: addToPrefiltersOrTransports( transports ),\r\n\r\n        // Main method\r\n        ajax: function( url, options ) {\r\n\r\n            // If url is an object, simulate pre-1.5 signature\r\n            if ( typeof url === \"object\" ) {\r\n                options = url;\r\n                url = undefined;\r\n            }\r\n\r\n            // Force options to be an object\r\n            options = options || {};\r\n\r\n            var // Cross-domain detection vars\r\n                parts,\r\n            // Loop variable\r\n                i,\r\n            // URL without anti-cache param\r\n                cacheURL,\r\n            // Response headers as string\r\n                responseHeadersString,\r\n            // timeout handle\r\n                timeoutTimer,\r\n\r\n            // To know if global events are to be dispatched\r\n                fireGlobals,\r\n\r\n                transport,\r\n            // Response headers\r\n                responseHeaders,\r\n            // Create the final options object\r\n                s = jQuery.ajaxSetup( {}, options ),\r\n            // Callbacks context\r\n                callbackContext = s.context || s,\r\n            // Context for global events is callbackContext if it is a DOM node or jQuery collection\r\n                globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?\r\n                    jQuery( callbackContext ) :\r\n                    jQuery.event,\r\n            // Deferreds\r\n                deferred = jQuery.Deferred(),\r\n                completeDeferred = jQuery.Callbacks(\"once memory\"),\r\n            // Status-dependent callbacks\r\n                statusCode = s.statusCode || {},\r\n            // Headers (they are sent all at once)\r\n                requestHeaders = {},\r\n                requestHeadersNames = {},\r\n            // The jqXHR state\r\n                state = 0,\r\n            // Default abort message\r\n                strAbort = \"canceled\",\r\n            // Fake xhr\r\n                jqXHR = {\r\n                    readyState: 0,\r\n\r\n                    // Builds headers hashtable if needed\r\n                    getResponseHeader: function( key ) {\r\n                        var match;\r\n                        if ( state === 2 ) {\r\n                            if ( !responseHeaders ) {\r\n                                responseHeaders = {};\r\n                                while ( (match = rheaders.exec( responseHeadersString )) ) {\r\n                                    responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\r\n                                }\r\n                            }\r\n                            match = responseHeaders[ key.toLowerCase() ];\r\n                        }\r\n                        return match == null ? null : match;\r\n                    },\r\n\r\n                    // Raw string\r\n                    getAllResponseHeaders: function() {\r\n                        return state === 2 ? responseHeadersString : null;\r\n                    },\r\n\r\n                    // Caches the header\r\n                    setRequestHeader: function( name, value ) {\r\n                        var lname = name.toLowerCase();\r\n                        if ( !state ) {\r\n                            name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\r\n                            requestHeaders[ name ] = value;\r\n                        }\r\n                        return this;\r\n                    },\r\n\r\n                    // Overrides response content-type header\r\n                    overrideMimeType: function( type ) {\r\n                        if ( !state ) {\r\n                            s.mimeType = type;\r\n                        }\r\n                        return this;\r\n                    },\r\n\r\n                    // Status-dependent callbacks\r\n                    statusCode: function( map ) {\r\n                        var code;\r\n                        if ( map ) {\r\n                            if ( state < 2 ) {\r\n                                for ( code in map ) {\r\n                                    // Lazy-add the new callback in a way that preserves old ones\r\n                                    statusCode[ code ] = [ statusCode[ code ], map[ code ] ];\r\n                                }\r\n                            } else {\r\n                                // Execute the appropriate callbacks\r\n                                jqXHR.always( map[ jqXHR.status ] );\r\n                            }\r\n                        }\r\n                        return this;\r\n                    },\r\n\r\n                    // Cancel the request\r\n                    abort: function( statusText ) {\r\n                        var finalText = statusText || strAbort;\r\n                        if ( transport ) {\r\n                            transport.abort( finalText );\r\n                        }\r\n                        done( 0, finalText );\r\n                        return this;\r\n                    }\r\n                };\r\n\r\n            // Attach deferreds\r\n            deferred.promise( jqXHR ).complete = completeDeferred.add;\r\n            jqXHR.success = jqXHR.done;\r\n            jqXHR.error = jqXHR.fail;\r\n\r\n            // Remove hash character (#7531: and string promotion)\r\n            // Add protocol if not provided (#5866: IE7 issue with protocol-less urls)\r\n            // Handle falsy url in the settings object (#10093: consistency with old signature)\r\n            // We also use the url parameter if available\r\n            s.url = ( ( url || s.url || ajaxLocation ) + \"\" ).replace( rhash, \"\" ).replace( rprotocol, ajaxLocParts[ 1 ] + \"//\" );\r\n\r\n            // Alias method option to type as per ticket #12004\r\n            s.type = options.method || options.type || s.method || s.type;\r\n\r\n            // Extract dataTypes list\r\n            s.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( core_rnotwhite ) || [\"\"];\r\n\r\n            // A cross-domain request is in order when we have a protocol:host:port mismatch\r\n            if ( s.crossDomain == null ) {\r\n                parts = rurl.exec( s.url.toLowerCase() );\r\n                s.crossDomain = !!( parts &&\r\n                    ( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||\r\n                        ( parts[ 3 ] || ( parts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) !==\r\n                            ( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) )\r\n                    );\r\n            }\r\n\r\n            // Convert data if not already a string\r\n            if ( s.data && s.processData && typeof s.data !== \"string\" ) {\r\n                s.data = jQuery.param( s.data, s.traditional );\r\n            }\r\n\r\n            // Apply prefilters\r\n            inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\r\n\r\n            // If request was aborted inside a prefilter, stop there\r\n            if ( state === 2 ) {\r\n                return jqXHR;\r\n            }\r\n\r\n            // We can fire global events as of now if asked to\r\n            fireGlobals = s.global;\r\n\r\n            // Watch for a new set of requests\r\n            if ( fireGlobals && jQuery.active++ === 0 ) {\r\n                jQuery.event.trigger(\"ajaxStart\");\r\n            }\r\n\r\n            // Uppercase the type\r\n            s.type = s.type.toUpperCase();\r\n\r\n            // Determine if request has content\r\n            s.hasContent = !rnoContent.test( s.type );\r\n\r\n            // Save the URL in case we're toying with the If-Modified-Since\r\n            // and/or If-None-Match header later on\r\n            cacheURL = s.url;\r\n\r\n            // More options handling for requests with no content\r\n            if ( !s.hasContent ) {\r\n\r\n                // If data is available, append data to url\r\n                if ( s.data ) {\r\n                    cacheURL = ( s.url += ( ajax_rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\r\n                    // #9682: remove data so that it's not used in an eventual retry\r\n                    delete s.data;\r\n                }\r\n\r\n                // Add anti-cache in url if needed\r\n                if ( s.cache === false ) {\r\n                    s.url = rts.test( cacheURL ) ?\r\n\r\n                        // If there is already a '_' parameter, set its value\r\n                        cacheURL.replace( rts, \"$1_=\" + ajax_nonce++ ) :\r\n\r\n                        // Otherwise add one to the end\r\n                        cacheURL + ( ajax_rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ajax_nonce++;\r\n                }\r\n            }\r\n\r\n            // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n            if ( s.ifModified ) {\r\n                if ( jQuery.lastModified[ cacheURL ] ) {\r\n                    jqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\r\n                }\r\n                if ( jQuery.etag[ cacheURL ] ) {\r\n                    jqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\r\n                }\r\n            }\r\n\r\n            // Set the correct header, if data is being sent\r\n            if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\r\n                jqXHR.setRequestHeader( \"Content-Type\", s.contentType );\r\n            }\r\n\r\n            // Set the Accepts header for the server, depending on the dataType\r\n            jqXHR.setRequestHeader(\r\n                \"Accept\",\r\n                s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\r\n                    s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\r\n                    s.accepts[ \"*\" ]\r\n            );\r\n\r\n            // Check for headers option\r\n            for ( i in s.headers ) {\r\n                jqXHR.setRequestHeader( i, s.headers[ i ] );\r\n            }\r\n\r\n            // Allow custom headers/mimetypes and early abort\r\n            if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\r\n                // Abort if not done already and return\r\n                return jqXHR.abort();\r\n            }\r\n\r\n            // aborting is no longer a cancellation\r\n            strAbort = \"abort\";\r\n\r\n            // Install callbacks on deferreds\r\n            for ( i in { success: 1, error: 1, complete: 1 } ) {\r\n                jqXHR[ i ]( s[ i ] );\r\n            }\r\n\r\n            // Get transport\r\n            transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\r\n\r\n            // If no transport, we auto-abort\r\n            if ( !transport ) {\r\n                done( -1, \"No Transport\" );\r\n            } else {\r\n                jqXHR.readyState = 1;\r\n\r\n                // Send global event\r\n                if ( fireGlobals ) {\r\n                    globalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\r\n                }\r\n                // Timeout\r\n                if ( s.async && s.timeout > 0 ) {\r\n                    timeoutTimer = setTimeout(function() {\r\n                        jqXHR.abort(\"timeout\");\r\n                    }, s.timeout );\r\n                }\r\n\r\n                try {\r\n                    state = 1;\r\n                    transport.send( requestHeaders, done );\r\n                } catch ( e ) {\r\n                    // Propagate exception as error if not done\r\n                    if ( state < 2 ) {\r\n                        done( -1, e );\r\n                        // Simply rethrow otherwise\r\n                    } else {\r\n                        throw e;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Callback for when everything is done\r\n            function done( status, nativeStatusText, responses, headers ) {\r\n                var isSuccess, success, error, response, modified,\r\n                    statusText = nativeStatusText;\r\n\r\n                // Called once\r\n                if ( state === 2 ) {\r\n                    return;\r\n                }\r\n\r\n                // State is \"done\" now\r\n                state = 2;\r\n\r\n                // Clear timeout if it exists\r\n                if ( timeoutTimer ) {\r\n                    clearTimeout( timeoutTimer );\r\n                }\r\n\r\n                // Dereference transport for early garbage collection\r\n                // (no matter how long the jqXHR object will be used)\r\n                transport = undefined;\r\n\r\n                // Cache response headers\r\n                responseHeadersString = headers || \"\";\r\n\r\n                // Set readyState\r\n                jqXHR.readyState = status > 0 ? 4 : 0;\r\n\r\n                // Determine if successful\r\n                isSuccess = status >= 200 && status < 300 || status === 304;\r\n\r\n                // Get response data\r\n                if ( responses ) {\r\n                    response = ajaxHandleResponses( s, jqXHR, responses );\r\n                }\r\n\r\n                // Convert no matter what (that way responseXXX fields are always set)\r\n                response = ajaxConvert( s, response, jqXHR, isSuccess );\r\n\r\n                // If successful, handle type chaining\r\n                if ( isSuccess ) {\r\n\r\n                    // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n                    if ( s.ifModified ) {\r\n                        modified = jqXHR.getResponseHeader(\"Last-Modified\");\r\n                        if ( modified ) {\r\n                            jQuery.lastModified[ cacheURL ] = modified;\r\n                        }\r\n                        modified = jqXHR.getResponseHeader(\"etag\");\r\n                        if ( modified ) {\r\n                            jQuery.etag[ cacheURL ] = modified;\r\n                        }\r\n                    }\r\n\r\n                    // if no content\r\n                    if ( status === 204 || s.type === \"HEAD\" ) {\r\n                        statusText = \"nocontent\";\r\n\r\n                        // if not modified\r\n                    } else if ( status === 304 ) {\r\n                        statusText = \"notmodified\";\r\n\r\n                        // If we have data, let's convert it\r\n                    } else {\r\n                        statusText = response.state;\r\n                        success = response.data;\r\n                        error = response.error;\r\n                        isSuccess = !error;\r\n                    }\r\n                } else {\r\n                    // We extract error from statusText\r\n                    // then normalize statusText and status for non-aborts\r\n                    error = statusText;\r\n                    if ( status || !statusText ) {\r\n                        statusText = \"error\";\r\n                        if ( status < 0 ) {\r\n                            status = 0;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Set data for the fake xhr object\r\n                jqXHR.status = status;\r\n                jqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\r\n\r\n                // Success/Error\r\n                if ( isSuccess ) {\r\n                    deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\r\n                } else {\r\n                    deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\r\n                }\r\n\r\n                // Status-dependent callbacks\r\n                jqXHR.statusCode( statusCode );\r\n                statusCode = undefined;\r\n\r\n                if ( fireGlobals ) {\r\n                    globalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\r\n                        [ jqXHR, s, isSuccess ? success : error ] );\r\n                }\r\n\r\n                // Complete\r\n                completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\r\n\r\n                if ( fireGlobals ) {\r\n                    globalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\r\n                    // Handle the global AJAX counter\r\n                    if ( !( --jQuery.active ) ) {\r\n                        jQuery.event.trigger(\"ajaxStop\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            return jqXHR;\r\n        },\r\n\r\n        getJSON: function( url, data, callback ) {\r\n            return jQuery.get( url, data, callback, \"json\" );\r\n        },\r\n\r\n        getScript: function( url, callback ) {\r\n            return jQuery.get( url, undefined, callback, \"script\" );\r\n        }\r\n    });\r\n\r\n    jQuery.each( [ \"get\", \"post\" ], function( i, method ) {\r\n        jQuery[ method ] = function( url, data, callback, type ) {\r\n            // shift arguments if data argument was omitted\r\n            if ( jQuery.isFunction( data ) ) {\r\n                type = type || callback;\r\n                callback = data;\r\n                data = undefined;\r\n            }\r\n\r\n            return jQuery.ajax({\r\n                url: url,\r\n                type: method,\r\n                dataType: type,\r\n                data: data,\r\n                success: callback\r\n            });\r\n        };\r\n    });\r\n\r\n    /* Handles responses to an ajax request:\r\n     * - finds the right dataType (mediates between content-type and expected dataType)\r\n     * - returns the corresponding response\r\n     */\r\n    function ajaxHandleResponses( s, jqXHR, responses ) {\r\n        var firstDataType, ct, finalDataType, type,\r\n            contents = s.contents,\r\n            dataTypes = s.dataTypes;\r\n\r\n        // Remove auto dataType and get content-type in the process\r\n        while( dataTypes[ 0 ] === \"*\" ) {\r\n            dataTypes.shift();\r\n            if ( ct === undefined ) {\r\n                ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\r\n            }\r\n        }\r\n\r\n        // Check if we're dealing with a known content-type\r\n        if ( ct ) {\r\n            for ( type in contents ) {\r\n                if ( contents[ type ] && contents[ type ].test( ct ) ) {\r\n                    dataTypes.unshift( type );\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check to see if we have a response for the expected dataType\r\n        if ( dataTypes[ 0 ] in responses ) {\r\n            finalDataType = dataTypes[ 0 ];\r\n        } else {\r\n            // Try convertible dataTypes\r\n            for ( type in responses ) {\r\n                if ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[0] ] ) {\r\n                    finalDataType = type;\r\n                    break;\r\n                }\r\n                if ( !firstDataType ) {\r\n                    firstDataType = type;\r\n                }\r\n            }\r\n            // Or just use first one\r\n            finalDataType = finalDataType || firstDataType;\r\n        }\r\n\r\n        // If we found a dataType\r\n        // We add the dataType to the list if needed\r\n        // and return the corresponding response\r\n        if ( finalDataType ) {\r\n            if ( finalDataType !== dataTypes[ 0 ] ) {\r\n                dataTypes.unshift( finalDataType );\r\n            }\r\n            return responses[ finalDataType ];\r\n        }\r\n    }\r\n\r\n    /* Chain conversions given the request and the original response\r\n     * Also sets the responseXXX fields on the jqXHR instance\r\n     */\r\n    function ajaxConvert( s, response, jqXHR, isSuccess ) {\r\n        var conv2, current, conv, tmp, prev,\r\n            converters = {},\r\n        // Work with a copy of dataTypes in case we need to modify it for conversion\r\n            dataTypes = s.dataTypes.slice();\r\n\r\n        // Create converters map with lowercased keys\r\n        if ( dataTypes[ 1 ] ) {\r\n            for ( conv in s.converters ) {\r\n                converters[ conv.toLowerCase() ] = s.converters[ conv ];\r\n            }\r\n        }\r\n\r\n        current = dataTypes.shift();\r\n\r\n        // Convert to each sequential dataType\r\n        while ( current ) {\r\n\r\n            if ( s.responseFields[ current ] ) {\r\n                jqXHR[ s.responseFields[ current ] ] = response;\r\n            }\r\n\r\n            // Apply the dataFilter if provided\r\n            if ( !prev && isSuccess && s.dataFilter ) {\r\n                response = s.dataFilter( response, s.dataType );\r\n            }\r\n\r\n            prev = current;\r\n            current = dataTypes.shift();\r\n\r\n            if ( current ) {\r\n\r\n                // There's only work to do if current dataType is non-auto\r\n                if ( current === \"*\" ) {\r\n\r\n                    current = prev;\r\n\r\n                    // Convert response if prev dataType is non-auto and differs from current\r\n                } else if ( prev !== \"*\" && prev !== current ) {\r\n\r\n                    // Seek a direct converter\r\n                    conv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\r\n\r\n                    // If none found, seek a pair\r\n                    if ( !conv ) {\r\n                        for ( conv2 in converters ) {\r\n\r\n                            // If conv2 outputs current\r\n                            tmp = conv2.split( \" \" );\r\n                            if ( tmp[ 1 ] === current ) {\r\n\r\n                                // If prev can be converted to accepted input\r\n                                conv = converters[ prev + \" \" + tmp[ 0 ] ] ||\r\n                                    converters[ \"* \" + tmp[ 0 ] ];\r\n                                if ( conv ) {\r\n                                    // Condense equivalence converters\r\n                                    if ( conv === true ) {\r\n                                        conv = converters[ conv2 ];\r\n\r\n                                        // Otherwise, insert the intermediate dataType\r\n                                    } else if ( converters[ conv2 ] !== true ) {\r\n                                        current = tmp[ 0 ];\r\n                                        dataTypes.unshift( tmp[ 1 ] );\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Apply converter (if not an equivalence)\r\n                    if ( conv !== true ) {\r\n\r\n                        // Unless errors are allowed to bubble, catch and return them\r\n                        if ( conv && s[ \"throws\" ] ) {\r\n                            response = conv( response );\r\n                        } else {\r\n                            try {\r\n                                response = conv( response );\r\n                            } catch ( e ) {\r\n                                return { state: \"parsererror\", error: conv ? e : \"No conversion from \" + prev + \" to \" + current };\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return { state: \"success\", data: response };\r\n    }\r\n// Install script dataType\r\n    jQuery.ajaxSetup({\r\n        accepts: {\r\n            script: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\r\n        },\r\n        contents: {\r\n            script: /(?:java|ecma)script/\r\n        },\r\n        converters: {\r\n            \"text script\": function( text ) {\r\n                jQuery.globalEval( text );\r\n                return text;\r\n            }\r\n        }\r\n    });\r\n\r\n// Handle cache's special case and global\r\n    jQuery.ajaxPrefilter( \"script\", function( s ) {\r\n        if ( s.cache === undefined ) {\r\n            s.cache = false;\r\n        }\r\n        if ( s.crossDomain ) {\r\n            s.type = \"GET\";\r\n            s.global = false;\r\n        }\r\n    });\r\n\r\n// Bind script tag hack transport\r\n    jQuery.ajaxTransport( \"script\", function(s) {\r\n\r\n        // This transport only deals with cross domain requests\r\n        if ( s.crossDomain ) {\r\n\r\n            var script,\r\n                head = document.head || jQuery(\"head\")[0] || document.documentElement;\r\n\r\n            return {\r\n\r\n                send: function( _, callback ) {\r\n\r\n                    script = document.createElement(\"script\");\r\n\r\n                    script.async = true;\r\n\r\n                    if ( s.scriptCharset ) {\r\n                        script.charset = s.scriptCharset;\r\n                    }\r\n\r\n                    script.src = s.url;\r\n\r\n                    // Attach handlers for all browsers\r\n                    script.onload = script.onreadystatechange = function( _, isAbort ) {\r\n\r\n                        if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {\r\n\r\n                            // Handle memory leak in IE\r\n                            script.onload = script.onreadystatechange = null;\r\n\r\n                            // Remove the script\r\n                            if ( script.parentNode ) {\r\n                                script.parentNode.removeChild( script );\r\n                            }\r\n\r\n                            // Dereference the script\r\n                            script = null;\r\n\r\n                            // Callback if not abort\r\n                            if ( !isAbort ) {\r\n                                callback( 200, \"success\" );\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    // Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending\r\n                    // Use native DOM manipulation to avoid our domManip AJAX trickery\r\n                    head.insertBefore( script, head.firstChild );\r\n                },\r\n\r\n                abort: function() {\r\n                    if ( script ) {\r\n                        script.onload( undefined, true );\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    });\r\n    var oldCallbacks = [],\r\n        rjsonp = /(=)\\?(?=&|$)|\\?\\?/;\r\n\r\n// Default jsonp settings\r\n    jQuery.ajaxSetup({\r\n        jsonp: \"callback\",\r\n        jsonpCallback: function() {\r\n            var callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( ajax_nonce++ ) );\r\n            this[ callback ] = true;\r\n            return callback;\r\n        }\r\n    });\r\n\r\n// Detect, normalize options and install callbacks for jsonp requests\r\n    jQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\r\n\r\n        var callbackName, overwritten, responseContainer,\r\n            jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\r\n                \"url\" :\r\n                typeof s.data === \"string\" && !( s.contentType || \"\" ).indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test( s.data ) && \"data\"\r\n                );\r\n\r\n        // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\r\n        if ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\r\n\r\n            // Get callback name, remembering preexisting value associated with it\r\n            callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\r\n                s.jsonpCallback() :\r\n                s.jsonpCallback;\r\n\r\n            // Insert callback into url or form data\r\n            if ( jsonProp ) {\r\n                s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\r\n            } else if ( s.jsonp !== false ) {\r\n                s.url += ( ajax_rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\r\n            }\r\n\r\n            // Use data converter to retrieve json after script execution\r\n            s.converters[\"script json\"] = function() {\r\n                if ( !responseContainer ) {\r\n                    jQuery.error( callbackName + \" was not called\" );\r\n                }\r\n                return responseContainer[ 0 ];\r\n            };\r\n\r\n            // force json dataType\r\n            s.dataTypes[ 0 ] = \"json\";\r\n\r\n            // Install callback\r\n            overwritten = window[ callbackName ];\r\n            window[ callbackName ] = function() {\r\n                responseContainer = arguments;\r\n            };\r\n\r\n            // Clean-up function (fires after converters)\r\n            jqXHR.always(function() {\r\n                // Restore preexisting value\r\n                window[ callbackName ] = overwritten;\r\n\r\n                // Save back as free\r\n                if ( s[ callbackName ] ) {\r\n                    // make sure that re-using the options doesn't screw things around\r\n                    s.jsonpCallback = originalSettings.jsonpCallback;\r\n\r\n                    // save the callback name for future use\r\n                    oldCallbacks.push( callbackName );\r\n                }\r\n\r\n                // Call if it was a function and we have a response\r\n                if ( responseContainer && jQuery.isFunction( overwritten ) ) {\r\n                    overwritten( responseContainer[ 0 ] );\r\n                }\r\n\r\n                responseContainer = overwritten = undefined;\r\n            });\r\n\r\n            // Delegate to script\r\n            return \"script\";\r\n        }\r\n    });\r\n    var xhrCallbacks, xhrSupported,\r\n        xhrId = 0,\r\n    // #5280: Internet Explorer will keep connections alive if we don't abort on unload\r\n        xhrOnUnloadAbort = window.ActiveXObject && function() {\r\n            // Abort all pending requests\r\n            var key;\r\n            for ( key in xhrCallbacks ) {\r\n                xhrCallbacks[ key ]( undefined, true );\r\n            }\r\n        };\r\n\r\n// Functions to create xhrs\r\n    function createStandardXHR() {\r\n        try {\r\n            return new window.XMLHttpRequest();\r\n        } catch( e ) {}\r\n    }\r\n\r\n    function createActiveXHR() {\r\n        try {\r\n            return new window.ActiveXObject(\"Microsoft.XMLHTTP\");\r\n        } catch( e ) {}\r\n    }\r\n\r\n// Create the request object\r\n// (This is still attached to ajaxSettings for backward compatibility)\r\n    jQuery.ajaxSettings.xhr = window.ActiveXObject ?\r\n        /* Microsoft failed to properly\r\n         * implement the XMLHttpRequest in IE7 (can't request local files),\r\n         * so we use the ActiveXObject when it is available\r\n         * Additionally XMLHttpRequest can be disabled in IE7/IE8 so\r\n         * we need a fallback.\r\n         */\r\n        function() {\r\n            return !this.isLocal && createStandardXHR() || createActiveXHR();\r\n        } :\r\n        // For all other browsers, use the standard XMLHttpRequest object\r\n        createStandardXHR;\r\n\r\n// Determine support properties\r\n    xhrSupported = jQuery.ajaxSettings.xhr();\r\n    jQuery.support.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\r\n    xhrSupported = jQuery.support.ajax = !!xhrSupported;\r\n\r\n// Create transport if the browser can provide an xhr\r\n    if ( xhrSupported ) {\r\n\r\n        jQuery.ajaxTransport(function( s ) {\r\n            // Cross domain only allowed if supported through XMLHttpRequest\r\n            if ( !s.crossDomain || jQuery.support.cors ) {\r\n\r\n                var callback;\r\n\r\n                return {\r\n                    send: function( headers, complete ) {\r\n\r\n                        // Get a new xhr\r\n                        var handle, i,\r\n                            xhr = s.xhr();\r\n\r\n                        // Open the socket\r\n                        // Passing null username, generates a login popup on Opera (#2865)\r\n                        if ( s.username ) {\r\n                            xhr.open( s.type, s.url, s.async, s.username, s.password );\r\n                        } else {\r\n                            xhr.open( s.type, s.url, s.async );\r\n                        }\r\n\r\n                        // Apply custom fields if provided\r\n                        if ( s.xhrFields ) {\r\n                            for ( i in s.xhrFields ) {\r\n                                xhr[ i ] = s.xhrFields[ i ];\r\n                            }\r\n                        }\r\n\r\n                        // Override mime type if needed\r\n                        if ( s.mimeType && xhr.overrideMimeType ) {\r\n                            xhr.overrideMimeType( s.mimeType );\r\n                        }\r\n\r\n                        // X-Requested-With header\r\n                        // For cross-domain requests, seeing as conditions for a preflight are\r\n                        // akin to a jigsaw puzzle, we simply never set it to be sure.\r\n                        // (it can always be set on a per-request basis or even using ajaxSetup)\r\n                        // For same-domain requests, won't change header if already provided.\r\n                        if ( !s.crossDomain && !headers[\"X-Requested-With\"] ) {\r\n                            headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\r\n                        }\r\n\r\n                        // Need an extra try/catch for cross domain requests in Firefox 3\r\n                        try {\r\n                            for ( i in headers ) {\r\n                                xhr.setRequestHeader( i, headers[ i ] );\r\n                            }\r\n                        } catch( err ) {}\r\n\r\n                        // Do send the request\r\n                        // This may raise an exception which is actually\r\n                        // handled in jQuery.ajax (so no try/catch here)\r\n                        xhr.send( ( s.hasContent && s.data ) || null );\r\n\r\n                        // Listener\r\n                        callback = function( _, isAbort ) {\r\n                            var status, responseHeaders, statusText, responses;\r\n\r\n                            // Firefox throws exceptions when accessing properties\r\n                            // of an xhr when a network error occurred\r\n                            // http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)\r\n                            try {\r\n\r\n                                // Was never called and is aborted or complete\r\n                                if ( callback && ( isAbort || xhr.readyState === 4 ) ) {\r\n\r\n                                    // Only called once\r\n                                    callback = undefined;\r\n\r\n                                    // Do not keep as active anymore\r\n                                    if ( handle ) {\r\n                                        xhr.onreadystatechange = jQuery.noop;\r\n                                        if ( xhrOnUnloadAbort ) {\r\n                                            delete xhrCallbacks[ handle ];\r\n                                        }\r\n                                    }\r\n\r\n                                    // If it's an abort\r\n                                    if ( isAbort ) {\r\n                                        // Abort it manually if needed\r\n                                        if ( xhr.readyState !== 4 ) {\r\n                                            xhr.abort();\r\n                                        }\r\n                                    } else {\r\n                                        responses = {};\r\n                                        status = xhr.status;\r\n                                        responseHeaders = xhr.getAllResponseHeaders();\r\n\r\n                                        // When requesting binary data, IE6-9 will throw an exception\r\n                                        // on any attempt to access responseText (#11426)\r\n                                        if ( typeof xhr.responseText === \"string\" ) {\r\n                                            responses.text = xhr.responseText;\r\n                                        }\r\n\r\n                                        // Firefox throws an exception when accessing\r\n                                        // statusText for faulty cross-domain requests\r\n                                        try {\r\n                                            statusText = xhr.statusText;\r\n                                        } catch( e ) {\r\n                                            // We normalize with Webkit giving an empty statusText\r\n                                            statusText = \"\";\r\n                                        }\r\n\r\n                                        // Filter status for non standard behaviors\r\n\r\n                                        // If the request is local and we have data: assume a success\r\n                                        // (success with no data won't get notified, that's the best we\r\n                                        // can do given current implementations)\r\n                                        if ( !status && s.isLocal && !s.crossDomain ) {\r\n                                            status = responses.text ? 200 : 404;\r\n                                            // IE - #1450: sometimes returns 1223 when it should be 204\r\n                                        } else if ( status === 1223 ) {\r\n                                            status = 204;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } catch( firefoxAccessException ) {\r\n                                if ( !isAbort ) {\r\n                                    complete( -1, firefoxAccessException );\r\n                                }\r\n                            }\r\n\r\n                            // Call complete if needed\r\n                            if ( responses ) {\r\n                                complete( status, statusText, responses, responseHeaders );\r\n                            }\r\n                        };\r\n\r\n                        if ( !s.async ) {\r\n                            // if we're in sync mode we fire the callback\r\n                            callback();\r\n                        } else if ( xhr.readyState === 4 ) {\r\n                            // (IE6 & IE7) if it's in cache and has been\r\n                            // retrieved directly we need to fire the callback\r\n                            setTimeout( callback );\r\n                        } else {\r\n                            handle = ++xhrId;\r\n                            if ( xhrOnUnloadAbort ) {\r\n                                // Create the active xhrs callbacks list if needed\r\n                                // and attach the unload handler\r\n                                if ( !xhrCallbacks ) {\r\n                                    xhrCallbacks = {};\r\n                                    jQuery( window ).unload( xhrOnUnloadAbort );\r\n                                }\r\n                                // Add to list of active xhrs callbacks\r\n                                xhrCallbacks[ handle ] = callback;\r\n                            }\r\n                            xhr.onreadystatechange = callback;\r\n                        }\r\n                    },\r\n\r\n                    abort: function() {\r\n                        if ( callback ) {\r\n                            callback( undefined, true );\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        });\r\n    }\r\n    var fxNow, timerId,\r\n        rfxtypes = /^(?:toggle|show|hide)$/,\r\n        rfxnum = new RegExp( \"^(?:([+-])=|)(\" + core_pnum + \")([a-z%]*)$\", \"i\" ),\r\n        rrun = /queueHooks$/,\r\n        animationPrefilters = [ defaultPrefilter ],\r\n        tweeners = {\r\n            \"*\": [function( prop, value ) {\r\n                var tween = this.createTween( prop, value ),\r\n                    target = tween.cur(),\r\n                    parts = rfxnum.exec( value ),\r\n                    unit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\r\n\r\n                // Starting value computation is required for potential unit mismatches\r\n                    start = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +target ) &&\r\n                        rfxnum.exec( jQuery.css( tween.elem, prop ) ),\r\n                    scale = 1,\r\n                    maxIterations = 20;\r\n\r\n                if ( start && start[ 3 ] !== unit ) {\r\n                    // Trust units reported by jQuery.css\r\n                    unit = unit || start[ 3 ];\r\n\r\n                    // Make sure we update the tween properties later on\r\n                    parts = parts || [];\r\n\r\n                    // Iteratively approximate from a nonzero starting point\r\n                    start = +target || 1;\r\n\r\n                    do {\r\n                        // If previous iteration zeroed out, double until we get *something*\r\n                        // Use a string for doubling factor so we don't accidentally see scale as unchanged below\r\n                        scale = scale || \".5\";\r\n\r\n                        // Adjust and apply\r\n                        start = start / scale;\r\n                        jQuery.style( tween.elem, prop, start + unit );\r\n\r\n                        // Update scale, tolerating zero or NaN from tween.cur()\r\n                        // And breaking the loop if scale is unchanged or perfect, or if we've just had enough\r\n                    } while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );\r\n                }\r\n\r\n                // Update tween properties\r\n                if ( parts ) {\r\n                    start = tween.start = +start || +target || 0;\r\n                    tween.unit = unit;\r\n                    // If a +=/-= token was provided, we're doing a relative animation\r\n                    tween.end = parts[ 1 ] ?\r\n                        start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :\r\n                        +parts[ 2 ];\r\n                }\r\n\r\n                return tween;\r\n            }]\r\n        };\r\n\r\n// Animations created synchronously will run synchronously\r\n    function createFxNow() {\r\n        setTimeout(function() {\r\n            fxNow = undefined;\r\n        });\r\n        return ( fxNow = jQuery.now() );\r\n    }\r\n\r\n    function createTween( value, prop, animation ) {\r\n        var tween,\r\n            collection = ( tweeners[ prop ] || [] ).concat( tweeners[ \"*\" ] ),\r\n            index = 0,\r\n            length = collection.length;\r\n        for ( ; index < length; index++ ) {\r\n            if ( (tween = collection[ index ].call( animation, prop, value )) ) {\r\n\r\n                // we're done with this property\r\n                return tween;\r\n            }\r\n        }\r\n    }\r\n\r\n    function Animation( elem, properties, options ) {\r\n        var result,\r\n            stopped,\r\n            index = 0,\r\n            length = animationPrefilters.length,\r\n            deferred = jQuery.Deferred().always( function() {\r\n                // don't match elem in the :animated selector\r\n                delete tick.elem;\r\n            }),\r\n            tick = function() {\r\n                if ( stopped ) {\r\n                    return false;\r\n                }\r\n                var currentTime = fxNow || createFxNow(),\r\n                    remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\r\n                // archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)\r\n                    temp = remaining / animation.duration || 0,\r\n                    percent = 1 - temp,\r\n                    index = 0,\r\n                    length = animation.tweens.length;\r\n\r\n                for ( ; index < length ; index++ ) {\r\n                    animation.tweens[ index ].run( percent );\r\n                }\r\n\r\n                deferred.notifyWith( elem, [ animation, percent, remaining ]);\r\n\r\n                if ( percent < 1 && length ) {\r\n                    return remaining;\r\n                } else {\r\n                    deferred.resolveWith( elem, [ animation ] );\r\n                    return false;\r\n                }\r\n            },\r\n            animation = deferred.promise({\r\n                elem: elem,\r\n                props: jQuery.extend( {}, properties ),\r\n                opts: jQuery.extend( true, { specialEasing: {} }, options ),\r\n                originalProperties: properties,\r\n                originalOptions: options,\r\n                startTime: fxNow || createFxNow(),\r\n                duration: options.duration,\r\n                tweens: [],\r\n                createTween: function( prop, end ) {\r\n                    var tween = jQuery.Tween( elem, animation.opts, prop, end,\r\n                        animation.opts.specialEasing[ prop ] || animation.opts.easing );\r\n                    animation.tweens.push( tween );\r\n                    return tween;\r\n                },\r\n                stop: function( gotoEnd ) {\r\n                    var index = 0,\r\n                    // if we are going to the end, we want to run all the tweens\r\n                    // otherwise we skip this part\r\n                        length = gotoEnd ? animation.tweens.length : 0;\r\n                    if ( stopped ) {\r\n                        return this;\r\n                    }\r\n                    stopped = true;\r\n                    for ( ; index < length ; index++ ) {\r\n                        animation.tweens[ index ].run( 1 );\r\n                    }\r\n\r\n                    // resolve when we played the last frame\r\n                    // otherwise, reject\r\n                    if ( gotoEnd ) {\r\n                        deferred.resolveWith( elem, [ animation, gotoEnd ] );\r\n                    } else {\r\n                        deferred.rejectWith( elem, [ animation, gotoEnd ] );\r\n                    }\r\n                    return this;\r\n                }\r\n            }),\r\n            props = animation.props;\r\n\r\n        propFilter( props, animation.opts.specialEasing );\r\n\r\n        for ( ; index < length ; index++ ) {\r\n            result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );\r\n            if ( result ) {\r\n                return result;\r\n            }\r\n        }\r\n\r\n        jQuery.map( props, createTween, animation );\r\n\r\n        if ( jQuery.isFunction( animation.opts.start ) ) {\r\n            animation.opts.start.call( elem, animation );\r\n        }\r\n\r\n        jQuery.fx.timer(\r\n            jQuery.extend( tick, {\r\n                elem: elem,\r\n                anim: animation,\r\n                queue: animation.opts.queue\r\n            })\r\n        );\r\n\r\n        // attach callbacks from options\r\n        return animation.progress( animation.opts.progress )\r\n            .done( animation.opts.done, animation.opts.complete )\r\n            .fail( animation.opts.fail )\r\n            .always( animation.opts.always );\r\n    }\r\n\r\n    function propFilter( props, specialEasing ) {\r\n        var index, name, easing, value, hooks;\r\n\r\n        // camelCase, specialEasing and expand cssHook pass\r\n        for ( index in props ) {\r\n            name = jQuery.camelCase( index );\r\n            easing = specialEasing[ name ];\r\n            value = props[ index ];\r\n            if ( jQuery.isArray( value ) ) {\r\n                easing = value[ 1 ];\r\n                value = props[ index ] = value[ 0 ];\r\n            }\r\n\r\n            if ( index !== name ) {\r\n                props[ name ] = value;\r\n                delete props[ index ];\r\n            }\r\n\r\n            hooks = jQuery.cssHooks[ name ];\r\n            if ( hooks && \"expand\" in hooks ) {\r\n                value = hooks.expand( value );\r\n                delete props[ name ];\r\n\r\n                // not quite $.extend, this wont overwrite keys already present.\r\n                // also - reusing 'index' from above because we have the correct \"name\"\r\n                for ( index in value ) {\r\n                    if ( !( index in props ) ) {\r\n                        props[ index ] = value[ index ];\r\n                        specialEasing[ index ] = easing;\r\n                    }\r\n                }\r\n            } else {\r\n                specialEasing[ name ] = easing;\r\n            }\r\n        }\r\n    }\r\n\r\n    jQuery.Animation = jQuery.extend( Animation, {\r\n\r\n        tweener: function( props, callback ) {\r\n            if ( jQuery.isFunction( props ) ) {\r\n                callback = props;\r\n                props = [ \"*\" ];\r\n            } else {\r\n                props = props.split(\" \");\r\n            }\r\n\r\n            var prop,\r\n                index = 0,\r\n                length = props.length;\r\n\r\n            for ( ; index < length ; index++ ) {\r\n                prop = props[ index ];\r\n                tweeners[ prop ] = tweeners[ prop ] || [];\r\n                tweeners[ prop ].unshift( callback );\r\n            }\r\n        },\r\n\r\n        prefilter: function( callback, prepend ) {\r\n            if ( prepend ) {\r\n                animationPrefilters.unshift( callback );\r\n            } else {\r\n                animationPrefilters.push( callback );\r\n            }\r\n        }\r\n    });\r\n\r\n    function defaultPrefilter( elem, props, opts ) {\r\n        /* jshint validthis: true */\r\n        var prop, value, toggle, tween, hooks, oldfire,\r\n            anim = this,\r\n            orig = {},\r\n            style = elem.style,\r\n            hidden = elem.nodeType && isHidden( elem ),\r\n            dataShow = jQuery._data( elem, \"fxshow\" );\r\n\r\n        // handle queue: false promises\r\n        if ( !opts.queue ) {\r\n            hooks = jQuery._queueHooks( elem, \"fx\" );\r\n            if ( hooks.unqueued == null ) {\r\n                hooks.unqueued = 0;\r\n                oldfire = hooks.empty.fire;\r\n                hooks.empty.fire = function() {\r\n                    if ( !hooks.unqueued ) {\r\n                        oldfire();\r\n                    }\r\n                };\r\n            }\r\n            hooks.unqueued++;\r\n\r\n            anim.always(function() {\r\n                // doing this makes sure that the complete handler will be called\r\n                // before this completes\r\n                anim.always(function() {\r\n                    hooks.unqueued--;\r\n                    if ( !jQuery.queue( elem, \"fx\" ).length ) {\r\n                        hooks.empty.fire();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        // height/width overflow pass\r\n        if ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\r\n            // Make sure that nothing sneaks out\r\n            // Record all 3 overflow attributes because IE does not\r\n            // change the overflow attribute when overflowX and\r\n            // overflowY are set to the same value\r\n            opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\r\n\r\n            // Set display property to inline-block for height/width\r\n            // animations on inline elements that are having width/height animated\r\n            if ( jQuery.css( elem, \"display\" ) === \"inline\" &&\r\n                jQuery.css( elem, \"float\" ) === \"none\" ) {\r\n\r\n                // inline-level elements accept inline-block;\r\n                // block-level elements need to be inline with layout\r\n                if ( !jQuery.support.inlineBlockNeedsLayout || css_defaultDisplay( elem.nodeName ) === \"inline\" ) {\r\n                    style.display = \"inline-block\";\r\n\r\n                } else {\r\n                    style.zoom = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if ( opts.overflow ) {\r\n            style.overflow = \"hidden\";\r\n            if ( !jQuery.support.shrinkWrapBlocks ) {\r\n                anim.always(function() {\r\n                    style.overflow = opts.overflow[ 0 ];\r\n                    style.overflowX = opts.overflow[ 1 ];\r\n                    style.overflowY = opts.overflow[ 2 ];\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        // show/hide pass\r\n        for ( prop in props ) {\r\n            value = props[ prop ];\r\n            if ( rfxtypes.exec( value ) ) {\r\n                delete props[ prop ];\r\n                toggle = toggle || value === \"toggle\";\r\n                if ( value === ( hidden ? \"hide\" : \"show\" ) ) {\r\n                    continue;\r\n                }\r\n                orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\r\n            }\r\n        }\r\n\r\n        if ( !jQuery.isEmptyObject( orig ) ) {\r\n            if ( dataShow ) {\r\n                if ( \"hidden\" in dataShow ) {\r\n                    hidden = dataShow.hidden;\r\n                }\r\n            } else {\r\n                dataShow = jQuery._data( elem, \"fxshow\", {} );\r\n            }\r\n\r\n            // store state if its toggle - enables .stop().toggle() to \"reverse\"\r\n            if ( toggle ) {\r\n                dataShow.hidden = !hidden;\r\n            }\r\n            if ( hidden ) {\r\n                jQuery( elem ).show();\r\n            } else {\r\n                anim.done(function() {\r\n                    jQuery( elem ).hide();\r\n                });\r\n            }\r\n            anim.done(function() {\r\n                var prop;\r\n                jQuery._removeData( elem, \"fxshow\" );\r\n                for ( prop in orig ) {\r\n                    jQuery.style( elem, prop, orig[ prop ] );\r\n                }\r\n            });\r\n            for ( prop in orig ) {\r\n                tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\r\n\r\n                if ( !( prop in dataShow ) ) {\r\n                    dataShow[ prop ] = tween.start;\r\n                    if ( hidden ) {\r\n                        tween.end = tween.start;\r\n                        tween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function Tween( elem, options, prop, end, easing ) {\r\n        return new Tween.prototype.init( elem, options, prop, end, easing );\r\n    }\r\n    jQuery.Tween = Tween;\r\n\r\n    Tween.prototype = {\r\n        constructor: Tween,\r\n        init: function( elem, options, prop, end, easing, unit ) {\r\n            this.elem = elem;\r\n            this.prop = prop;\r\n            this.easing = easing || \"swing\";\r\n            this.options = options;\r\n            this.start = this.now = this.cur();\r\n            this.end = end;\r\n            this.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\r\n        },\r\n        cur: function() {\r\n            var hooks = Tween.propHooks[ this.prop ];\r\n\r\n            return hooks && hooks.get ?\r\n                hooks.get( this ) :\r\n                Tween.propHooks._default.get( this );\r\n        },\r\n        run: function( percent ) {\r\n            var eased,\r\n                hooks = Tween.propHooks[ this.prop ];\r\n\r\n            if ( this.options.duration ) {\r\n                this.pos = eased = jQuery.easing[ this.easing ](\r\n                    percent, this.options.duration * percent, 0, 1, this.options.duration\r\n                );\r\n            } else {\r\n                this.pos = eased = percent;\r\n            }\r\n            this.now = ( this.end - this.start ) * eased + this.start;\r\n\r\n            if ( this.options.step ) {\r\n                this.options.step.call( this.elem, this.now, this );\r\n            }\r\n\r\n            if ( hooks && hooks.set ) {\r\n                hooks.set( this );\r\n            } else {\r\n                Tween.propHooks._default.set( this );\r\n            }\r\n            return this;\r\n        }\r\n    };\r\n\r\n    Tween.prototype.init.prototype = Tween.prototype;\r\n\r\n    Tween.propHooks = {\r\n        _default: {\r\n            get: function( tween ) {\r\n                var result;\r\n\r\n                if ( tween.elem[ tween.prop ] != null &&\r\n                    (!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {\r\n                    return tween.elem[ tween.prop ];\r\n                }\r\n\r\n                // passing an empty string as a 3rd parameter to .css will automatically\r\n                // attempt a parseFloat and fallback to a string if the parse fails\r\n                // so, simple values such as \"10px\" are parsed to Float.\r\n                // complex values such as \"rotate(1rad)\" are returned as is.\r\n                result = jQuery.css( tween.elem, tween.prop, \"\" );\r\n                // Empty strings, null, undefined and \"auto\" are converted to 0.\r\n                return !result || result === \"auto\" ? 0 : result;\r\n            },\r\n            set: function( tween ) {\r\n                // use step hook for back compat - use cssHook if its there - use .style if its\r\n                // available and use plain properties where available\r\n                if ( jQuery.fx.step[ tween.prop ] ) {\r\n                    jQuery.fx.step[ tween.prop ]( tween );\r\n                } else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {\r\n                    jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\r\n                } else {\r\n                    tween.elem[ tween.prop ] = tween.now;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n// Support: IE <=9\r\n// Panic based approach to setting things on disconnected nodes\r\n\r\n    Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\r\n        set: function( tween ) {\r\n            if ( tween.elem.nodeType && tween.elem.parentNode ) {\r\n                tween.elem[ tween.prop ] = tween.now;\r\n            }\r\n        }\r\n    };\r\n\r\n    jQuery.each([ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\r\n        var cssFn = jQuery.fn[ name ];\r\n        jQuery.fn[ name ] = function( speed, easing, callback ) {\r\n            return speed == null || typeof speed === \"boolean\" ?\r\n                cssFn.apply( this, arguments ) :\r\n                this.animate( genFx( name, true ), speed, easing, callback );\r\n        };\r\n    });\r\n\r\n    jQuery.fn.extend({\r\n        fadeTo: function( speed, to, easing, callback ) {\r\n\r\n            // show any hidden elements after setting opacity to 0\r\n            return this.filter( isHidden ).css( \"opacity\", 0 ).show()\r\n\r\n                // animate to the value specified\r\n                .end().animate({ opacity: to }, speed, easing, callback );\r\n        },\r\n        animate: function( prop, speed, easing, callback ) {\r\n            var empty = jQuery.isEmptyObject( prop ),\r\n                optall = jQuery.speed( speed, easing, callback ),\r\n                doAnimation = function() {\r\n                    // Operate on a copy of prop so per-property easing won't be lost\r\n                    var anim = Animation( this, jQuery.extend( {}, prop ), optall );\r\n\r\n                    // Empty animations, or finishing resolves immediately\r\n                    if ( empty || jQuery._data( this, \"finish\" ) ) {\r\n                        anim.stop( true );\r\n                    }\r\n                };\r\n            doAnimation.finish = doAnimation;\r\n\r\n            return empty || optall.queue === false ?\r\n                this.each( doAnimation ) :\r\n                this.queue( optall.queue, doAnimation );\r\n        },\r\n        stop: function( type, clearQueue, gotoEnd ) {\r\n            var stopQueue = function( hooks ) {\r\n                var stop = hooks.stop;\r\n                delete hooks.stop;\r\n                stop( gotoEnd );\r\n            };\r\n\r\n            if ( typeof type !== \"string\" ) {\r\n                gotoEnd = clearQueue;\r\n                clearQueue = type;\r\n                type = undefined;\r\n            }\r\n            if ( clearQueue && type !== false ) {\r\n                this.queue( type || \"fx\", [] );\r\n            }\r\n\r\n            return this.each(function() {\r\n                var dequeue = true,\r\n                    index = type != null && type + \"queueHooks\",\r\n                    timers = jQuery.timers,\r\n                    data = jQuery._data( this );\r\n\r\n                if ( index ) {\r\n                    if ( data[ index ] && data[ index ].stop ) {\r\n                        stopQueue( data[ index ] );\r\n                    }\r\n                } else {\r\n                    for ( index in data ) {\r\n                        if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\r\n                            stopQueue( data[ index ] );\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for ( index = timers.length; index--; ) {\r\n                    if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {\r\n                        timers[ index ].anim.stop( gotoEnd );\r\n                        dequeue = false;\r\n                        timers.splice( index, 1 );\r\n                    }\r\n                }\r\n\r\n                // start the next in the queue if the last step wasn't forced\r\n                // timers currently will call their complete callbacks, which will dequeue\r\n                // but only if they were gotoEnd\r\n                if ( dequeue || !gotoEnd ) {\r\n                    jQuery.dequeue( this, type );\r\n                }\r\n            });\r\n        },\r\n        finish: function( type ) {\r\n            if ( type !== false ) {\r\n                type = type || \"fx\";\r\n            }\r\n            return this.each(function() {\r\n                var index,\r\n                    data = jQuery._data( this ),\r\n                    queue = data[ type + \"queue\" ],\r\n                    hooks = data[ type + \"queueHooks\" ],\r\n                    timers = jQuery.timers,\r\n                    length = queue ? queue.length : 0;\r\n\r\n                // enable finishing flag on private data\r\n                data.finish = true;\r\n\r\n                // empty the queue first\r\n                jQuery.queue( this, type, [] );\r\n\r\n                if ( hooks && hooks.stop ) {\r\n                    hooks.stop.call( this, true );\r\n                }\r\n\r\n                // look for any active animations, and finish them\r\n                for ( index = timers.length; index--; ) {\r\n                    if ( timers[ index ].elem === this && timers[ index ].queue === type ) {\r\n                        timers[ index ].anim.stop( true );\r\n                        timers.splice( index, 1 );\r\n                    }\r\n                }\r\n\r\n                // look for any animations in the old queue and finish them\r\n                for ( index = 0; index < length; index++ ) {\r\n                    if ( queue[ index ] && queue[ index ].finish ) {\r\n                        queue[ index ].finish.call( this );\r\n                    }\r\n                }\r\n\r\n                // turn off finishing flag\r\n                delete data.finish;\r\n            });\r\n        }\r\n    });\r\n\r\n// Generate parameters to create a standard animation\r\n    function genFx( type, includeWidth ) {\r\n        var which,\r\n            attrs = { height: type },\r\n            i = 0;\r\n\r\n        // if we include width, step value is 1 to do all cssExpand values,\r\n        // if we don't include width, step value is 2 to skip over Left and Right\r\n        includeWidth = includeWidth? 1 : 0;\r\n        for( ; i < 4 ; i += 2 - includeWidth ) {\r\n            which = cssExpand[ i ];\r\n            attrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\r\n        }\r\n\r\n        if ( includeWidth ) {\r\n            attrs.opacity = attrs.width = type;\r\n        }\r\n\r\n        return attrs;\r\n    }\r\n\r\n// Generate shortcuts for custom animations\r\n    jQuery.each({\r\n        slideDown: genFx(\"show\"),\r\n        slideUp: genFx(\"hide\"),\r\n        slideToggle: genFx(\"toggle\"),\r\n        fadeIn: { opacity: \"show\" },\r\n        fadeOut: { opacity: \"hide\" },\r\n        fadeToggle: { opacity: \"toggle\" }\r\n    }, function( name, props ) {\r\n        jQuery.fn[ name ] = function( speed, easing, callback ) {\r\n            return this.animate( props, speed, easing, callback );\r\n        };\r\n    });\r\n\r\n    jQuery.speed = function( speed, easing, fn ) {\r\n        var opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\r\n            complete: fn || !fn && easing ||\r\n                jQuery.isFunction( speed ) && speed,\r\n            duration: speed,\r\n            easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\r\n        };\r\n\r\n        opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\r\n            opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\r\n\r\n        // normalize opt.queue - true/undefined/null -> \"fx\"\r\n        if ( opt.queue == null || opt.queue === true ) {\r\n            opt.queue = \"fx\";\r\n        }\r\n\r\n        // Queueing\r\n        opt.old = opt.complete;\r\n\r\n        opt.complete = function() {\r\n            if ( jQuery.isFunction( opt.old ) ) {\r\n                opt.old.call( this );\r\n            }\r\n\r\n            if ( opt.queue ) {\r\n                jQuery.dequeue( this, opt.queue );\r\n            }\r\n        };\r\n\r\n        return opt;\r\n    };\r\n\r\n    jQuery.easing = {\r\n        linear: function( p ) {\r\n            return p;\r\n        },\r\n        swing: function( p ) {\r\n            return 0.5 - Math.cos( p*Math.PI ) / 2;\r\n        }\r\n    };\r\n\r\n    jQuery.timers = [];\r\n    jQuery.fx = Tween.prototype.init;\r\n    jQuery.fx.tick = function() {\r\n        var timer,\r\n            timers = jQuery.timers,\r\n            i = 0;\r\n\r\n        fxNow = jQuery.now();\r\n\r\n        for ( ; i < timers.length; i++ ) {\r\n            timer = timers[ i ];\r\n            // Checks the timer has not already been removed\r\n            if ( !timer() && timers[ i ] === timer ) {\r\n                timers.splice( i--, 1 );\r\n            }\r\n        }\r\n\r\n        if ( !timers.length ) {\r\n            jQuery.fx.stop();\r\n        }\r\n        fxNow = undefined;\r\n    };\r\n\r\n    jQuery.fx.timer = function( timer ) {\r\n        if ( timer() && jQuery.timers.push( timer ) ) {\r\n            jQuery.fx.start();\r\n        }\r\n    };\r\n\r\n    jQuery.fx.interval = 13;\r\n\r\n    jQuery.fx.start = function() {\r\n        if ( !timerId ) {\r\n            timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );\r\n        }\r\n    };\r\n\r\n    jQuery.fx.stop = function() {\r\n        clearInterval( timerId );\r\n        timerId = null;\r\n    };\r\n\r\n    jQuery.fx.speeds = {\r\n        slow: 600,\r\n        fast: 200,\r\n        // Default speed\r\n        _default: 400\r\n    };\r\n\r\n// Back Compat <1.8 extension point\r\n    jQuery.fx.step = {};\r\n\r\n    if ( jQuery.expr && jQuery.expr.filters ) {\r\n        jQuery.expr.filters.animated = function( elem ) {\r\n            return jQuery.grep(jQuery.timers, function( fn ) {\r\n                return elem === fn.elem;\r\n            }).length;\r\n        };\r\n    }\r\n    jQuery.fn.offset = function( options ) {\r\n        if ( arguments.length ) {\r\n            return options === undefined ?\r\n                this :\r\n                this.each(function( i ) {\r\n                    jQuery.offset.setOffset( this, options, i );\r\n                });\r\n        }\r\n\r\n        var docElem, win,\r\n            box = { top: 0, left: 0 },\r\n            elem = this[ 0 ],\r\n            doc = elem && elem.ownerDocument;\r\n\r\n        if ( !doc ) {\r\n            return;\r\n        }\r\n\r\n        docElem = doc.documentElement;\r\n\r\n        // Make sure it's not a disconnected DOM node\r\n        if ( !jQuery.contains( docElem, elem ) ) {\r\n            return box;\r\n        }\r\n\r\n        // If we don't have gBCR, just use 0,0 rather than error\r\n        // BlackBerry 5, iOS 3 (original iPhone)\r\n        if ( typeof elem.getBoundingClientRect !== core_strundefined ) {\r\n            box = elem.getBoundingClientRect();\r\n        }\r\n        win = getWindow( doc );\r\n        return {\r\n            top: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 ),\r\n            left: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 )\r\n        };\r\n    };\r\n\r\n    jQuery.offset = {\r\n\r\n        setOffset: function( elem, options, i ) {\r\n            var position = jQuery.css( elem, \"position\" );\r\n\r\n            // set position first, in-case top/left are set even on static elem\r\n            if ( position === \"static\" ) {\r\n                elem.style.position = \"relative\";\r\n            }\r\n\r\n            var curElem = jQuery( elem ),\r\n                curOffset = curElem.offset(),\r\n                curCSSTop = jQuery.css( elem, \"top\" ),\r\n                curCSSLeft = jQuery.css( elem, \"left\" ),\r\n                calculatePosition = ( position === \"absolute\" || position === \"fixed\" ) && jQuery.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\r\n                props = {}, curPosition = {}, curTop, curLeft;\r\n\r\n            // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\r\n            if ( calculatePosition ) {\r\n                curPosition = curElem.position();\r\n                curTop = curPosition.top;\r\n                curLeft = curPosition.left;\r\n            } else {\r\n                curTop = parseFloat( curCSSTop ) || 0;\r\n                curLeft = parseFloat( curCSSLeft ) || 0;\r\n            }\r\n\r\n            if ( jQuery.isFunction( options ) ) {\r\n                options = options.call( elem, i, curOffset );\r\n            }\r\n\r\n            if ( options.top != null ) {\r\n                props.top = ( options.top - curOffset.top ) + curTop;\r\n            }\r\n            if ( options.left != null ) {\r\n                props.left = ( options.left - curOffset.left ) + curLeft;\r\n            }\r\n\r\n            if ( \"using\" in options ) {\r\n                options.using.call( elem, props );\r\n            } else {\r\n                curElem.css( props );\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    jQuery.fn.extend({\r\n\r\n        position: function() {\r\n            if ( !this[ 0 ] ) {\r\n                return;\r\n            }\r\n\r\n            var offsetParent, offset,\r\n                parentOffset = { top: 0, left: 0 },\r\n                elem = this[ 0 ];\r\n\r\n            // fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\r\n            if ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\r\n                // we assume that getBoundingClientRect is available when computed position is fixed\r\n                offset = elem.getBoundingClientRect();\r\n            } else {\r\n                // Get *real* offsetParent\r\n                offsetParent = this.offsetParent();\r\n\r\n                // Get correct offsets\r\n                offset = this.offset();\r\n                if ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\r\n                    parentOffset = offsetParent.offset();\r\n                }\r\n\r\n                // Add offsetParent borders\r\n                parentOffset.top  += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\r\n                parentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\r\n            }\r\n\r\n            // Subtract parent offsets and element margins\r\n            // note: when an element has margin: auto the offsetLeft and marginLeft\r\n            // are the same in Safari causing offset.left to incorrectly be 0\r\n            return {\r\n                top:  offset.top  - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\r\n                left: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true)\r\n            };\r\n        },\r\n\r\n        offsetParent: function() {\r\n            return this.map(function() {\r\n                var offsetParent = this.offsetParent || docElem;\r\n                while ( offsetParent && ( !jQuery.nodeName( offsetParent, \"html\" ) && jQuery.css( offsetParent, \"position\") === \"static\" ) ) {\r\n                    offsetParent = offsetParent.offsetParent;\r\n                }\r\n                return offsetParent || docElem;\r\n            });\r\n        }\r\n    });\r\n\r\n\r\n// Create scrollLeft and scrollTop methods\r\n    jQuery.each( {scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\"}, function( method, prop ) {\r\n        var top = /Y/.test( prop );\r\n\r\n        jQuery.fn[ method ] = function( val ) {\r\n            return jQuery.access( this, function( elem, method, val ) {\r\n                var win = getWindow( elem );\r\n\r\n                if ( val === undefined ) {\r\n                    return win ? (prop in win) ? win[ prop ] :\r\n                        win.document.documentElement[ method ] :\r\n                        elem[ method ];\r\n                }\r\n\r\n                if ( win ) {\r\n                    win.scrollTo(\r\n                        !top ? val : jQuery( win ).scrollLeft(),\r\n                        top ? val : jQuery( win ).scrollTop()\r\n                    );\r\n\r\n                } else {\r\n                    elem[ method ] = val;\r\n                }\r\n            }, method, val, arguments.length, null );\r\n        };\r\n    });\r\n\r\n    function getWindow( elem ) {\r\n        return jQuery.isWindow( elem ) ?\r\n            elem :\r\n            elem.nodeType === 9 ?\r\n                elem.defaultView || elem.parentWindow :\r\n                false;\r\n    }\r\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\r\n    jQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\r\n        jQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name }, function( defaultExtra, funcName ) {\r\n            // margin is only for outerHeight, outerWidth\r\n            jQuery.fn[ funcName ] = function( margin, value ) {\r\n                var chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\r\n                    extra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\r\n\r\n                return jQuery.access( this, function( elem, type, value ) {\r\n                    var doc;\r\n\r\n                    if ( jQuery.isWindow( elem ) ) {\r\n                        // As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\r\n                        // isn't a whole lot we can do. See pull request at this URL for discussion:\r\n                        // https://github.com/jquery/jquery/pull/764\r\n                        return elem.document.documentElement[ \"client\" + name ];\r\n                    }\r\n\r\n                    // Get document width or height\r\n                    if ( elem.nodeType === 9 ) {\r\n                        doc = elem.documentElement;\r\n\r\n                        // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest\r\n                        // unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.\r\n                        return Math.max(\r\n                            elem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\r\n                            elem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\r\n                            doc[ \"client\" + name ]\r\n                        );\r\n                    }\r\n\r\n                    return value === undefined ?\r\n                        // Get width or height on the element, requesting but not forcing parseFloat\r\n                        jQuery.css( elem, type, extra ) :\r\n\r\n                        // Set width or height on the element\r\n                        jQuery.style( elem, type, value, extra );\r\n                }, type, chainable ? margin : undefined, chainable, null );\r\n            };\r\n        });\r\n    });\r\n// Limit scope pollution from any deprecated API\r\n// (function() {\r\n\r\n// The number of elements contained in the matched element set\r\n    jQuery.fn.size = function() {\r\n        return this.length;\r\n    };\r\n\r\n    jQuery.fn.andSelf = jQuery.fn.addBack;\r\n\r\n// })();\r\n    if ( typeof module === \"object\" && module && typeof module.exports === \"object\" ) {\r\n        // Expose jQuery as module.exports in loaders that implement the Node\r\n        // module pattern (including browserify). Do not create the global, since\r\n        // the user will be storing it themselves locally, and globals are frowned\r\n        // upon in the Node module world.\r\n        module.exports = jQuery;\r\n    } else {\r\n        // Otherwise expose jQuery to the global object as usual\r\n        window.jQuery = window.$ = jQuery;\r\n\r\n        // Register as a named AMD module, since jQuery can be concatenated with other\r\n        // files that may use define, but not via a proper concatenation script that\r\n        // understands anonymous AMD modules. A named AMD is safest and most robust\r\n        // way to register. Lowercase jquery is used because AMD module names are\r\n        // derived from file names, and jQuery is normally delivered in a lowercase\r\n        // file name. Do this after creating the global so that if an AMD module wants\r\n        // to call noConflict to hide this version of jQuery, it will work.\r\n        if ( typeof define === \"function\" && define.amd ) {\r\n            define( \"jquery\", [], function () { return jQuery; } );\r\n        }\r\n    }\r\n\r\n})( window );"},{"type":"textNode","textContent":"\n"}]},{"type":"textNode","textContent":"\n\n"},{"type":"body","attributes":[{"name":"id","value":"body"},{"name":"style","value":""}],"childNodes":[{"type":"textNode","textContent":"\n"},{"type":"div","attributes":[{"name":"id","value":"qunit"}]},{"type":"textNode","textContent":"\n\n"},{"type":"dl","attributes":[{"name":"id","value":"dl"},{"name":"style","value":"position:absolute;top:-32767px;left:-32767px;width:1px;"}],"childNodes":[{"type":"textNode","textContent":"\n"},{"type":"div","attributes":[{"name":"id","value":"qunit-fixture"}],"childNodes":[{"type":"textNode","textContent":"\n"},{"type":"p","attributes":[{"name":"id","value":"firstp"}],"childNodes":[{"type":"textNode","textContent":"See "},{"type":"a","attributes":[{"name":"id","value":"simon1"},{"name":"href","value":"http://simon.incutio.com/archive/2003/03/25/#getElementsBySelector"},{"name":"rel","value":"bookmark"}],"childNodes":[{"type":"textNode","textContent":"this blog entry"}]},{"type":"textNode","textContent":" for more information."}]},{"type":"textNode","textContent":"\n"},{"type":"p","attributes":[{"name":"id","value":"ap"}],"childNodes":[{"type":"textNode","textContent":"\n    Here are some links in a normal paragraph: "},{"type":"a","attributes":[{"name":"id","value":"google"},{"name":"href","value":"http://www.google.com/"},{"name":"title","value":"Google!"}],"childNodes":[{"type":"textNode","textContent":"Google"}]},{"type":"textNode","textContent":",\n    "},{"type":"a","attributes":[{"name":"id","value":"groups"},{"name":"href","value":"http://groups.google.com/"},{"name":"class","value":"GROUPS"}],"childNodes":[{"type":"textNode","textContent":"Google Groups (Link)"}]},{"type":"textNode","textContent":".\n    This link has "},{"type":"code","childNodes":[{"type":"a","attributes":[{"name":"href","value":"http://smin"},{"name":"id","value":"anchor1"}],"childNodes":[{"type":"textNode","textContent":"class=\"blog\""}]}]},{"type":"textNode","textContent":":\n    "},{"type":"a","attributes":[{"name":"href","value":"http://diveintomark.org/"},{"name":"class","value":"blog"},{"name":"hreflang","value":"en"},{"name":"id","value":"mark"}],"childNodes":[{"type":"textNode","textContent":"diveintomark"}]},{"type":"textNode","textContent":"\n\n"}]},{"type":"textNode","textContent":"\n"},{"type":"div","attributes":[{"name":"id","value":"foo"}],"childNodes":[{"type":"textNode","textContent":"\n    "},{"type":"p","attributes":[{"name":"id","value":"sndp"}],"childNodes":[{"type":"textNode","textContent":"Everything inside the red border is inside a div with "},{"type":"code","childNodes":[{"type":"textNode","textContent":"id=\"foo\""}]},{"type":"textNode","textContent":"."}]},{"type":"textNode","textContent":"\n    "},{"type":"p","attributes":[{"name":"lang","value":"en"},{"name":"id","value":"en"}],"childNodes":[{"type":"textNode","textContent":"This is a normal link: "},{"type":"a","attributes":[{"name":"id","value":"yahoo"},{"name":"href","value":"http://www.yahoo.com/"},{"name":"class","value":"blogTest"}],"childNodes":[{"type":"textNode","textContent":"Yahoo"}]}]},{"type":"textNode","textContent":"\n    "},{"type":"p","attributes":[{"name":"id","value":"sap"}],"childNodes":[{"type":"textNode","textContent":"This link has "},{"type":"code","childNodes":[{"type":"a","attributes":[{"name":"href","value":"#2"},{"name":"id","value":"anchor2"}],"childNodes":[{"type":"textNode","textContent":"class=\"blog\""}]}]},{"type":"textNode","textContent":": "},{"type":"a","attributes":[{"name":"href","value":"http://simon.incutio.com/"},{"name":"class","value":"blog link"},{"name":"id","value":"simon"}],"childNodes":[{"type":"textNode","textContent":"Simon Willison's Weblog"}]}]},{"type":"textNode","textContent":"\n\n"}]},{"type":"textNode","textContent":"\n"},{"type":"div","attributes":[{"name":"id","value":"nothiddendiv"},{"name":"style","value":"height:1px;background:white;"},{"name":"class","value":"nothiddendiv"}],"childNodes":[{"type":"textNode","textContent":"\n    "},{"type":"div","attributes":[{"name":"id","value":"nothiddendivchild"}]},{"type":"textNode","textContent":"\n"}]},{"type":"textNode","textContent":"\n"},{"type":"span","attributes":[{"name":"id","value":"name+value"}]},{"type":"textNode","textContent":"\n"},{"type":"p","attributes":[{"name":"id","value":"first"}],"childNodes":[{"type":"textNode","textContent":"Try them out:"}]},{"type":"textNode","textContent":"\n"},{"type":"ul","attributes":[{"name":"id","value":"firstUL"}]},{"type":"textNode","textContent":"\n"},{"type":"ol","attributes":[{"name":"id","value":"empty"}]},{"type":"textNode","textContent":"\n"},{"type":"form","attributes":[{"name":"id","value":"form"},{"name":"action","value":"formaction"}],"childNodes":[{"type":"textNode","textContent":"\n    "},{"type":"label","attributes":[{"name":"for","value":"action"},{"name":"id","value":"label-for"}],"childNodes":[{"type":"textNode","textContent":"Action:"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"text"},{"name":"name","value":"action"},{"name":"value","value":"Test"},{"name":"id","value":"text1"},{"name":"maxlength","value":"30"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"text"},{"name":"name","value":"text2"},{"name":"value","value":"Test"},{"name":"id","value":"text2"},{"name":"disabled","value":"disabled"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"radio"},{"name":"name","value":"radio1"},{"name":"id","value":"radio1"},{"name":"value","value":"on"}]},{"type":"textNode","textContent":"\n\n    "},{"type":"input","attributes":[{"name":"type","value":"radio"},{"name":"name","value":"radio2"},{"name":"id","value":"radio2"},{"name":"checked","value":"checked"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"checkbox"},{"name":"name","value":"check"},{"name":"id","value":"check1"},{"name":"checked","value":"checked"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"checkbox"},{"name":"id","value":"check2"},{"name":"value","value":"on"}]},{"type":"textNode","textContent":"\n\n    "},{"type":"input","attributes":[{"name":"type","value":"hidden"},{"name":"name","value":"hidden"},{"name":"id","value":"hidden1"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"text"},{"name":"style","value":"display:none;"},{"name":"name","value":"foo[bar]"},{"name":"id","value":"hidden2"}]},{"type":"textNode","textContent":"\n\n    "},{"type":"input","attributes":[{"name":"type","value":"text"},{"name":"id","value":"name"},{"name":"name","value":"name"},{"name":"value","value":"name"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"search"},{"name":"id","value":"search"},{"name":"name","value":"search"},{"name":"value","value":"search"}]},{"type":"textNode","textContent":"\n\n    "},{"type":"button","attributes":[{"name":"id","value":"button"},{"name":"name","value":"button"},{"name":"type","value":"button"}],"childNodes":[{"type":"textNode","textContent":"Button"}]},{"type":"button","attributes":[{"name":"value","value":"baz"}],"childNodes":[{"type":"textNode","textContent":"text"}]},{"type":"textNode","textContent":"\n\n    "},{"type":"textarea","attributes":[{"name":"id","value":"area1"},{"name":"maxlength","value":"30"}],"childNodes":[{"type":"textNode","textContent":"foobar"}]},{"type":"textNode","textContent":"\n\n    "},{"type":"select","attributes":[{"name":"name","value":"select1"},{"name":"id","value":"select1"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option1a"},{"name":"class","value":"emptyopt"},{"name":"value","value":""}],"childNodes":[{"type":"textNode","textContent":"Nothing"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option1b"},{"name":"value","value":"1"}],"childNodes":[{"type":"textNode","textContent":"1"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option1c"},{"name":"value","value":"2"}],"childNodes":[{"type":"textNode","textContent":"2"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option1d"},{"name":"value","value":"3"}],"childNodes":[{"type":"textNode","textContent":"3"}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n    "},{"type":"select","attributes":[{"name":"name","value":"select2"},{"name":"id","value":"select2"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option2a"},{"name":"class","value":"emptyopt"},{"name":"value","value":""}],"childNodes":[{"type":"textNode","textContent":"Nothing"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option2b"},{"name":"value","value":"1"}],"childNodes":[{"type":"textNode","textContent":"1"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option2c"},{"name":"value","value":"2"}],"childNodes":[{"type":"textNode","textContent":"2"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option2d"},{"name":"selected","value":"selected"},{"name":"value","value":"3"}],"childNodes":[{"type":"textNode","textContent":"3"}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n    "},{"type":"select","attributes":[{"name":"name","value":"select3"},{"name":"id","value":"select3"},{"name":"multiple","value":"multiple"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option3a"},{"name":"class","value":"emptyopt"},{"name":"value","value":""}],"childNodes":[{"type":"textNode","textContent":"Nothing"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option3b"},{"name":"selected","value":"selected"},{"name":"value","value":"1"}],"childNodes":[{"type":"textNode","textContent":"1"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option3c"},{"name":"selected","value":"selected"},{"name":"value","value":"2"}],"childNodes":[{"type":"textNode","textContent":"2"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option3d"},{"name":"value","value":"3"}],"childNodes":[{"type":"textNode","textContent":"3"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option3e"}],"childNodes":[{"type":"textNode","textContent":"no value"}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n    "},{"type":"select","attributes":[{"name":"name","value":"select4"},{"name":"id","value":"select4"},{"name":"multiple","value":"multiple"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"optgroup","attributes":[{"name":"disabled","value":"disabled"}],"childNodes":[{"type":"textNode","textContent":"\n            "},{"type":"option","attributes":[{"name":"id","value":"option4a"},{"name":"class","value":"emptyopt"},{"name":"value","value":""}],"childNodes":[{"type":"textNode","textContent":"Nothing"}]},{"type":"textNode","textContent":"\n            "},{"type":"option","attributes":[{"name":"id","value":"option4b"},{"name":"disabled","value":"disabled"},{"name":"selected","value":"selected"},{"name":"value","value":"1"}],"childNodes":[{"type":"textNode","textContent":"1"}]},{"type":"textNode","textContent":"\n            "},{"type":"option","attributes":[{"name":"id","value":"option4c"},{"name":"selected","value":"selected"},{"name":"value","value":"2"}],"childNodes":[{"type":"textNode","textContent":"2"}]},{"type":"textNode","textContent":"\n        "}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"selected","value":"selected"},{"name":"disabled","value":"disabled"},{"name":"id","value":"option4d"},{"name":"value","value":"3"}],"childNodes":[{"type":"textNode","textContent":"3"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option4e"}],"childNodes":[{"type":"textNode","textContent":"no value"}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n    "},{"type":"select","attributes":[{"name":"name","value":"select5"},{"name":"id","value":"select5"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option5a"},{"name":"value","value":"3"}],"childNodes":[{"type":"textNode","textContent":"1"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option5b"},{"name":"value","value":"2"}],"childNodes":[{"type":"textNode","textContent":"2"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"id","value":"option5c"},{"name":"value","value":"1"},{"name":"data-attr","value":""}],"childNodes":[{"type":"textNode","textContent":"3"}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n\n    "},{"type":"object","attributes":[{"name":"id","value":"object1"},{"name":"codebase","value":"stupid"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"param","attributes":[{"name":"name","value":"p1"},{"name":"value","value":"x1"}]},{"type":"textNode","textContent":"\n        "},{"type":"param","attributes":[{"name":"name","value":"p2"},{"name":"value","value":"x2"}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n\n    "},{"type":"span","attributes":[{"name":"id","value":"台北Táiběi"}]},{"type":"textNode","textContent":"\n    "},{"type":"span","attributes":[{"name":"id","value":"台北"},{"name":"lang","value":"中文"}]},{"type":"textNode","textContent":"\n    "},{"type":"span","attributes":[{"name":"id","value":"utf8class1"},{"name":"class","value":"台北Táiběi 台北"}]},{"type":"textNode","textContent":"\n    "},{"type":"span","attributes":[{"name":"id","value":"utf8class2"},{"name":"class","value":"台北"}]},{"type":"textNode","textContent":"\n    "},{"type":"span","attributes":[{"name":"id","value":"foo:bar"},{"name":"class","value":"foo:bar"}]},{"type":"textNode","textContent":"\n    "},{"type":"span","attributes":[{"name":"id","value":"test.foo[5]bar"},{"name":"class","value":"test.foo[5]bar"}]},{"type":"textNode","textContent":"\n\n    "},{"type":"foo_bar","attributes":[{"name":"id","value":"foobar"}],"childNodes":[{"type":"textNode","textContent":"test element"}]},{"type":"textNode","textContent":"\n"}]},{"type":"textNode","textContent":"\n"},{"type":"b","attributes":[{"name":"id","value":"floatTest"}],"childNodes":[{"type":"textNode","textContent":"Float test."}]},{"type":"textNode","textContent":"\n"},{"type":"iframe","attributes":[{"name":"id","value":"iframe"},{"name":"name","value":"iframe"}]},{"type":"textNode","textContent":"\n"},{"type":"form","attributes":[{"name":"id","value":"lengthtest"}],"childNodes":[{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"text"},{"name":"id","value":"length"},{"name":"name","value":"test"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"text"},{"name":"id","value":"idTest"},{"name":"name","value":"id"}]},{"type":"textNode","textContent":"\n"}]},{"type":"textNode","textContent":"\n"},{"type":"table","attributes":[{"name":"id","value":"table"}]},{"type":"textNode","textContent":"\n\n"},{"type":"form","attributes":[{"name":"id","value":"name-tests"}],"childNodes":[{"type":"textNode","textContent":"\n    "},{"type":null},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"name","value":"types[]"},{"name":"id","value":"types_all"},{"name":"type","value":"checkbox"},{"name":"value","value":"all"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"name","value":"types[]"},{"name":"id","value":"types_anime"},{"name":"type","value":"checkbox"},{"name":"value","value":"anime"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"name","value":"types[]"},{"name":"id","value":"types_movie"},{"name":"type","value":"checkbox"},{"name":"value","value":"movie"}]},{"type":"textNode","textContent":"\n"}]},{"type":"textNode","textContent":"\n\n"},{"type":"form","attributes":[{"name":"id","value":"testForm"},{"name":"action","value":"#"},{"name":"method","value":"get"}],"childNodes":[{"type":"textNode","textContent":"\n    "},{"type":"textarea","attributes":[{"name":"name","value":"T3"},{"name":"rows","value":"2"},{"name":"cols","value":"15"}],"childNodes":[{"type":"textNode","textContent":"?\n        Z"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"hidden"},{"name":"name","value":"H1"},{"name":"value","value":"x"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"hidden"},{"name":"name","value":"H2"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"name","value":"PWD"},{"name":"type","value":"password"},{"name":"value","value":""}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"name","value":"T1"},{"name":"type","value":"text"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"name","value":"T2"},{"name":"type","value":"text"},{"name":"value","value":"YES"},{"name":"readonly","value":"readonly"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"checkbox"},{"name":"name","value":"C1"},{"name":"value","value":"1"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"checkbox"},{"name":"name","value":"C2"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"radio"},{"name":"name","value":"R1"},{"name":"value","value":"1"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"radio"},{"name":"name","value":"R1"},{"name":"value","value":"2"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"text"},{"name":"name","value":"My Name"},{"name":"value","value":"me"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"reset"},{"name":"name","value":"reset"},{"name":"value","value":"NO"}]},{"type":"textNode","textContent":"\n    "},{"type":"select","attributes":[{"name":"name","value":"S1"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"value","value":"abc"}],"childNodes":[{"type":"textNode","textContent":"ABC"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"value","value":"abc"}],"childNodes":[{"type":"textNode","textContent":"ABC"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"value","value":"abc"}],"childNodes":[{"type":"textNode","textContent":"ABC"}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n    "},{"type":"select","attributes":[{"name":"name","value":"S2"},{"name":"multiple","value":"multiple"},{"name":"size","value":"3"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"value","value":"abc"}],"childNodes":[{"type":"textNode","textContent":"ABC"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"value","value":"abc"}],"childNodes":[{"type":"textNode","textContent":"ABC"}]},{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"value","value":"abc"}],"childNodes":[{"type":"textNode","textContent":"ABC"}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n    "},{"type":"select","attributes":[{"name":"name","value":"S3"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"selected","value":"selected"}],"childNodes":[{"type":"textNode","textContent":"YES"}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n    "},{"type":"select","attributes":[{"name":"name","value":"S4"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"value","value":""},{"name":"selected","value":"selected"}],"childNodes":[{"type":"textNode","textContent":"NO"}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"submit"},{"name":"name","value":"sub1"},{"name":"value","value":"NO"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"submit"},{"name":"name","value":"sub2"},{"name":"value","value":"NO"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"image"},{"name":"name","value":"sub3"},{"name":"value","value":"NO"}]},{"type":"textNode","textContent":"\n    "},{"type":"button","attributes":[{"name":"name","value":"sub4"},{"name":"type","value":"submit"},{"name":"value","value":"NO"}],"childNodes":[{"type":"textNode","textContent":"NO"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"name","value":"D1"},{"name":"type","value":"text"},{"name":"value","value":"NO"},{"name":"disabled","value":"disabled"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"checkbox"},{"name":"checked","value":"checked"},{"name":"disabled","value":"disabled"},{"name":"name","value":"D2"},{"name":"value","value":"NO"}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"type","value":"radio"},{"name":"name","value":"D3"},{"name":"value","value":"NO"},{"name":"checked","value":"checked"},{"name":"disabled","value":"disabled"}]},{"type":"textNode","textContent":"\n    "},{"type":"select","attributes":[{"name":"name","value":"D4"},{"name":"disabled","value":"disabled"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"selected","value":"selected"},{"name":"value","value":"NO"}],"childNodes":[{"type":"textNode","textContent":"NO"}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"id","value":"list-test"},{"name":"type","value":"text"}]},{"type":"textNode","textContent":"\n    "},{"type":"datalist","attributes":[{"name":"id","value":"datalist"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"option","attributes":[{"name":"value","value":"option"}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n"}]},{"type":"textNode","textContent":"\n"},{"type":"div","attributes":[{"name":"id","value":"moretests"}],"childNodes":[{"type":"textNode","textContent":"\n    "},{"type":"form","childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"div","attributes":[{"name":"id","value":"checkedtest"},{"name":"style","value":"display:none;"}],"childNodes":[{"type":"textNode","textContent":"\n            "},{"type":"input","attributes":[{"name":"type","value":"radio"},{"name":"name","value":"checkedtestradios"},{"name":"checked","value":"checked"}]},{"type":"textNode","textContent":"\n            "},{"type":"input","attributes":[{"name":"type","value":"radio"},{"name":"name","value":"checkedtestradios"},{"name":"value","value":"on"}]},{"type":"textNode","textContent":"\n            "},{"type":"input","attributes":[{"name":"type","value":"checkbox"},{"name":"name","value":"checkedtestcheckboxes"},{"name":"checked","value":"checked"}]},{"type":"textNode","textContent":"\n            "},{"type":"input","attributes":[{"name":"type","value":"checkbox"},{"name":"name","value":"checkedtestcheckboxes"}]},{"type":"textNode","textContent":"\n        "}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n    "},{"type":"div","attributes":[{"name":"id","value":"nonnodes"}],"childNodes":[{"type":"span","attributes":[{"name":"id","value":"nonnodesElement"}],"childNodes":[{"type":"textNode","textContent":"hi"}]},{"type":"textNode","textContent":" there "},{"type":null}]},{"type":"textNode","textContent":"\n    "},{"type":"div","attributes":[{"name":"id","value":"t2037"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"div","childNodes":[{"type":"div","attributes":[{"name":"class","value":"hidden"}],"childNodes":[{"type":"textNode","textContent":"hidden"}]}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n    "},{"type":"div","attributes":[{"name":"id","value":"t6652"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"div"},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n    "},{"type":"div","attributes":[{"name":"id","value":"no-clone-exception"}],"childNodes":[{"type":"object","childNodes":[{"type":"embed"}]}]},{"type":"textNode","textContent":"\n"}]},{"type":"textNode","textContent":"\n\n"},{"type":"div","attributes":[{"name":"id","value":"tabindex-tests"}],"childNodes":[{"type":"textNode","textContent":"\n    "},{"type":"ol","attributes":[{"name":"id","value":"listWithTabIndex"},{"name":"tabindex","value":"5"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"li","attributes":[{"name":"id","value":"foodWithNegativeTabIndex"},{"name":"tabindex","value":"-1"}],"childNodes":[{"type":"textNode","textContent":"Rice"}]},{"type":"textNode","textContent":"\n        "},{"type":"li","attributes":[{"name":"id","value":"foodNoTabIndex"}],"childNodes":[{"type":"textNode","textContent":"Beans"}]},{"type":"textNode","textContent":"\n        "},{"type":"li","childNodes":[{"type":"textNode","textContent":"Blinis"}]},{"type":"textNode","textContent":"\n        "},{"type":"li","childNodes":[{"type":"textNode","textContent":"Tofu"}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n\n    "},{"type":"div","attributes":[{"name":"id","value":"divWithNoTabIndex"}],"childNodes":[{"type":"textNode","textContent":"I'm hungry. I should..."}]},{"type":"textNode","textContent":"\n    "},{"type":"span","childNodes":[{"type":"textNode","textContent":"..."}]},{"type":"a","attributes":[{"name":"href","value":"#"},{"name":"id","value":"linkWithNoTabIndex"}],"childNodes":[{"type":"textNode","textContent":"Eat lots of food"}]},{"type":"span","childNodes":[{"type":"textNode","textContent":"..."}]},{"type":"textNode","textContent":" |\n    "},{"type":"span","childNodes":[{"type":"textNode","textContent":"..."}]},{"type":"a","attributes":[{"name":"href","value":"#"},{"name":"id","value":"linkWithTabIndex"},{"name":"tabindex","value":"2"}],"childNodes":[{"type":"textNode","textContent":"Eat a little food"}]},{"type":"span","childNodes":[{"type":"textNode","textContent":"..."}]},{"type":"textNode","textContent":" |\n    "},{"type":"span","childNodes":[{"type":"textNode","textContent":"..."}]},{"type":"a","attributes":[{"name":"href","value":"#"},{"name":"id","value":"linkWithNegativeTabIndex"},{"name":"tabindex","value":"-1"}],"childNodes":[{"type":"textNode","textContent":"Eat no food"}]},{"type":"span","childNodes":[{"type":"textNode","textContent":"..."}]},{"type":"textNode","textContent":"\n    "},{"type":"span","childNodes":[{"type":"textNode","textContent":"..."}]},{"type":"a","attributes":[{"name":"id","value":"linkWithNoHrefWithNoTabIndex"}],"childNodes":[{"type":"textNode","textContent":"Eat a burger"}]},{"type":"span","childNodes":[{"type":"textNode","textContent":"..."}]},{"type":"textNode","textContent":"\n    "},{"type":"span","childNodes":[{"type":"textNode","textContent":"..."}]},{"type":"a","attributes":[{"name":"id","value":"linkWithNoHrefWithTabIndex"},{"name":"tabindex","value":"1"}],"childNodes":[{"type":"textNode","textContent":"Eat some funyuns"}]},{"type":"span","childNodes":[{"type":"textNode","textContent":"..."}]},{"type":"textNode","textContent":"\n    "},{"type":"span","childNodes":[{"type":"textNode","textContent":"..."}]},{"type":"a","attributes":[{"name":"id","value":"linkWithNoHrefWithNegativeTabIndex"},{"name":"tabindex","value":"-1"}],"childNodes":[{"type":"textNode","textContent":"Eat some funyuns"}]},{"type":"span","childNodes":[{"type":"textNode","textContent":"..."}]},{"type":"textNode","textContent":"\n    "},{"type":"input","attributes":[{"name":"id","value":"inputWithoutTabIndex"}]},{"type":"textNode","textContent":"\n    "},{"type":"button","attributes":[{"name":"id","value":"buttonWithoutTabIndex"}]},{"type":"textNode","textContent":"\n    "},{"type":"textarea","attributes":[{"name":"id","value":"textareaWithoutTabIndex"}]},{"type":"textNode","textContent":"\n    "},{"type":"menu","attributes":[{"name":"type","value":"popup"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"menuitem","attributes":[{"name":"id","value":"menuitemWithoutTabIndex"},{"name":"command","value":"submitbutton"},{"name":"default","value":""}],"childNodes":[{"type":"textNode","textContent":"\n    "}]}]},{"type":"textNode","textContent":"\n"}]},{"type":"textNode","textContent":"\n\n"},{"type":"div","attributes":[{"name":"id","value":"liveHandlerOrder"}],"childNodes":[{"type":"textNode","textContent":"\n    "},{"type":"span","attributes":[{"name":"id","value":"liveSpan1"}],"childNodes":[{"type":"a","attributes":[{"name":"href","value":"#"},{"name":"id","value":"liveLink1"}]}]},{"type":"textNode","textContent":"\n    "},{"type":"span","attributes":[{"name":"id","value":"liveSpan2"}],"childNodes":[{"type":"a","attributes":[{"name":"href","value":"#"},{"name":"id","value":"liveLink2"}]}]},{"type":"textNode","textContent":"\n"}]},{"type":"textNode","textContent":"\n\n"},{"type":"div","attributes":[{"name":"id","value":"siblingTest"}],"childNodes":[{"type":"textNode","textContent":"\n    "},{"type":"em","attributes":[{"name":"id","value":"siblingfirst"}],"childNodes":[{"type":"textNode","textContent":"1"}]},{"type":"textNode","textContent":"\n    "},{"type":"em","attributes":[{"name":"id","value":"siblingnext"}],"childNodes":[{"type":"textNode","textContent":"2"}]},{"type":"textNode","textContent":"\n    "},{"type":"em","attributes":[{"name":"id","value":"siblingthird"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"em","attributes":[{"name":"id","value":"siblingchild"}],"childNodes":[{"type":"textNode","textContent":"\n            "},{"type":"em","attributes":[{"name":"id","value":"siblinggrandchild"}],"childNodes":[{"type":"textNode","textContent":"\n                "},{"type":"em","attributes":[{"name":"id","value":"siblinggreatgrandchild"}]},{"type":"textNode","textContent":"\n            "}]},{"type":"textNode","textContent":"\n        "}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n    "},{"type":"span","attributes":[{"name":"id","value":"siblingspan"}]},{"type":"textNode","textContent":"\n"}]},{"type":"textNode","textContent":"\n"},{"type":"div","attributes":[{"name":"id","value":"fx-test-group"},{"name":"style","value":"position: absolute; width: 1px; height: 1px; overflow: hidden;"}],"childNodes":[{"type":"textNode","textContent":"\n    "},{"type":"div","attributes":[{"name":"id","value":"fx-queue"},{"name":"name","value":"test"}],"childNodes":[{"type":"textNode","textContent":"\n        "},{"type":"div","attributes":[{"name":"id","value":"fadein"},{"name":"class","value":"chain-test"},{"name":"name","value":"div"}],"childNodes":[{"type":"textNode","textContent":"fadeIn"},{"type":"div","childNodes":[{"type":"textNode","textContent":"fadeIn"}]}]},{"type":"textNode","textContent":"\n        "},{"type":"div","attributes":[{"name":"id","value":"fadeout"},{"name":"class","value":"chain-test chain-test-out"}],"childNodes":[{"type":"textNode","textContent":"fadeOut"},{"type":"div","childNodes":[{"type":"textNode","textContent":"fadeOut"}]}]},{"type":"textNode","textContent":"\n\n        "},{"type":"div","attributes":[{"name":"id","value":"show"},{"name":"class","value":"chain-test"}],"childNodes":[{"type":"textNode","textContent":"show"},{"type":"div","childNodes":[{"type":"textNode","textContent":"show"}]}]},{"type":"textNode","textContent":"\n        "},{"type":"div","attributes":[{"name":"id","value":"hide"},{"name":"class","value":"chain-test chain-test-out"}],"childNodes":[{"type":"textNode","textContent":"hide"},{"type":"div","childNodes":[{"type":"textNode","textContent":"hide"}]}]},{"type":"textNode","textContent":"\n        "},{"type":"div","attributes":[{"name":"id","value":"easehide"},{"name":"class","value":"chain-test chain-test-out"}],"childNodes":[{"type":"textNode","textContent":"hide"},{"type":"div","childNodes":[{"type":"textNode","textContent":"hide"}]}]},{"type":"textNode","textContent":"\n\n        "},{"type":"div","attributes":[{"name":"id","value":"togglein"},{"name":"class","value":"chain-test"}],"childNodes":[{"type":"textNode","textContent":"togglein"},{"type":"div","childNodes":[{"type":"textNode","textContent":"togglein"}]}]},{"type":"textNode","textContent":"\n        "},{"type":"div","attributes":[{"name":"id","value":"toggleout"},{"name":"class","value":"chain-test chain-test-out"}],"childNodes":[{"type":"textNode","textContent":"toggleout"},{"type":"div","childNodes":[{"type":"textNode","textContent":"toggleout"}]}]},{"type":"textNode","textContent":"\n        "},{"type":"div","attributes":[{"name":"id","value":"easetoggleout"},{"name":"class","value":"chain-test chain-test-out"}],"childNodes":[{"type":"textNode","textContent":"toggleout"},{"type":"div","childNodes":[{"type":"textNode","textContent":"toggleout"}]}]},{"type":"textNode","textContent":"\n\n        "},{"type":"div","attributes":[{"name":"id","value":"slideup"},{"name":"class","value":"chain-test"}],"childNodes":[{"type":"textNode","textContent":"slideUp"},{"type":"div","childNodes":[{"type":"textNode","textContent":"slideUp"}]}]},{"type":"textNode","textContent":"\n        "},{"type":"div","attributes":[{"name":"id","value":"slidedown"},{"name":"class","value":"chain-test chain-test-out"}],"childNodes":[{"type":"textNode","textContent":"slideDown"},{"type":"div","childNodes":[{"type":"textNode","textContent":"slideDown"}]}]},{"type":"textNode","textContent":"\n        "},{"type":"div","attributes":[{"name":"id","value":"easeslideup"},{"name":"class","value":"chain-test"}],"childNodes":[{"type":"textNode","textContent":"slideUp"},{"type":"div","childNodes":[{"type":"textNode","textContent":"slideUp"}]}]},{"type":"textNode","textContent":"\n\n        "},{"type":"div","attributes":[{"name":"id","value":"slidetogglein"},{"name":"class","value":"chain-test"}],"childNodes":[{"type":"textNode","textContent":"slideToggleIn"},{"type":"div","childNodes":[{"type":"textNode","textContent":"slideToggleIn"}]}]},{"type":"textNode","textContent":"\n        "},{"type":"div","attributes":[{"name":"id","value":"slidetoggleout"},{"name":"class","value":"chain-test chain-test-out"}],"childNodes":[{"type":"textNode","textContent":"slideToggleOut"},{"type":"div","childNodes":[{"type":"textNode","textContent":"slideToggleOut"}]}]},{"type":"textNode","textContent":"\n\n        "},{"type":"div","attributes":[{"name":"id","value":"fadetogglein"},{"name":"class","value":"chain-test"}],"childNodes":[{"type":"textNode","textContent":"fadeToggleIn"},{"type":"div","childNodes":[{"type":"textNode","textContent":"fadeToggleIn"}]}]},{"type":"textNode","textContent":"\n        "},{"type":"div","attributes":[{"name":"id","value":"fadetoggleout"},{"name":"class","value":"chain-test chain-test-out"}],"childNodes":[{"type":"textNode","textContent":"fadeToggleOut"},{"type":"div","childNodes":[{"type":"textNode","textContent":"fadeToggleOut"}]}]},{"type":"textNode","textContent":"\n\n        "},{"type":"div","attributes":[{"name":"id","value":"fadeto"},{"name":"class","value":"chain-test"}],"childNodes":[{"type":"textNode","textContent":"fadeTo"},{"type":"div","childNodes":[{"type":"textNode","textContent":"fadeTo"}]}]},{"type":"textNode","textContent":"\n    "}]},{"type":"textNode","textContent":"\n\n    "},{"type":"div","attributes":[{"name":"id","value":"fx-tests"}]},{"type":"textNode","textContent":"\n    "},{"type":"span","attributes":[{"name":"id","value":"display"}]},{"type":"textNode","textContent":"\n"}]},{"type":"textNode","textContent":"\n"}]},{"type":"textNode","textContent":"\n"}]},{"type":"textNode","textContent":"\n"},{"type":"map","attributes":[{"name":"name","value":"imgmap"},{"name":"id","value":"imgmap"}],"childNodes":[{"type":"textNode","textContent":"\n    "},{"type":"area","attributes":[{"name":"shape","value":"rect"},{"name":"coords","value":"0,0,200,50"}]},{"type":"textNode","textContent":"\n"}]},{"type":"textNode","textContent":"\n\n"},{"type":"script","childNodes":[{"type":"textNode","textContent":"   function assert(a){} function assertEquals(a,b){}\n    var checks, $button;\n\n    document.getElementById(\"text1\").value = \"bla\";\n    assertEquals( jQuery(\"#text1\").val(), \"bla\", \"Check for modified value of input element\" );\n    document.getElementById('text1').value = \"Test\";\n    assertEquals( jQuery(\"#text1\").val(), \"Test\", \"Check for value of input element\" );\n    // ticket #1714 this caused a JS error in IE\n    assertEquals( jQuery(\"#first\").val(), \"\", \"Check a paragraph element to see if it has a value\" );\n    assert( jQuery([]).val() === undefined, \"Check an empty jQuery object will return undefined from val\" );\n\n    assertEquals( jQuery(\"#select2\").val(), \"3\", \"Call val() on a single='single' select\" );\n\n\n    assertEquals( jQuery(\"#option3c\").val(), \"2\", \"Call val() on a option element with value\" );\n\n    assertEquals( jQuery(\"#option3a\").val(), \"\", \"Call val() on a option element with empty value\" );\n\n    assertEquals( jQuery(\"#option3e\").val(), \"no value\", \"Call val() on a option element with no value attribute\" );\n\n    assertEquals( jQuery(\"#option3a\").val(), \"\", \"Call val() on a option element with no value attribute\" );\n\n\n    assertEquals( jQuery(\"#select5\").val(), \"3\", \"Check value on ambiguous select.\" );\n\n    jQuery(\"#select5\").val( 1 );\n    assertEquals( jQuery(\"#select5\").val(), \"1\", \"Check value on ambiguous select.\" );\n\n    jQuery(\"#select5\").val( 3 );\n    assertEquals( jQuery(\"#select5\").val(), \"3\", \"Check value on ambiguous select.\" );\n\n    assertEquals(\n            jQuery(\"<select name='select12584' id='select12584'><option value='1' disabled='disabled'>1</option></select>\").val(),\n            null,\n            \"Select-one with only option disabled (#12584)\"\n    );\n\n    if ( jQuery.fn.serialize ) {\n        checks = jQuery(\"<input type='checkbox' name='test' value='1'/><input type='checkbox' name='test' value='2'/><input type='checkbox' name='test' value=''/><input type='checkbox' name='test'/>\").appendTo(\"#form\");\n\n        assertEquals( checks.serialize(), \"\", \"Get unchecked values.\" );\n\n        assertEquals( checks.eq( 3 ).val(), \"on\", \"Make sure a value of 'on' is provided if none is specified.\" );\n\n        checks.val([ \"2\" ]);\n        assertEquals( checks.serialize(), \"test=2\", \"Get a single checked value.\" );\n\n        checks.val([ \"1\", \"\" ]);\n        assertEquals( checks.serialize(), \"test=1&test=\", \"Get multiple checked values.\" );\n\n        checks.val([ \"\", \"2\" ]);\n        assertEquals( checks.serialize(), \"test=2&test=\", \"Get multiple checked values.\" );\n\n        checks.val([ \"1\", \"on\" ]);\n        assertEquals( checks.serialize(), \"test=1&test=on\", \"Get multiple checked values.\" );\n\n        checks.remove();\n    }\n\n    $button = jQuery(\"<button value='foobar'>text</button>\").insertAfter(\"#button\");\n    assertEquals( $button.val(), \"foobar\", \"Value retrieval on a button does not return innerHTML\" );\n    assertEquals( $button.val(\"baz\").html(), \"text\", \"Setting the value does not change innerHTML\" );\n\n    assertEquals( jQuery(\"<option/>\").val(\"test\").attr(\"value\"), \"test\", \"Setting value sets the value attribute\" );\n"}]},{"type":"textNode","textContent":"\n\n\n"}]}]}